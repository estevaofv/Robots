

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Aug  7 03:50:23 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.43
    51                           ; Generated 25/07/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	idataCOMRAM
    86  001BDF                     __pidataCOMRAM:
    87                           	opt stack 0
    88                           
    89                           ;initializer for _es
    90  001BDF  0003               	dw	3
    91  001BE1  0005               	dw	5
    92                           
    93                           ;initializer for _ckd
    94                           ;twiddle.c: 7: double kp = 4, kd = 100;
    95  001BE3  CD                 	db	205
    96  001BE4  CC                 	db	204
    97  001BE5  3D                 	db	61
    98                           
    99                           ;initializer for _kd
   100  001BE6  00                 	db	0
   101  001BE7  C8                 	db	200
   102  001BE8  42                 	db	66
   103                           
   104                           ;initializer for _kp
   105  001BE9  00                 	db	0
   106  001BEA  80                 	db	128
   107  001BEB  40                 	db	64
   108                           
   109                           	psect	idataBANK0
   110  001BCC                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _ls
   114  001BCC  0008               	dw	8
   115  001BCE  0007               	dw	7
   116  001BD0  0006               	dw	6
   117  001BD2  0004               	dw	4
   118  001BD4  0002               	dw	2
   119                           
   120                           ;initializer for _cs
   121  001BD6  0000               	dw	0
   122  001BD8  0001               	dw	1
   123                           
   124                           ;initializer for _ckp
   125                           ;twiddle.c: 7: double kp = 4, kd = 100;
   126  001BDA  CD                 	db	205
   127  001BDB  CC                 	db	204
   128  001BDC  3D                 	db	61
   129                           
   130                           ;initializer for _status
   131  001BDD  0001               	dw	1
   132  0000                     _TXREG	set	4013
   133  0000                     _RCSTAbits	set	4011
   134  0000                     _TXSTAbits	set	4012
   135  0000                     _SPBRGH	set	4016
   136  0000                     _SPBRG	set	4015
   137  0000                     _BAUDCONbits	set	4024
   138  0000                     _PORTEbits	set	3972
   139  0000                     _TRISEbits	set	3990
   140  0000                     _TRISAbits	set	3986
   141  0000                     _TRISDbits	set	3989
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TRISBbits	set	3987
   144  0000                     _CCPR2L	set	4027
   145  0000                     _CCPR1L	set	4030
   146  0000                     _CCP2CONbits	set	4026
   147  0000                     _CCP1CONbits	set	4029
   148  0000                     _PR2	set	4043
   149  0000                     _T2CONbits	set	4042
   150  0000                     _TMR1L	set	4046
   151  0000                     _TMR1H	set	4047
   152  0000                     _T1CONbits	set	4045
   153  0000                     _INTCONbits	set	4082
   154  0000                     _RCONbits	set	4048
   155  0000                     _INTCON2bits	set	4081
   156  0000                     _TMR0L	set	4054
   157  0000                     _TMR0H	set	4055
   158  0000                     _T0CONbits	set	4053
   159  0000                     _UCFGbits	set	3951
   160  0000                     _UCONbits	set	3949
   161  0000                     _CMCON	set	4020
   162  0000                     _OSCCONbits	set	4051
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADCON1bits	set	4033
   168  0000                     _PORTAbits	set	3968
   169  0000                     _PORTCbits	set	3970
   170  0000                     _PORTBbits	set	3969
   171  0000                     _PORTDbits	set	3971
   172  0000                     _TXIF	set	31988
   173  0000                     _TMR0IF	set	32658
   174  0000                     _T2CKPS1	set	32337
   175  0000                     _T2CKPS0	set	32336
   176  0000                     _TMR2ON	set	32338
   177  0000                     _T2OUTPS3	set	32342
   178  0000                     _T2OUTPS2	set	32341
   179  0000                     _T2OUTPS1	set	32340
   180  0000                     _T2OUTPS0	set	32339
   181                           
   182                           ; #config settings
   183  0000                     
   184                           	psect	cinit
   185  0018AA                     __pcinit:
   186                           	opt stack 0
   187  0018AA                     start_initialization:
   188                           	opt stack 0
   189  0018AA                     __initialization:
   190                           	opt stack 0
   191                           
   192                           ; Initialize objects allocated to BANK0 (19 bytes)
   193                           ; load TBLPTR registers with __pidataBANK0
   194  0018AA  0ECC               	movlw	low __pidataBANK0
   195  0018AC  6EF6               	movwf	tblptrl,c
   196  0018AE  0E1B               	movlw	high __pidataBANK0
   197  0018B0  6EF7               	movwf	tblptrh,c
   198  0018B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   199  0018B4  6EF8               	movwf	tblptru,c
   200  0018B6  EE00  F0DB         	lfsr	0,__pdataBANK0
   201  0018BA  EE10 F013          	lfsr	1,19
   202  0018BE                     copy_data0:
   203  0018BE  0009               	tblrd		*+
   204  0018C0  CFF5 FFEE          	movff	tablat,postinc0
   205  0018C4  50E5               	movf	postdec1,w,c
   206  0018C6  50E1               	movf	fsr1l,w,c
   207  0018C8  E1FA               	bnz	copy_data0
   208                           
   209                           ; Initialize objects allocated to COMRAM (13 bytes)
   210                           ; load TBLPTR registers with __pidataCOMRAM
   211  0018CA  0EDF               	movlw	low __pidataCOMRAM
   212  0018CC  6EF6               	movwf	tblptrl,c
   213  0018CE  0E1B               	movlw	high __pidataCOMRAM
   214  0018D0  6EF7               	movwf	tblptrh,c
   215  0018D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   216  0018D4  6EF8               	movwf	tblptru,c
   217  0018D6  EE00  F038         	lfsr	0,__pdataCOMRAM
   218  0018DA  EE10 F00D          	lfsr	1,13
   219  0018DE                     copy_data1:
   220  0018DE  0009               	tblrd		*+
   221  0018E0  CFF5 FFEE          	movff	tablat,postinc0
   222  0018E4  50E5               	movf	postdec1,w,c
   223  0018E6  50E1               	movf	fsr1l,w,c
   224  0018E8  E1FA               	bnz	copy_data1
   225                           
   226                           ; Clear objects allocated to BANK1 (18 bytes)
   227  0018EA  EE01  F013         	lfsr	0,__pbssBANK1
   228  0018EE  0E12               	movlw	18
   229  0018F0                     clear_0:
   230  0018F0  6AEE               	clrf	postinc0,c
   231  0018F2  06E8               	decf	wreg,f,c
   232  0018F4  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BANK0 (98 bytes)
   235  0018F6  EE00  F060         	lfsr	0,__pbssBANK0
   236  0018FA  0E62               	movlw	98
   237  0018FC                     clear_1:
   238  0018FC  6AEE               	clrf	postinc0,c
   239  0018FE  06E8               	decf	wreg,f,c
   240  001900  E1FD               	bnz	clear_1
   241                           
   242                           ; Clear objects allocated to COMRAM (6 bytes)
   243  001902  6A4A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   244  001904  6A49               	clrf	(__pbssCOMRAM+4)& (0+255),c
   245  001906  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   246  001908  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   247  00190A  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   248  00190C  6A45               	clrf	__pbssCOMRAM& (0+255),c
   249  00190E                     end_of_initialization:
   250                           	opt stack 0
   251  00190E                     __end_of__initialization:
   252                           	opt stack 0
   253  00190E  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  001910  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  001912  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  001914  6EF8               	movwf	tblptru,c
   257  001916  0100               	movlb	0
   258  001918  EF09  F000         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	bssCOMRAM
   269  000045                     __pbssCOMRAM:
   270                           	opt stack 0
   271  000045                     _intern:
   272                           	opt stack 0
   273  000045                     	ds	2
   274  000047                     _best_err:
   275                           	opt stack 0
   276  000047                     	ds	2
   277  000049                     _i:
   278                           	opt stack 0
   279  000049                     	ds	2
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	dataCOMRAM
   290  000038                     __pdataCOMRAM:
   291                           	opt stack 0
   292  000038                     _es:
   293                           	opt stack 0
   294  000038                     	ds	4
   295  00003C                     _ckd:
   296                           	opt stack 0
   297  00003C                     	ds	3
   298  00003F                     _kd:
   299                           	opt stack 0
   300  00003F                     	ds	3
   301  000042                     _kp:
   302                           	opt stack 0
   303  000042                     	ds	3
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssBANK0
   314  000060                     __pbssBANK0:
   315                           	opt stack 0
   316  000060                     _time:
   317                           	opt stack 0
   318  000060                     	ds	40
   319  000088                     _old_lp:
   320                           	opt stack 0
   321  000088                     	ds	2
   322  00008A                     _lp:
   323                           	opt stack 0
   324  00008A                     	ds	2
   325  00008C                     _mins:
   326                           	opt stack 0
   327  00008C                     	ds	18
   328  00009E                     _maxs:
   329                           	opt stack 0
   330  00009E                     	ds	18
   331  0000B0                     _an:
   332                           	opt stack 0
   333  0000B0                     	ds	18
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	dataBANK0
   344  0000DB                     __pdataBANK0:
   345                           	opt stack 0
   346  0000DB                     _ls:
   347                           	opt stack 0
   348  0000DB                     	ds	10
   349  0000E5                     _cs:
   350                           	opt stack 0
   351  0000E5                     	ds	4
   352  0000E9                     _ckp:
   353                           	opt stack 0
   354  0000E9                     	ds	3
   355  0000EC                     _status:
   356                           	opt stack 0
   357  0000EC                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	bssBANK1
   368  000113                     __pbssBANK1:
   369                           	opt stack 0
   370  000113                     _calval:
   371                           	opt stack 0
   372  000113                     	ds	18
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	cstackBANK1
   383  000100                     __pcstackBANK1:
   384                           	opt stack 0
   385  000100                     main@der:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x0
   389  000100                     	ds	2
   390  000102                     main@a:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x2
   394  000102                     	ds	2
   395  000104                     main@b:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x4
   399  000104                     	ds	2
   400  000106                     main@i:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x6
   404  000106                     	ds	2
   405  000108                     main@i_338:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x8
   409  000108                     	ds	2
   410  00010A                     main@fs:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xA
   414  00010A                     	ds	2
   415  00010C                     main@faux:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419  00010C                     	ds	2
   420  00010E                     main@dif:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0xE
   424  00010E                     	ds	3
   425  000111                     main@speed:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x11
   429  000111                     	ds	2
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK0
   440  0000C2                     __pcstackBANK0:
   441                           	opt stack 0
   442  0000C2                     ??___ftadd:
   443  0000C2                     _line_cal$2246:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x0
   447  0000C2                     	ds	3
   448  0000C5                     ___ftadd@sign:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x3
   452  0000C5                     	ds	1
   453  0000C6                     ___ftadd@exp2:
   454                           	opt stack 0
   455  0000C6                     line_cal@a:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x4
   459  0000C6                     	ds	1
   460  0000C7                     ___ftadd@exp1:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x5
   464  0000C7                     	ds	1
   465  0000C8                     ?___fttol:
   466                           	opt stack 0
   467  0000C8                     ___fttol@f1:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0x6
   471  0000C8                     	ds	2
   472  0000CA                     line_cal@b:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x8
   476  0000CA                     	ds	2
   477  0000CC                     ??___fttol:
   478                           
   479                           ; 1 bytes @ 0xA
   480  0000CC                     	ds	2
   481  0000CE                     line_cal@ok:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0xC
   485  0000CE                     	ds	2
   486  0000D0                     line_cal@value:
   487                           	opt stack 0
   488                           
   489                           ; 4 bytes @ 0xE
   490  0000D0                     	ds	1
   491  0000D1                     ___fttol@sign1:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0xF
   495  0000D1                     	ds	1
   496  0000D2                     ___fttol@lval:
   497                           	opt stack 0
   498                           
   499                           ; 4 bytes @ 0x10
   500  0000D2                     	ds	2
   501  0000D4                     line_cal@aux:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x12
   505  0000D4                     	ds	2
   506  0000D6                     ___fttol@exp1:
   507                           	opt stack 0
   508  0000D6                     line_cal@i:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x14
   512  0000D6                     	ds	1
   513  0000D7                     mspeed@a:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x15
   517  0000D7                     	ds	1
   518  0000D8                     line_cal@j:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x16
   522  0000D8                     	ds	1
   523  0000D9                     mspeed@b:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x17
   527  0000D9                     	ds	2
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           
   537                           	psect	cstackCOMRAM
   538  000001                     __pcstackCOMRAM:
   539                           	opt stack 0
   540  000001                     ??_enc:
   541                           
   542                           ; 1 bytes @ 0x0
   543  000001                     	ds	20
   544  000015                     ??_read_cal:
   545  000015                     ?___awdiv:
   546                           	opt stack 0
   547  000015                     ?___ftpack:
   548                           	opt stack 0
   549  000015                     ?___ftneg:
   550                           	opt stack 0
   551  000015                     ?___lmul:
   552                           	opt stack 0
   553  000015                     ?___almod:
   554                           	opt stack 0
   555  000015                     init_cal@i:
   556                           	opt stack 0
   557  000015                     ___awdiv@dividend:
   558                           	opt stack 0
   559  000015                     ___ftpack@arg:
   560                           	opt stack 0
   561  000015                     ___ftge@ff1:
   562                           	opt stack 0
   563  000015                     ___ftneg@f1:
   564                           	opt stack 0
   565  000015                     ___lmul@multiplier:
   566                           	opt stack 0
   567  000015                     ___almod@dividend:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x14
   571  000015                     	ds	2
   572  000017                     ___awdiv@divisor:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x16
   576  000017                     	ds	1
   577  000018                     ___ftpack@exp:
   578                           	opt stack 0
   579  000018                     ___ftge@ff2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x17
   583  000018                     	ds	1
   584  000019                     ___awdiv@counter:
   585                           	opt stack 0
   586  000019                     ___ftpack@sign:
   587                           	opt stack 0
   588  000019                     ___lmul@multiplicand:
   589                           	opt stack 0
   590  000019                     ___almod@divisor:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x18
   594  000019                     	ds	1
   595  00001A                     ??___ftpack:
   596  00001A                     ___awdiv@sign:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x19
   600  00001A                     	ds	1
   601  00001B                     ??___ftge:
   602  00001B                     ___awdiv@quotient:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606  00001B                     	ds	2
   607  00001D                     ??_EnhancedRead:
   608  00001D                     ?___awtoft:
   609                           	opt stack 0
   610  00001D                     ___almod@counter:
   611                           	opt stack 0
   612  00001D                     MotorASpeed@S:
   613                           	opt stack 0
   614  00001D                     MotorBSpeed@S:
   615                           	opt stack 0
   616  00001D                     ___awtoft@c:
   617                           	opt stack 0
   618  00001D                     ___lmul@product:
   619                           	opt stack 0
   620                           
   621                           ; 4 bytes @ 0x1C
   622  00001D                     	ds	1
   623  00001E                     ___almod@sign:
   624                           	opt stack 0
   625  00001E                     EnhancedRead@aux:
   626                           	opt stack 0
   627  00001E                     _read_cal$503:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x1D
   631  00001E                     	ds	1
   632  00001F                     ??_MotorASpeed:
   633  00001F                     ??_MotorBSpeed:
   634                           
   635                           ; 1 bytes @ 0x1E
   636  00001F                     	ds	1
   637  000020                     EnhancedRead@i:
   638                           	opt stack 0
   639  000020                     ___awtoft@sign:
   640                           	opt stack 0
   641  000020                     _read_cal$505:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x1F
   645  000020                     	ds	1
   646  000021                     ?___ftmul:
   647                           	opt stack 0
   648  000021                     ?___aldiv:
   649                           	opt stack 0
   650  000021                     ___ftmul@f1:
   651                           	opt stack 0
   652  000021                     ___aldiv@dividend:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x20
   656  000021                     	ds	1
   657  000022                     _read_cal$507:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x21
   661  000022                     	ds	2
   662  000024                     _read_cal$509:
   663                           	opt stack 0
   664  000024                     ___ftmul@f2:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x23
   668  000024                     	ds	1
   669  000025                     ___aldiv@divisor:
   670                           	opt stack 0
   671                           
   672                           ; 4 bytes @ 0x24
   673  000025                     	ds	1
   674  000026                     read_cal@i:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x25
   678  000026                     	ds	1
   679  000027                     ??___ftmul:
   680                           
   681                           ; 1 bytes @ 0x26
   682  000027                     	ds	2
   683  000029                     ___aldiv@counter:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x28
   687  000029                     	ds	1
   688  00002A                     ___aldiv@sign:
   689                           	opt stack 0
   690  00002A                     ___ftmul@exp:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x29
   694  00002A                     	ds	1
   695  00002B                     ___ftmul@f3_as_product:
   696                           	opt stack 0
   697  00002B                     ___aldiv@quotient:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x2A
   701  00002B                     	ds	3
   702  00002E                     ___ftmul@cntr:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x2D
   706  00002E                     	ds	1
   707  00002F                     ??_line_cal:
   708  00002F                     ___ftmul@sign:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x2E
   712  00002F                     	ds	1
   713  000030                     ?___ftadd:
   714                           	opt stack 0
   715  000030                     ___ftadd@f1:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x2F
   719  000030                     	ds	3
   720  000033                     ___ftadd@f2:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x32
   724  000033                     	ds	3
   725  000036                     ??_main:
   726                           
   727                           ; 1 bytes @ 0x35
   728  000036                     	ds	2
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1l	equ	0xFE1
   737                           
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 24 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  i               2    8[BANK1 ] int 
   748 ;;  i               2    6[BANK1 ] int 
   749 ;;  dif             3   14[BANK1 ] int 
   750 ;;  speed           2   17[BANK1 ] int 
   751 ;;  der             2    0[BANK1 ] int 
   752 ;;  faux            2   12[BANK1 ] int 
   753 ;;  fs              2   10[BANK1 ] int 
   754 ;;  b               2    4[BANK1 ] int 
   755 ;;  a               2    2[BANK1 ] int 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0      19       0       0       0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0
   768 ;;      Totals:         2       0      19       0       0       0       0       0       0
   769 ;;Total ram usage:       21 bytes
   770 ;; Hardware stack levels required when called:    4
   771 ;; This function calls:
   772 ;;		_EnhancedRead
   773 ;;		___almod
   774 ;;		___awtoft
   775 ;;		___ftadd
   776 ;;		___ftge
   777 ;;		___ftmul
   778 ;;		___ftneg
   779 ;;		___fttol
   780 ;;		_init_cal
   781 ;;		_init_tms
   782 ;;		_line_cal
   783 ;;		_mspeed
   784 ;;		_read_cal
   785 ;;		_setA
   786 ;;		_setB
   787 ;;		_setC
   788 ;;		_setD
   789 ;;		_twidde_start
   790 ;; This function is called by:
   791 ;;		Startup code after reset
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text0
   796  000012                     __ptext0:
   797                           	opt stack 0
   798  000012                     _main:
   799                           	opt stack 27
   800                           
   801                           ;main.c: 25: init_tms();
   802                           
   803                           ;incstack = 0
   804  000012  EC27  F00D         	call	_init_tms	;wreg free
   805                           
   806                           ;main.c: 29: status = INIT;
   807  000016  0E00               	movlw	0
   808  000018  0100               	movlb	0	; () banked
   809  00001A  6FED               	movwf	(_status+1)& (0+255),b
   810  00001C  0E01               	movlw	1
   811  00001E  6FEC               	movwf	_status& (0+255),b
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 30: int fs = 0;
   815  000020  0E00               	movlw	0
   816  000022  0101               	movlb	1	; () banked
   817  000024  6F0B               	movwf	(main@fs+1)& (0+255),b
   818  000026  0E00               	movlw	0
   819  000028  6F0A               	movwf	main@fs& (0+255),b
   820                           
   821                           ; BSR set to: 1
   822                           ;main.c: 31: time[1] = 0;
   823  00002A  0E00               	movlw	0
   824  00002C  0100               	movlb	0	; () banked
   825  00002E  6F64               	movwf	(_time+4)& (0+255),b
   826  000030  0E00               	movlw	0
   827  000032  6F65               	movwf	(_time+5)& (0+255),b
   828  000034  0E00               	movlw	0
   829  000036  6F66               	movwf	(_time+6)& (0+255),b
   830  000038  0E00               	movlw	0
   831  00003A  6F67               	movwf	(_time+7)& (0+255),b
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 32: mspeed(0,0);
   835  00003C  0E00               	movlw	0
   836  00003E  0100               	movlb	0	; () banked
   837  000040  6FD8               	movwf	(mspeed@a+1)& (0+255),b
   838  000042  0E00               	movlw	0
   839  000044  6FD7               	movwf	mspeed@a& (0+255),b
   840  000046  0E00               	movlw	0
   841  000048  0100               	movlb	0	; () banked
   842  00004A  6FDA               	movwf	(mspeed@b+1)& (0+255),b
   843  00004C  0E00               	movlw	0
   844  00004E  6FD9               	movwf	mspeed@b& (0+255),b
   845  000050  ECD9  F00D         	call	_mspeed	;wreg free
   846  000054                     
   847                           ;main.c: 33: int faux = 0;
   848  000054  0E00               	movlw	0
   849  000056  0101               	movlb	1	; () banked
   850  000058  6F0D               	movwf	(main@faux+1)& (0+255),b
   851  00005A  0E00               	movlw	0
   852  00005C  6F0C               	movwf	main@faux& (0+255),b
   853  00005E                     
   854                           ;main.c: 36: EnhancedRead();
   855                           
   856                           ; BSR set to: 1
   857  00005E  ECC7  F00C         	call	_EnhancedRead	;wreg free
   858                           
   859                           ;main.c: 38: switch (status){
   860  000062  D32A               	goto	l44
   861  000064                     
   862                           ;main.c: 40: mspeed(0,0);
   863  000064  0E00               	movlw	0
   864  000066  0100               	movlb	0	; () banked
   865  000068  6FD8               	movwf	(mspeed@a+1)& (0+255),b
   866  00006A  0E00               	movlw	0
   867  00006C  6FD7               	movwf	mspeed@a& (0+255),b
   868  00006E  0E00               	movlw	0
   869  000070  0100               	movlb	0	; () banked
   870  000072  6FDA               	movwf	(mspeed@b+1)& (0+255),b
   871  000074  0E00               	movlw	0
   872  000076  6FD9               	movwf	mspeed@b& (0+255),b
   873  000078  ECD9  F00D         	call	_mspeed	;wreg free
   874                           
   875                           ;main.c: 41: if (PORTDbits.RD0 == 0){
   876  00007C  B083               	btfsc	3971,0,c	;volatile
   877  00007E  D007               	goto	l46
   878                           
   879                           ;main.c: 42: PORTBbits.RB4 = 1;
   880  000080  8881               	bsf	3969,4,c	;volatile
   881                           
   882                           ;main.c: 43: PORTDbits.RD2 = 1;
   883  000082  8483               	bsf	3971,2,c	;volatile
   884                           
   885                           ;main.c: 44: a = 1000;
   886  000084  0E03               	movlw	3
   887  000086  0101               	movlb	1	; () banked
   888  000088  6F03               	movwf	(main@a+1)& (0+255),b
   889  00008A  0EE8               	movlw	232
   890  00008C  D006               	goto	L1
   891  00008E                     l46:
   892                           
   893                           ;main.c: 46: PORTBbits.RB4 = 0;
   894  00008E  9881               	bcf	3969,4,c	;volatile
   895                           
   896                           ;main.c: 47: PORTDbits.RD2 = 0;
   897  000090  9483               	bcf	3971,2,c	;volatile
   898                           
   899                           ;main.c: 48: a = 0;
   900  000092  0E00               	movlw	0
   901  000094  0101               	movlb	1	; () banked
   902  000096  6F03               	movwf	(main@a+1)& (0+255),b
   903  000098  0E00               	movlw	0
   904  00009A                     L1:
   905  00009A  6F02               	movwf	main@a& (0+255),b
   906                           
   907                           ; BSR set to: 1
   908                           ;main.c: 49: }
   909                           ;main.c: 50: if (PORTDbits.RD1 == 0){
   910                           
   911                           ; BSR set to: 1
   912  00009C  B283               	btfsc	3971,1,c	;volatile
   913  00009E  D008               	goto	l48
   914                           
   915                           ; BSR set to: 1
   916                           ;main.c: 51: b = 1000;
   917  0000A0  0E03               	movlw	3
   918  0000A2  0101               	movlb	1	; () banked
   919  0000A4  6F05               	movwf	(main@b+1)& (0+255),b
   920  0000A6  0EE8               	movlw	232
   921  0000A8  6F04               	movwf	main@b& (0+255),b
   922                           
   923                           ; BSR set to: 1
   924                           ;main.c: 52: PORTCbits.RC1 = 1;
   925  0000AA  8282               	bsf	3970,1,c	;volatile
   926                           
   927                           ; BSR set to: 1
   928                           ;main.c: 53: PORTAbits.RA4 = 1;
   929  0000AC  8880               	bsf	3968,4,c	;volatile
   930                           
   931                           ;main.c: 54: }else{
   932  0000AE  D007               	goto	l49
   933  0000B0                     l48:
   934                           
   935                           ; BSR set to: 1
   936                           ;main.c: 55: PORTCbits.RC1 = 0;
   937  0000B0  9282               	bcf	3970,1,c	;volatile
   938                           
   939                           ;main.c: 56: PORTAbits.RA4 = 0;
   940  0000B2  9880               	bcf	3968,4,c	;volatile
   941                           
   942                           ; BSR set to: 1
   943                           ;main.c: 57: b = 0;
   944  0000B4  0E00               	movlw	0
   945  0000B6  0101               	movlb	1	; () banked
   946  0000B8  6F05               	movwf	(main@b+1)& (0+255),b
   947  0000BA  0E00               	movlw	0
   948  0000BC  6F04               	movwf	main@b& (0+255),b
   949  0000BE                     l49:
   950                           
   951                           ; BSR set to: 1
   952                           ;main.c: 58: }
   953                           ;main.c: 59: mspeed(a,b);
   954                           
   955                           ; BSR set to: 1
   956  0000BE  C102  F0D7         	movff	main@a,mspeed@a
   957  0000C2  C103  F0D8         	movff	main@a+1,mspeed@a+1
   958  0000C6  C104  F0D9         	movff	main@b,mspeed@b
   959  0000CA  C105  F0DA         	movff	main@b+1,mspeed@b+1
   960  0000CE  ECD9  F00D         	call	_mspeed	;wreg free
   961                           
   962                           ;main.c: 61: if (time[0] > 200 && faux == 0){
   963  0000D2  0100               	movlb	0	; () banked
   964  0000D4  BF63               	btfsc	(_time+3)& (0+255),7,b
   965  0000D6  D017               	goto	l50
   966  0000D8  0100               	movlb	0	; () banked
   967  0000DA  5163               	movf	(_time+3)& (0+255),w,b
   968  0000DC  0100               	movlb	0	; () banked
   969  0000DE  1162               	iorwf	(_time+2)& (0+255),w,b
   970  0000E0  0100               	movlb	0	; () banked
   971  0000E2  1161               	iorwf	(_time+1)& (0+255),w,b
   972  0000E4  E105               	bnz	u4230
   973  0000E6  0EC9               	movlw	201
   974  0000E8  0100               	movlb	0	; () banked
   975  0000EA  5D60               	subwf	_time& (0+255),w,b
   976  0000EC  A0D8               	btfss	status,0,c
   977  0000EE  D00B               	goto	l50
   978  0000F0                     u4230:
   979                           
   980                           ; BSR set to: 0
   981  0000F0  0101               	movlb	1	; () banked
   982  0000F2  510C               	movf	main@faux& (0+255),w,b
   983  0000F4  0101               	movlb	1	; () banked
   984  0000F6  110D               	iorwf	(main@faux+1)& (0+255),w,b
   985  0000F8  A4D8               	btfss	status,2,c
   986  0000FA  D005               	goto	l50
   987                           
   988                           ; BSR set to: 1
   989                           ;main.c: 63: faux = 1;
   990  0000FC  0E00               	movlw	0
   991  0000FE  0101               	movlb	1	; () banked
   992  000100  6F0D               	movwf	(main@faux+1)& (0+255),b
   993  000102  0E01               	movlw	1
   994  000104  6F0C               	movwf	main@faux& (0+255),b
   995  000106                     l50:
   996                           
   997                           ;main.c: 64: }
   998                           ;main.c: 65: if (faux == 1 && time[0] > 400){
   999                           
  1000                           ; BSR set to: 1
  1001  000106  0101               	movlb	1	; () banked
  1002  000108  050C               	decf	main@faux& (0+255),w,b
  1003  00010A  0101               	movlb	1	; () banked
  1004  00010C  110D               	iorwf	(main@faux+1)& (0+255),w,b
  1005  00010E  A4D8               	btfss	status,2,c
  1006  000110  D7A6               	goto	l43
  1007                           
  1008                           ; BSR set to: 1
  1009  000112  0100               	movlb	0	; () banked
  1010  000114  BF63               	btfsc	(_time+3)& (0+255),7,b
  1011  000116  D7A3               	goto	l43
  1012  000118  0100               	movlb	0	; () banked
  1013  00011A  5163               	movf	(_time+3)& (0+255),w,b
  1014  00011C  0100               	movlb	0	; () banked
  1015  00011E  1162               	iorwf	(_time+2)& (0+255),w,b
  1016  000120  E108               	bnz	u4260
  1017  000122  0E91               	movlw	145
  1018  000124  0100               	movlb	0	; () banked
  1019  000126  5D60               	subwf	_time& (0+255),w,b
  1020  000128  0E01               	movlw	1
  1021  00012A  0100               	movlb	0	; () banked
  1022  00012C  5961               	subwfb	(_time+1)& (0+255),w,b
  1023  00012E  A0D8               	btfss	status,0,c
  1024  000130  D796               	goto	l43
  1025  000132                     u4260:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 67: time[0] = 0;
  1029  000132  0E00               	movlw	0
  1030  000134  0100               	movlb	0	; () banked
  1031  000136  6F60               	movwf	_time& (0+255),b
  1032  000138  0E00               	movlw	0
  1033  00013A  6F61               	movwf	(_time+1)& (0+255),b
  1034  00013C  0E00               	movlw	0
  1035  00013E  6F62               	movwf	(_time+2)& (0+255),b
  1036  000140  0E00               	movlw	0
  1037  000142  6F63               	movwf	(_time+3)& (0+255),b
  1038  000144  D787               	goto	L11
  1039  000146                     
  1040                           ;main.c: 74: mspeed(0,0);
  1041                           
  1042                           ; BSR set to: 1
  1043  000146  0E00               	movlw	0
  1044  000148  0100               	movlb	0	; () banked
  1045  00014A  6FD8               	movwf	(mspeed@a+1)& (0+255),b
  1046  00014C  0E00               	movlw	0
  1047  00014E  6FD7               	movwf	mspeed@a& (0+255),b
  1048  000150  0E00               	movlw	0
  1049  000152  0100               	movlb	0	; () banked
  1050  000154  6FDA               	movwf	(mspeed@b+1)& (0+255),b
  1051  000156  0E00               	movlw	0
  1052  000158  6FD9               	movwf	mspeed@b& (0+255),b
  1053  00015A  ECD9  F00D         	call	_mspeed	;wreg free
  1054                           
  1055                           ;main.c: 75: if (fs == 0 && time[1] > 2000){
  1056  00015E  0101               	movlb	1	; () banked
  1057  000160  510A               	movf	main@fs& (0+255),w,b
  1058  000162  0101               	movlb	1	; () banked
  1059  000164  110B               	iorwf	(main@fs+1)& (0+255),w,b
  1060  000166  A4D8               	btfss	status,2,c
  1061  000168  D015               	goto	l54
  1062                           
  1063                           ; BSR set to: 1
  1064  00016A  0100               	movlb	0	; () banked
  1065  00016C  BF67               	btfsc	(_time+7)& (0+255),7,b
  1066  00016E  D012               	goto	l54
  1067  000170  0100               	movlb	0	; () banked
  1068  000172  5167               	movf	(_time+7)& (0+255),w,b
  1069  000174  0100               	movlb	0	; () banked
  1070  000176  1166               	iorwf	(_time+6)& (0+255),w,b
  1071  000178  E108               	bnz	u4280
  1072  00017A  0ED1               	movlw	209
  1073  00017C  0100               	movlb	0	; () banked
  1074  00017E  5D64               	subwf	(_time+4)& (0+255),w,b
  1075  000180  0E07               	movlw	7
  1076  000182  0100               	movlb	0	; () banked
  1077  000184  5965               	subwfb	(_time+5)& (0+255),w,b
  1078  000186  A0D8               	btfss	status,0,c
  1079  000188  D005               	goto	l54
  1080  00018A                     u4280:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 77: fs = 1;
  1084  00018A  0E00               	movlw	0
  1085  00018C  0101               	movlb	1	; () banked
  1086  00018E  6F0B               	movwf	(main@fs+1)& (0+255),b
  1087  000190  0E01               	movlw	1
  1088  000192  6F0A               	movwf	main@fs& (0+255),b
  1089  000194                     l54:
  1090                           
  1091                           ;main.c: 78: }
  1092                           ;main.c: 79: if (fs == 1 && time[1] > 4000){
  1093                           
  1094                           ; BSR set to: 1
  1095  000194  0101               	movlb	1	; () banked
  1096  000196  050A               	decf	main@fs& (0+255),w,b
  1097  000198  0101               	movlb	1	; () banked
  1098  00019A  110B               	iorwf	(main@fs+1)& (0+255),w,b
  1099  00019C  A4D8               	btfss	status,2,c
  1100  00019E  D015               	goto	l55
  1101                           
  1102                           ; BSR set to: 1
  1103  0001A0  0100               	movlb	0	; () banked
  1104  0001A2  BF67               	btfsc	(_time+7)& (0+255),7,b
  1105  0001A4  D012               	goto	l55
  1106  0001A6  0100               	movlb	0	; () banked
  1107  0001A8  5167               	movf	(_time+7)& (0+255),w,b
  1108  0001AA  0100               	movlb	0	; () banked
  1109  0001AC  1166               	iorwf	(_time+6)& (0+255),w,b
  1110  0001AE  E108               	bnz	u4300
  1111  0001B0  0EA1               	movlw	161
  1112  0001B2  0100               	movlb	0	; () banked
  1113  0001B4  5D64               	subwf	(_time+4)& (0+255),w,b
  1114  0001B6  0E0F               	movlw	15
  1115  0001B8  0100               	movlb	0	; () banked
  1116  0001BA  5965               	subwfb	(_time+5)& (0+255),w,b
  1117  0001BC  A0D8               	btfss	status,0,c
  1118  0001BE  D005               	goto	l55
  1119  0001C0                     u4300:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 81: fs = 2;
  1123  0001C0  0E00               	movlw	0
  1124  0001C2  0101               	movlb	1	; () banked
  1125  0001C4  6F0B               	movwf	(main@fs+1)& (0+255),b
  1126  0001C6  0E02               	movlw	2
  1127  0001C8  6F0A               	movwf	main@fs& (0+255),b
  1128  0001CA                     l55:
  1129                           
  1130                           ;main.c: 82: }
  1131                           ;main.c: 83: if (time[0] < 1000) setA();
  1132                           
  1133                           ; BSR set to: 1
  1134  0001CA  0100               	movlb	0	; () banked
  1135  0001CC  BF63               	btfsc	(_time+3)& (0+255),7,b
  1136  0001CE  D00C               	goto	u4310
  1137  0001D0  0100               	movlb	0	; () banked
  1138  0001D2  5163               	movf	(_time+3)& (0+255),w,b
  1139  0001D4  0100               	movlb	0	; () banked
  1140  0001D6  1162               	iorwf	(_time+2)& (0+255),w,b
  1141  0001D8  E109               	bnz	l3603
  1142  0001DA  0EE8               	movlw	232
  1143  0001DC  0100               	movlb	0	; () banked
  1144  0001DE  5D60               	subwf	_time& (0+255),w,b
  1145  0001E0  0E03               	movlw	3
  1146  0001E2  0100               	movlb	0	; () banked
  1147  0001E4  5961               	subwfb	(_time+1)& (0+255),w,b
  1148  0001E6  A0D8               	btfss	status,0,c
  1149  0001E8                     u4310:
  1150                           
  1151                           ; BSR set to: 0
  1152  0001E8  EC05  F00E         	call	_setA	;wreg free
  1153  0001EC                     l3603:
  1154                           
  1155                           ;main.c: 84: if (time[0] > 1000 && time[0] < 2000) setB();
  1156  0001EC  0100               	movlb	0	; () banked
  1157  0001EE  BF63               	btfsc	(_time+3)& (0+255),7,b
  1158  0001F0  D01E               	goto	l57
  1159  0001F2  0100               	movlb	0	; () banked
  1160  0001F4  5163               	movf	(_time+3)& (0+255),w,b
  1161  0001F6  0100               	movlb	0	; () banked
  1162  0001F8  1162               	iorwf	(_time+2)& (0+255),w,b
  1163  0001FA  E108               	bnz	u4320
  1164  0001FC  0EE9               	movlw	233
  1165  0001FE  0100               	movlb	0	; () banked
  1166  000200  5D60               	subwf	_time& (0+255),w,b
  1167  000202  0E03               	movlw	3
  1168  000204  0100               	movlb	0	; () banked
  1169  000206  5961               	subwfb	(_time+1)& (0+255),w,b
  1170  000208  A0D8               	btfss	status,0,c
  1171  00020A  D011               	goto	l57
  1172  00020C                     u4320:
  1173                           
  1174                           ; BSR set to: 0
  1175  00020C  0100               	movlb	0	; () banked
  1176  00020E  BF63               	btfsc	(_time+3)& (0+255),7,b
  1177  000210  D00C               	goto	u4330
  1178  000212  0100               	movlb	0	; () banked
  1179  000214  5163               	movf	(_time+3)& (0+255),w,b
  1180  000216  0100               	movlb	0	; () banked
  1181  000218  1162               	iorwf	(_time+2)& (0+255),w,b
  1182  00021A  E109               	bnz	l3609
  1183  00021C  0ED0               	movlw	208
  1184  00021E  0100               	movlb	0	; () banked
  1185  000220  5D60               	subwf	_time& (0+255),w,b
  1186  000222  0E07               	movlw	7
  1187  000224  0100               	movlb	0	; () banked
  1188  000226  5961               	subwfb	(_time+1)& (0+255),w,b
  1189  000228  A0D8               	btfss	status,0,c
  1190  00022A                     u4330:
  1191                           
  1192                           ; BSR set to: 0
  1193  00022A  EC00  F00E         	call	_setB	;wreg free
  1194  00022E                     l57:
  1195  00022E                     l3609:
  1196                           
  1197                           ;main.c: 85: if (time[0] > 2000 && time[0] < 3000) setC();
  1198  00022E  0100               	movlb	0	; () banked
  1199  000230  BF63               	btfsc	(_time+3)& (0+255),7,b
  1200  000232  D01E               	goto	l58
  1201  000234  0100               	movlb	0	; () banked
  1202  000236  5163               	movf	(_time+3)& (0+255),w,b
  1203  000238  0100               	movlb	0	; () banked
  1204  00023A  1162               	iorwf	(_time+2)& (0+255),w,b
  1205  00023C  E108               	bnz	u4340
  1206  00023E  0ED1               	movlw	209
  1207  000240  0100               	movlb	0	; () banked
  1208  000242  5D60               	subwf	_time& (0+255),w,b
  1209  000244  0E07               	movlw	7
  1210  000246  0100               	movlb	0	; () banked
  1211  000248  5961               	subwfb	(_time+1)& (0+255),w,b
  1212  00024A  A0D8               	btfss	status,0,c
  1213  00024C  D011               	goto	l58
  1214  00024E                     u4340:
  1215                           
  1216                           ; BSR set to: 0
  1217  00024E  0100               	movlb	0	; () banked
  1218  000250  BF63               	btfsc	(_time+3)& (0+255),7,b
  1219  000252  D00C               	goto	u4350
  1220  000254  0100               	movlb	0	; () banked
  1221  000256  5163               	movf	(_time+3)& (0+255),w,b
  1222  000258  0100               	movlb	0	; () banked
  1223  00025A  1162               	iorwf	(_time+2)& (0+255),w,b
  1224  00025C  E109               	bnz	l3615
  1225  00025E  0EB8               	movlw	184
  1226  000260  0100               	movlb	0	; () banked
  1227  000262  5D60               	subwf	_time& (0+255),w,b
  1228  000264  0E0B               	movlw	11
  1229  000266  0100               	movlb	0	; () banked
  1230  000268  5961               	subwfb	(_time+1)& (0+255),w,b
  1231  00026A  A0D8               	btfss	status,0,c
  1232  00026C                     u4350:
  1233                           
  1234                           ; BSR set to: 0
  1235  00026C  ECFB  F00D         	call	_setC	;wreg free
  1236  000270                     l58:
  1237  000270                     l3615:
  1238                           
  1239                           ;main.c: 86: if (time[0] > 3000 && time[0] < 4000) setD();
  1240  000270  0100               	movlb	0	; () banked
  1241  000272  BF63               	btfsc	(_time+3)& (0+255),7,b
  1242  000274  D01E               	goto	l59
  1243  000276  0100               	movlb	0	; () banked
  1244  000278  5163               	movf	(_time+3)& (0+255),w,b
  1245  00027A  0100               	movlb	0	; () banked
  1246  00027C  1162               	iorwf	(_time+2)& (0+255),w,b
  1247  00027E  E108               	bnz	u4360
  1248  000280  0EB9               	movlw	185
  1249  000282  0100               	movlb	0	; () banked
  1250  000284  5D60               	subwf	_time& (0+255),w,b
  1251  000286  0E0B               	movlw	11
  1252  000288  0100               	movlb	0	; () banked
  1253  00028A  5961               	subwfb	(_time+1)& (0+255),w,b
  1254  00028C  A0D8               	btfss	status,0,c
  1255  00028E  D011               	goto	l59
  1256  000290                     u4360:
  1257                           
  1258                           ; BSR set to: 0
  1259  000290  0100               	movlb	0	; () banked
  1260  000292  BF63               	btfsc	(_time+3)& (0+255),7,b
  1261  000294  D00C               	goto	u4370
  1262  000296  0100               	movlb	0	; () banked
  1263  000298  5163               	movf	(_time+3)& (0+255),w,b
  1264  00029A  0100               	movlb	0	; () banked
  1265  00029C  1162               	iorwf	(_time+2)& (0+255),w,b
  1266  00029E  E109               	bnz	l3621
  1267  0002A0  0EA0               	movlw	160
  1268  0002A2  0100               	movlb	0	; () banked
  1269  0002A4  5D60               	subwf	_time& (0+255),w,b
  1270  0002A6  0E0F               	movlw	15
  1271  0002A8  0100               	movlb	0	; () banked
  1272  0002AA  5961               	subwfb	(_time+1)& (0+255),w,b
  1273  0002AC  A0D8               	btfss	status,0,c
  1274  0002AE                     u4370:
  1275                           
  1276                           ; BSR set to: 0
  1277  0002AE  ECF6  F00D         	call	_setD	;wreg free
  1278  0002B2                     l59:
  1279  0002B2                     l3621:
  1280                           
  1281                           ;main.c: 87: if (time[0] > 4000) time[0] = 0;
  1282  0002B2  0100               	movlb	0	; () banked
  1283  0002B4  BF63               	btfsc	(_time+3)& (0+255),7,b
  1284  0002B6  D016               	goto	l60
  1285  0002B8  0100               	movlb	0	; () banked
  1286  0002BA  5163               	movf	(_time+3)& (0+255),w,b
  1287  0002BC  0100               	movlb	0	; () banked
  1288  0002BE  1162               	iorwf	(_time+2)& (0+255),w,b
  1289  0002C0  E108               	bnz	u4380
  1290  0002C2  0EA1               	movlw	161
  1291  0002C4  0100               	movlb	0	; () banked
  1292  0002C6  5D60               	subwf	_time& (0+255),w,b
  1293  0002C8  0E0F               	movlw	15
  1294  0002CA  0100               	movlb	0	; () banked
  1295  0002CC  5961               	subwfb	(_time+1)& (0+255),w,b
  1296  0002CE  A0D8               	btfss	status,0,c
  1297  0002D0  D009               	goto	l60
  1298  0002D2                     u4380:
  1299                           
  1300                           ; BSR set to: 0
  1301  0002D2  0E00               	movlw	0
  1302  0002D4  0100               	movlb	0	; () banked
  1303  0002D6  6F60               	movwf	_time& (0+255),b
  1304  0002D8  0E00               	movlw	0
  1305  0002DA  6F61               	movwf	(_time+1)& (0+255),b
  1306  0002DC  0E00               	movlw	0
  1307  0002DE  6F62               	movwf	(_time+2)& (0+255),b
  1308  0002E0  0E00               	movlw	0
  1309  0002E2  6F63               	movwf	(_time+3)& (0+255),b
  1310  0002E4                     l60:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;main.c: 89: if (PORTDbits.RD0 == 0){
  1314                           
  1315                           ; BSR set to: 0
  1316  0002E4  B083               	btfsc	3971,0,c	;volatile
  1317  0002E6  D6BB               	goto	l43
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 91: status = CAL;
  1321  0002E8  0E00               	movlw	0
  1322  0002EA  0100               	movlb	0	; () banked
  1323  0002EC  6FED               	movwf	(_status+1)& (0+255),b
  1324  0002EE  0E02               	movlw	2
  1325  0002F0  6FEC               	movwf	_status& (0+255),b
  1326                           
  1327                           ;main.c: 92: time[0] = 0;
  1328  0002F2  0E00               	movlw	0
  1329  0002F4  0100               	movlb	0	; () banked
  1330  0002F6  6F60               	movwf	_time& (0+255),b
  1331  0002F8  0E00               	movlw	0
  1332  0002FA  6F61               	movwf	(_time+1)& (0+255),b
  1333  0002FC  0E00               	movlw	0
  1334  0002FE  6F62               	movwf	(_time+2)& (0+255),b
  1335  000300  0E00               	movlw	0
  1336  000302  6F63               	movwf	(_time+3)& (0+255),b
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 93: init_cal();
  1340  000304  EC8E  F00C         	call	_init_cal	;wreg free
  1341                           
  1342                           ;main.c: 94: }
  1343                           ;main.c: 95: break;
  1344  000308  D6AA               	goto	l43
  1345  00030A                     
  1346                           ;main.c: 97: mspeed(0,0);
  1347  00030A  0E00               	movlw	0
  1348  00030C  0100               	movlb	0	; () banked
  1349  00030E  6FD8               	movwf	(mspeed@a+1)& (0+255),b
  1350  000310  0E00               	movlw	0
  1351  000312  6FD7               	movwf	mspeed@a& (0+255),b
  1352  000314  0E00               	movlw	0
  1353  000316  0100               	movlb	0	; () banked
  1354  000318  6FDA               	movwf	(mspeed@b+1)& (0+255),b
  1355  00031A  0E00               	movlw	0
  1356  00031C  6FD9               	movwf	mspeed@b& (0+255),b
  1357  00031E  ECD9  F00D         	call	_mspeed	;wreg free
  1358                           
  1359                           ;main.c: 98: PORTBbits.RB4 = time[0] % 1000 > 500;
  1360  000322  C060  F015         	movff	_time,___almod@dividend
  1361  000326  C061  F016         	movff	_time+1,___almod@dividend+1
  1362  00032A  C062  F017         	movff	_time+2,___almod@dividend+2
  1363  00032E  C063  F018         	movff	_time+3,___almod@dividend+3
  1364  000332  0EE8               	movlw	232
  1365  000334  6E19               	movwf	___almod@divisor,c
  1366  000336  0E03               	movlw	3
  1367  000338  6E1A               	movwf	___almod@divisor+1,c
  1368  00033A  0E00               	movlw	0
  1369  00033C  6E1B               	movwf	___almod@divisor+2,c
  1370  00033E  0E00               	movlw	0
  1371  000340  6E1C               	movwf	___almod@divisor+3,c
  1372  000342  ECD7  F00A         	call	___almod	;wreg free
  1373  000346  BE18               	btfsc	?___almod+3,7,c
  1374  000348  D00C               	goto	u4400
  1375  00034A  5018               	movf	?___almod+3,w,c
  1376  00034C  1017               	iorwf	?___almod+2,w,c
  1377  00034E  E106               	bnz	u4401
  1378  000350  0EF5               	movlw	245
  1379  000352  5C15               	subwf	?___almod,w,c
  1380  000354  0E01               	movlw	1
  1381  000356  5816               	subwfb	?___almod+1,w,c
  1382  000358  A0D8               	btfss	status,0,c
  1383  00035A  D003               	goto	u4400
  1384  00035C                     u4401:
  1385  00035C  6A36               	clrf	??_main& (0+255),c
  1386  00035E  2A36               	incf	??_main& (0+255),f,c
  1387  000360  D001               	goto	u4418
  1388  000362                     u4400:
  1389  000362  6A36               	clrf	??_main& (0+255),c
  1390  000364                     u4418:
  1391  000364  3A36               	swapf	??_main,f,c
  1392  000366  5081               	movf	3969,w,c	;volatile
  1393  000368  1836               	xorwf	??_main,w,c
  1394  00036A  0BEF               	andlw	-17
  1395  00036C  1836               	xorwf	??_main,w,c
  1396  00036E  6E81               	movwf	3969,c	;volatile
  1397                           
  1398                           ;main.c: 99: PORTCbits.RC1 = 0;
  1399  000370  9282               	bcf	3970,1,c	;volatile
  1400                           
  1401                           ;main.c: 100: PORTDbits.RD2 = 0;
  1402  000372  9483               	bcf	3971,2,c	;volatile
  1403                           
  1404                           ;main.c: 101: PORTAbits.RA4 = 0;
  1405  000374  9880               	bcf	3968,4,c	;volatile
  1406                           
  1407                           ;main.c: 102: read_cal();
  1408  000376  EC75  F003         	call	_read_cal	;wreg free
  1409                           
  1410                           ;main.c: 104: if (PORTDbits.RD1 == 0){
  1411  00037A  B283               	btfsc	3971,1,c	;volatile
  1412  00037C  D670               	goto	l43
  1413                           
  1414                           ;main.c: 107: int i;
  1415                           ;main.c: 108: time[2] = 0;
  1416  00037E  0E00               	movlw	0
  1417  000380  0100               	movlb	0	; () banked
  1418  000382  6F68               	movwf	(_time+8)& (0+255),b
  1419  000384  0E00               	movlw	0
  1420  000386  6F69               	movwf	(_time+9)& (0+255),b
  1421  000388  0E00               	movlw	0
  1422  00038A  6F6A               	movwf	(_time+10)& (0+255),b
  1423  00038C  0E00               	movlw	0
  1424  00038E  6F6B               	movwf	(_time+11)& (0+255),b
  1425                           
  1426                           ;main.c: 109: for (i = 0;i < 5;i++){
  1427  000390  0E00               	movlw	0
  1428  000392  0101               	movlb	1	; () banked
  1429  000394  6F07               	movwf	(main@i+1)& (0+255),b
  1430  000396  0E00               	movlw	0
  1431  000398  6F06               	movwf	main@i& (0+255),b
  1432                           
  1433                           ; BSR set to: 1
  1434  00039A  0101               	movlb	1	; () banked
  1435  00039C  BF07               	btfsc	(main@i+1)& (0+255),7,b
  1436  00039E  D008               	goto	l64
  1437  0003A0  0101               	movlb	1	; () banked
  1438  0003A2  5107               	movf	(main@i+1)& (0+255),w,b
  1439  0003A4  E12B               	bnz	l3657
  1440  0003A6  0E05               	movlw	5
  1441  0003A8  0101               	movlb	1	; () banked
  1442  0003AA  5D06               	subwf	main@i& (0+255),w,b
  1443  0003AC  B0D8               	btfsc	status,0,c
  1444  0003AE  D026               	goto	u4450
  1445  0003B0                     l64:
  1446                           
  1447                           ; BSR set to: 1
  1448                           
  1449                           ; BSR set to: 1
  1450                           
  1451                           ; BSR set to: 1
  1452                           ;main.c: 111: while (time[2] < 100);
  1453  0003B0  0100               	movlb	0	; () banked
  1454  0003B2  BF6B               	btfsc	(_time+11)& (0+255),7,b
  1455  0003B4  D7FD               	goto	l64
  1456  0003B6  0100               	movlb	0	; () banked
  1457  0003B8  516B               	movf	(_time+11)& (0+255),w,b
  1458  0003BA  0100               	movlb	0	; () banked
  1459  0003BC  116A               	iorwf	(_time+10)& (0+255),w,b
  1460  0003BE  0100               	movlb	0	; () banked
  1461  0003C0  1169               	iorwf	(_time+9)& (0+255),w,b
  1462  0003C2  E105               	bnz	l3651
  1463  0003C4  0E64               	movlw	100
  1464  0003C6  0100               	movlb	0	; () banked
  1465  0003C8  5D68               	subwf	(_time+8)& (0+255),w,b
  1466  0003CA  A0D8               	btfss	status,0,c
  1467  0003CC  D7F1               	goto	l64
  1468  0003CE                     l3651:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;main.c: 112: time[2] = 0;
  1472  0003CE  0E00               	movlw	0
  1473  0003D0  0100               	movlb	0	; () banked
  1474  0003D2  6F68               	movwf	(_time+8)& (0+255),b
  1475  0003D4  0E00               	movlw	0
  1476  0003D6  6F69               	movwf	(_time+9)& (0+255),b
  1477  0003D8  0E00               	movlw	0
  1478  0003DA  6F6A               	movwf	(_time+10)& (0+255),b
  1479  0003DC  0E00               	movlw	0
  1480  0003DE  6F6B               	movwf	(_time+11)& (0+255),b
  1481                           
  1482                           ; BSR set to: 0
  1483  0003E0  0101               	movlb	1	; () banked
  1484  0003E2  4B06               	infsnz	main@i& (0+255),f,b
  1485  0003E4  2B07               	incf	(main@i+1)& (0+255),f,b
  1486                           
  1487                           ; BSR set to: 1
  1488  0003E6  0101               	movlb	1	; () banked
  1489  0003E8  BF07               	btfsc	(main@i+1)& (0+255),7,b
  1490  0003EA  D7E2               	goto	l64
  1491  0003EC  0101               	movlb	1	; () banked
  1492  0003EE  5107               	movf	(main@i+1)& (0+255),w,b
  1493  0003F0  E105               	bnz	l3657
  1494  0003F2  0E05               	movlw	5
  1495  0003F4  0101               	movlb	1	; () banked
  1496  0003F6  5D06               	subwf	main@i& (0+255),w,b
  1497  0003F8  A0D8               	btfss	status,0,c
  1498  0003FA  D7DA               	goto	l64
  1499  0003FC                     u4450:
  1500  0003FC                     l3657:
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 113: }
  1504                           ;main.c: 114: status = READY;
  1505  0003FC  0E00               	movlw	0
  1506  0003FE  0100               	movlb	0	; () banked
  1507  000400  6FED               	movwf	(_status+1)& (0+255),b
  1508  000402  0E03               	movlw	3
  1509  000404  6FEC               	movwf	_status& (0+255),b
  1510                           
  1511                           ;main.c: 115: time[0] = 0;
  1512  000406  0E00               	movlw	0
  1513  000408  0100               	movlb	0	; () banked
  1514  00040A  6F60               	movwf	_time& (0+255),b
  1515  00040C  0E00               	movlw	0
  1516  00040E  6F61               	movwf	(_time+1)& (0+255),b
  1517  000410  0E00               	movlw	0
  1518  000412  6F62               	movwf	(_time+2)& (0+255),b
  1519  000414  0E00               	movlw	0
  1520  000416  6F63               	movwf	(_time+3)& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 116: }
  1524                           ;main.c: 117: break;
  1525  000418  D622               	goto	l43
  1526  00041A                     
  1527                           ;main.c: 119: mspeed(0,0);
  1528                           
  1529                           ; BSR set to: 0
  1530  00041A  0E00               	movlw	0
  1531  00041C  0100               	movlb	0	; () banked
  1532  00041E  6FD8               	movwf	(mspeed@a+1)& (0+255),b
  1533  000420  0E00               	movlw	0
  1534  000422  6FD7               	movwf	mspeed@a& (0+255),b
  1535  000424  0E00               	movlw	0
  1536  000426  0100               	movlb	0	; () banked
  1537  000428  6FDA               	movwf	(mspeed@b+1)& (0+255),b
  1538  00042A  0E00               	movlw	0
  1539  00042C  6FD9               	movwf	mspeed@b& (0+255),b
  1540  00042E  ECD9  F00D         	call	_mspeed	;wreg free
  1541                           
  1542                           ;main.c: 120: PORTBbits.RB4 = 0;
  1543  000432  9881               	bcf	3969,4,c	;volatile
  1544                           
  1545                           ;main.c: 121: PORTCbits.RC1 = 1;
  1546  000434  8282               	bsf	3970,1,c	;volatile
  1547                           
  1548                           ;main.c: 122: PORTDbits.RD2 = 0;
  1549  000436  9483               	bcf	3971,2,c	;volatile
  1550                           
  1551                           ;main.c: 123: PORTAbits.RA4 = 0;
  1552  000438  9880               	bcf	3968,4,c	;volatile
  1553                           
  1554                           ;main.c: 124: line_cal();
  1555  00043A  ECC6  F005         	call	_line_cal	;wreg free
  1556                           
  1557                           ;main.c: 125: if (time[0] > 1000){
  1558  00043E  0100               	movlb	0	; () banked
  1559  000440  BF63               	btfsc	(_time+3)& (0+255),7,b
  1560  000442  D02A               	goto	l70
  1561  000444  0100               	movlb	0	; () banked
  1562  000446  5163               	movf	(_time+3)& (0+255),w,b
  1563  000448  0100               	movlb	0	; () banked
  1564  00044A  1162               	iorwf	(_time+2)& (0+255),w,b
  1565  00044C  E108               	bnz	u4460
  1566  00044E  0EE9               	movlw	233
  1567  000450  0100               	movlb	0	; () banked
  1568  000452  5D60               	subwf	_time& (0+255),w,b
  1569  000454  0E03               	movlw	3
  1570  000456  0100               	movlb	0	; () banked
  1571  000458  5961               	subwfb	(_time+1)& (0+255),w,b
  1572  00045A  A0D8               	btfss	status,0,c
  1573  00045C  D01D               	goto	l70
  1574  00045E                     u4460:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 127: int i;
  1578                           ;main.c: 128: for (i = 0;i < 5;i++){
  1579  00045E  0E00               	movlw	0
  1580  000460  0101               	movlb	1	; () banked
  1581  000462  6F09               	movwf	(main@i_338+1)& (0+255),b
  1582  000464  0E00               	movlw	0
  1583  000466  6F08               	movwf	main@i_338& (0+255),b
  1584  000468                     l3675:
  1585                           
  1586                           ; BSR set to: 1
  1587  000468  0101               	movlb	1	; () banked
  1588  00046A  BF09               	btfsc	(main@i_338+1)& (0+255),7,b
  1589  00046C  D008               	goto	l71
  1590  00046E  0101               	movlb	1	; () banked
  1591  000470  5109               	movf	(main@i_338+1)& (0+255),w,b
  1592  000472  E109               	bnz	l3683
  1593  000474  0E05               	movlw	5
  1594  000476  0101               	movlb	1	; () banked
  1595  000478  5D08               	subwf	main@i_338& (0+255),w,b
  1596  00047A  B0D8               	btfsc	status,0,c
  1597  00047C  D004               	goto	u4480
  1598  00047E                     l71:
  1599                           
  1600                           ; BSR set to: 1
  1601                           
  1602                           ; BSR set to: 1
  1603  00047E  0101               	movlb	1	; () banked
  1604  000480  4B08               	infsnz	main@i_338& (0+255),f,b
  1605  000482  2B09               	incf	(main@i_338+1)& (0+255),f,b
  1606  000484  D7F1               	goto	l3675
  1607  000486                     u4480:
  1608  000486                     l3683:
  1609                           
  1610                           ; BSR set to: 1
  1611                           ;main.c: 130: }
  1612                           ;main.c: 131: time[0] = 0;
  1613  000486  0E00               	movlw	0
  1614  000488  0100               	movlb	0	; () banked
  1615  00048A  6F60               	movwf	_time& (0+255),b
  1616  00048C  0E00               	movlw	0
  1617  00048E  6F61               	movwf	(_time+1)& (0+255),b
  1618  000490  0E00               	movlw	0
  1619  000492  6F62               	movwf	(_time+2)& (0+255),b
  1620  000494  0E00               	movlw	0
  1621  000496  6F63               	movwf	(_time+3)& (0+255),b
  1622  000498                     l70:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 132: }
  1626                           ;main.c: 133: if (PORTDbits.RD0 == 0){
  1627                           
  1628                           ; BSR set to: 0
  1629  000498  B083               	btfsc	3971,0,c	;volatile
  1630  00049A  D5E1               	goto	l43
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 134: twidde_start();
  1634  00049C  ECB5  F00D         	call	_twidde_start	;wreg free
  1635                           
  1636                           ;main.c: 135: status = BASIC_PID;
  1637  0004A0  0E00               	movlw	0
  1638  0004A2  0100               	movlb	0	; () banked
  1639  0004A4  6FED               	movwf	(_status+1)& (0+255),b
  1640  0004A6  0E04               	movlw	4
  1641  0004A8  6FEC               	movwf	_status& (0+255),b
  1642  0004AA  D0FC               	goto	u4550
  1643  0004AC                     
  1644                           ;main.c: 142: line_cal();
  1645                           
  1646                           ; BSR set to: 0
  1647  0004AC  ECC6  F005         	call	_line_cal	;wreg free
  1648                           
  1649                           ;main.c: 143: int speed = 700;
  1650  0004B0  0E02               	movlw	2
  1651  0004B2  0101               	movlb	1	; () banked
  1652  0004B4  6F12               	movwf	(main@speed+1)& (0+255),b
  1653  0004B6  0EBC               	movlw	188
  1654  0004B8  6F11               	movwf	main@speed& (0+255),b
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;main.c: 145: int der = lp - old_lp;
  1658  0004BA  C088  F036         	movff	_old_lp,??_main
  1659  0004BE  C089  F037         	movff	_old_lp+1,??_main+1
  1660  0004C2  1E36               	comf	??_main,f,c
  1661  0004C4  1E37               	comf	??_main+1,f,c
  1662  0004C6  4A36               	infsnz	??_main,f,c
  1663  0004C8  2A37               	incf	??_main+1,f,c
  1664  0004CA  0100               	movlb	0	; () banked
  1665  0004CC  518A               	movf	_lp& (0+255),w,b
  1666  0004CE  2436               	addwf	??_main,w,c
  1667  0004D0  0101               	movlb	1	; () banked
  1668  0004D2  6F00               	movwf	main@der& (0+255),b
  1669  0004D4  0100               	movlb	0	; () banked
  1670  0004D6  518B               	movf	(_lp+1)& (0+255),w,b
  1671  0004D8  2037               	addwfc	??_main+1,w,c
  1672  0004DA  0101               	movlb	1	; () banked
  1673  0004DC  6F01               	movwf	(main@der+1)& (0+255),b
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;main.c: 146: double dif = (double)lp * 3.9 + (double)der * 130;
  1677  0004DE  0E9A               	movlw	154
  1678  0004E0  6E24               	movwf	___ftmul@f2,c
  1679  0004E2  0E79               	movlw	121
  1680  0004E4  6E25               	movwf	___ftmul@f2+1,c
  1681  0004E6  0E40               	movlw	64
  1682  0004E8  6E26               	movwf	___ftmul@f2+2,c
  1683  0004EA  C08A  F01D         	movff	_lp,___awtoft@c
  1684  0004EE  C08B  F01E         	movff	_lp+1,___awtoft@c+1
  1685  0004F2  EC6D  F00D         	call	___awtoft	;wreg free
  1686  0004F6  C01D  F021         	movff	?___awtoft,___ftmul@f1
  1687  0004FA  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  1688  0004FE  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  1689  000502  EC2A  F009         	call	___ftmul	;wreg free
  1690  000506  C021  F030         	movff	?___ftmul,___ftadd@f1
  1691  00050A  C022  F031         	movff	?___ftmul+1,___ftadd@f1+1
  1692  00050E  C023  F032         	movff	?___ftmul+2,___ftadd@f1+2
  1693  000512  0E00               	movlw	0
  1694  000514  6E24               	movwf	___ftmul@f2,c
  1695  000516  0E02               	movlw	2
  1696  000518  6E25               	movwf	___ftmul@f2+1,c
  1697  00051A  0E43               	movlw	67
  1698  00051C  6E26               	movwf	___ftmul@f2+2,c
  1699  00051E  C100  F01D         	movff	main@der,___awtoft@c
  1700  000522  C101  F01E         	movff	main@der+1,___awtoft@c+1
  1701  000526  EC6D  F00D         	call	___awtoft	;wreg free
  1702  00052A  C01D  F021         	movff	?___awtoft,___ftmul@f1
  1703  00052E  C01E  F022         	movff	?___awtoft+1,___ftmul@f1+1
  1704  000532  C01F  F023         	movff	?___awtoft+2,___ftmul@f1+2
  1705  000536  EC2A  F009         	call	___ftmul	;wreg free
  1706  00053A  C021  F033         	movff	?___ftmul,___ftadd@f2
  1707  00053E  C022  F034         	movff	?___ftmul+1,___ftadd@f2+1
  1708  000542  C023  F035         	movff	?___ftmul+2,___ftadd@f2+2
  1709  000546  EC7D  F007         	call	___ftadd	;wreg free
  1710  00054A  C030  F10E         	movff	?___ftadd,main@dif
  1711  00054E  C031  F10F         	movff	?___ftadd+1,main@dif+1
  1712  000552  C032  F110         	movff	?___ftadd+2,main@dif+2
  1713                           
  1714                           ;main.c: 147: if (lp > -60 && lp < 60){
  1715  000556  0100               	movlb	0	; () banked
  1716  000558  AF8B               	btfss	(_lp+1)& (0+255),7,b
  1717  00055A  D008               	goto	u4500
  1718  00055C  0EC5               	movlw	197
  1719  00055E  0100               	movlb	0	; () banked
  1720  000560  5D8A               	subwf	_lp& (0+255),w,b
  1721  000562  0EFF               	movlw	255
  1722  000564  0100               	movlb	0	; () banked
  1723  000566  598B               	subwfb	(_lp+1)& (0+255),w,b
  1724  000568  A0D8               	btfss	status,0,c
  1725  00056A  D010               	goto	l75
  1726  00056C                     u4500:
  1727                           
  1728                           ; BSR set to: 0
  1729  00056C  0100               	movlb	0	; () banked
  1730  00056E  BF8B               	btfsc	(_lp+1)& (0+255),7,b
  1731  000570  D008               	goto	u4510
  1732  000572  0100               	movlb	0	; () banked
  1733  000574  518B               	movf	(_lp+1)& (0+255),w,b
  1734  000576  E10A               	bnz	l75
  1735  000578  0E3C               	movlw	60
  1736  00057A  0100               	movlb	0	; () banked
  1737  00057C  5D8A               	subwf	_lp& (0+255),w,b
  1738  00057E  B0D8               	btfsc	status,0,c
  1739  000580  D005               	goto	l75
  1740  000582                     u4510:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 148: PORTBbits.RB4 = 0;
  1744  000582  9881               	bcf	3969,4,c	;volatile
  1745                           
  1746                           ;main.c: 149: PORTCbits.RC1 = 0;
  1747  000584  9282               	bcf	3970,1,c	;volatile
  1748                           
  1749                           ;main.c: 150: PORTDbits.RD2 = 1;
  1750  000586  8483               	bsf	3971,2,c	;volatile
  1751                           
  1752                           ;main.c: 151: PORTAbits.RA4 = 1;
  1753  000588  8880               	bsf	3968,4,c	;volatile
  1754                           
  1755                           ;main.c: 152: }else{
  1756  00058A  D011               	goto	l78
  1757  00058C                     l75:
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;main.c: 153: PORTDbits.RD2 = 0;
  1761  00058C  9483               	bcf	3971,2,c	;volatile
  1762                           
  1763                           ;main.c: 154: PORTAbits.RA4 = 0;
  1764  00058E  9880               	bcf	3968,4,c	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 155: if (lp > 0){
  1768  000590  0100               	movlb	0	; () banked
  1769  000592  BF8B               	btfsc	(_lp+1)& (0+255),7,b
  1770  000594  D00A               	goto	l77
  1771  000596  0100               	movlb	0	; () banked
  1772  000598  518B               	movf	(_lp+1)& (0+255),w,b
  1773  00059A  E104               	bnz	u4520
  1774  00059C  0100               	movlb	0	; () banked
  1775  00059E  058A               	decf	_lp& (0+255),w,b
  1776  0005A0  A0D8               	btfss	status,0,c
  1777  0005A2  D003               	goto	l77
  1778  0005A4                     u4520:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;main.c: 156: PORTBbits.RB4 = 1;
  1782  0005A4  8881               	bsf	3969,4,c	;volatile
  1783                           
  1784                           ;main.c: 157: PORTCbits.RC1 = 0;
  1785  0005A6  9282               	bcf	3970,1,c	;volatile
  1786                           
  1787                           ;main.c: 158: }else{
  1788  0005A8  D002               	goto	l78
  1789  0005AA                     l77:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;main.c: 159: PORTBbits.RB4 = 0;
  1793  0005AA  9881               	bcf	3969,4,c	;volatile
  1794                           
  1795                           ;main.c: 160: PORTCbits.RC1 = 1;
  1796  0005AC  8282               	bsf	3970,1,c	;volatile
  1797  0005AE                     l78:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 161: }
  1801                           ;main.c: 162: }
  1802                           ;main.c: 163: if (dif > 0) mspeed(speed - dif, speed );
  1803                           
  1804                           ; BSR set to: 0
  1805                           
  1806                           ; BSR set to: 0
  1807  0005AE  0E00               	movlw	0
  1808  0005B0  6E15               	movwf	___ftge@ff1,c
  1809  0005B2  0E00               	movlw	0
  1810  0005B4  6E16               	movwf	___ftge@ff1+1,c
  1811  0005B6  0E00               	movlw	0
  1812  0005B8  6E17               	movwf	___ftge@ff1+2,c
  1813  0005BA  C10E  F018         	movff	main@dif,___ftge@ff2
  1814  0005BE  C10F  F019         	movff	main@dif+1,___ftge@ff2+1
  1815  0005C2  C110  F01A         	movff	main@dif+2,___ftge@ff2+2
  1816  0005C6  ECCB  F00B         	call	___ftge	;wreg free
  1817  0005CA  B0D8               	btfsc	status,0,c
  1818  0005CC  D02E               	goto	l79
  1819  0005CE  C10E  F015         	movff	main@dif,___ftneg@f1
  1820  0005D2  C10F  F016         	movff	main@dif+1,___ftneg@f1+1
  1821  0005D6  C110  F017         	movff	main@dif+2,___ftneg@f1+2
  1822  0005DA  ECC7  F00D         	call	___ftneg	;wreg free
  1823  0005DE  C015  F033         	movff	?___ftneg,___ftadd@f2
  1824  0005E2  C016  F034         	movff	?___ftneg+1,___ftadd@f2+1
  1825  0005E6  C017  F035         	movff	?___ftneg+2,___ftadd@f2+2
  1826  0005EA  C111  F01D         	movff	main@speed,___awtoft@c
  1827  0005EE  C112  F01E         	movff	main@speed+1,___awtoft@c+1
  1828  0005F2  EC6D  F00D         	call	___awtoft	;wreg free
  1829  0005F6  C01D  F030         	movff	?___awtoft,___ftadd@f1
  1830  0005FA  C01E  F031         	movff	?___awtoft+1,___ftadd@f1+1
  1831  0005FE  C01F  F032         	movff	?___awtoft+2,___ftadd@f1+2
  1832  000602  EC7D  F007         	call	___ftadd	;wreg free
  1833  000606  C030  F0C8         	movff	?___ftadd,___fttol@f1
  1834  00060A  C031  F0C9         	movff	?___ftadd+1,___fttol@f1+1
  1835  00060E  C032  F0CA         	movff	?___ftadd+2,___fttol@f1+2
  1836  000612  EC88  F008         	call	___fttol	;wreg free
  1837  000616  C0C8  F0D7         	movff	?___fttol,mspeed@a
  1838  00061A  C0C9  F0D8         	movff	?___fttol+1,mspeed@a+1
  1839  00061E  C111  F0D9         	movff	main@speed,mspeed@b
  1840  000622  C112  F0DA         	movff	main@speed+1,mspeed@b+1
  1841  000626  ECD9  F00D         	call	_mspeed	;wreg free
  1842  00062A                     l79:
  1843                           
  1844                           ;main.c: 164: if (dif < 0) mspeed(speed , speed + dif);
  1845  00062A  0101               	movlb	1	; () banked
  1846  00062C  AF10               	btfss	(main@dif+2)& (0+255),7,b
  1847  00062E  D026               	goto	l80
  1848                           
  1849                           ; BSR set to: 1
  1850  000630  C111  F0D7         	movff	main@speed,mspeed@a
  1851  000634  C112  F0D8         	movff	main@speed+1,mspeed@a+1
  1852  000638  C10E  F033         	movff	main@dif,___ftadd@f2
  1853  00063C  C10F  F034         	movff	main@dif+1,___ftadd@f2+1
  1854  000640  C110  F035         	movff	main@dif+2,___ftadd@f2+2
  1855  000644  C111  F01D         	movff	main@speed,___awtoft@c
  1856  000648  C112  F01E         	movff	main@speed+1,___awtoft@c+1
  1857  00064C  EC6D  F00D         	call	___awtoft	;wreg free
  1858  000650  C01D  F030         	movff	?___awtoft,___ftadd@f1
  1859  000654  C01E  F031         	movff	?___awtoft+1,___ftadd@f1+1
  1860  000658  C01F  F032         	movff	?___awtoft+2,___ftadd@f1+2
  1861  00065C  EC7D  F007         	call	___ftadd	;wreg free
  1862  000660  C030  F0C8         	movff	?___ftadd,___fttol@f1
  1863  000664  C031  F0C9         	movff	?___ftadd+1,___fttol@f1+1
  1864  000668  C032  F0CA         	movff	?___ftadd+2,___fttol@f1+2
  1865  00066C  EC88  F008         	call	___fttol	;wreg free
  1866  000670  C0C8  F0D9         	movff	?___fttol,mspeed@b
  1867  000674  C0C9  F0DA         	movff	?___fttol+1,mspeed@b+1
  1868  000678  ECD9  F00D         	call	_mspeed	;wreg free
  1869  00067C                     l80:
  1870                           
  1871                           ;main.c: 166: old_lp = lp;
  1872  00067C  C08A  F088         	movff	_lp,_old_lp
  1873  000680  C08B  F089         	movff	_lp+1,_old_lp+1
  1874                           
  1875                           ;main.c: 168: if (time[3] > 1000){
  1876  000684  0100               	movlb	0	; () banked
  1877  000686  BF6F               	btfsc	(_time+15)& (0+255),7,b
  1878  000688  D4EA               	goto	l43
  1879  00068A  0100               	movlb	0	; () banked
  1880  00068C  516F               	movf	(_time+15)& (0+255),w,b
  1881  00068E  0100               	movlb	0	; () banked
  1882  000690  116E               	iorwf	(_time+14)& (0+255),w,b
  1883  000692  E108               	bnz	u4550
  1884  000694  0EE9               	movlw	233
  1885  000696  0100               	movlb	0	; () banked
  1886  000698  5D6C               	subwf	(_time+12)& (0+255),w,b
  1887  00069A  0E03               	movlw	3
  1888  00069C  0100               	movlb	0	; () banked
  1889  00069E  596D               	subwfb	(_time+13)& (0+255),w,b
  1890  0006A0  A0D8               	btfss	status,0,c
  1891  0006A2  D4DD               	goto	l43
  1892  0006A4                     u4550:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 169: time[3] = 0;
  1896  0006A4  0E00               	movlw	0
  1897  0006A6  0100               	movlb	0	; () banked
  1898  0006A8  6F6C               	movwf	(_time+12)& (0+255),b
  1899  0006AA  0E00               	movlw	0
  1900  0006AC  6F6D               	movwf	(_time+13)& (0+255),b
  1901  0006AE  0E00               	movlw	0
  1902  0006B0  6F6E               	movwf	(_time+14)& (0+255),b
  1903  0006B2  0E00               	movlw	0
  1904  0006B4  6F6F               	movwf	(_time+15)& (0+255),b
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 174: }
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 172: }
  1911                           ;main.c: 173: break;
  1912  0006B6  D4D3               	goto	l43
  1913  0006B8                     l44:
  1914                           
  1915                           ; BSR set to: 0
  1916  0006B8  C0EC  F036         	movff	_status,??_main
  1917  0006BC  C0ED  F037         	movff	_status+1,??_main+1
  1918                           
  1919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 1, Range of values is 0 to 0
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte            4     3 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  0006C0  5037               	movf	??_main+1,w,c
  1927  0006C2  0A00               	xorlw	0	; case 0
  1928  0006C4  A4D8               	btfss	status,2,c
  1929  0006C6  D4CB               	goto	l43
  1930                           
  1931                           ; Switch size 1, requested type "space"
  1932                           ; Number of cases is 5, Range of values is 0 to 4
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte           16     9 (average)
  1936                           ;	Chosen strategy is simple_byte
  1937  0006C8  5036               	movf	??_main,w,c
  1938  0006CA  0A00               	xorlw	0	; case 0
  1939  0006CC  B4D8               	btfsc	status,2,c
  1940  0006CE  D4CA               	goto	l45
  1941  0006D0  0A01               	xorlw	1	; case 1
  1942  0006D2  B4D8               	btfsc	status,2,c
  1943  0006D4  D538               	goto	l53
  1944  0006D6  0A03               	xorlw	3	; case 2
  1945  0006D8  B4D8               	btfsc	status,2,c
  1946  0006DA  D617               	goto	l62
  1947  0006DC  0A01               	xorlw	1	; case 3
  1948  0006DE  B4D8               	btfsc	status,2,c
  1949  0006E0  D69C               	goto	l69
  1950  0006E2  0A07               	xorlw	7	; case 4
  1951  0006E4  B4D8               	btfsc	status,2,c
  1952  0006E6  D6E2               	goto	l74
  1953  0006E8  D4BA               	goto	l43
  1954  0006EA                     __end_of_main:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1l	equ	0xFE1
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _twidde_start *****************
  1967 ;; Defined at:
  1968 ;;		line 18 in file "twiddle.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text1
  1997  001B6A                     __ptext1:
  1998                           	opt stack 0
  1999  001B6A                     _twidde_start:
  2000                           	opt stack 29
  2001                           
  2002                           ;twiddle.c: 19: time[2] = 0;
  2003                           
  2004                           ;incstack = 0
  2005  001B6A  0E00               	movlw	0
  2006  001B6C  0100               	movlb	0	; () banked
  2007  001B6E  6F68               	movwf	(_time+8)& (0+255),b
  2008  001B70  0E00               	movlw	0
  2009  001B72  6F69               	movwf	(_time+9)& (0+255),b
  2010  001B74  0E00               	movlw	0
  2011  001B76  6F6A               	movwf	(_time+10)& (0+255),b
  2012  001B78  0E00               	movlw	0
  2013  001B7A  6F6B               	movwf	(_time+11)& (0+255),b
  2014                           
  2015                           ;twiddle.c: 20: intern = 0;
  2016  001B7C  0E00               	movlw	0
  2017  001B7E  6E46               	movwf	_intern+1,c
  2018  001B80  0E00               	movlw	0
  2019  001B82  6E45               	movwf	_intern,c
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;twiddle.c: 21: best_err = lp;
  2023  001B84  C08A  F047         	movff	_lp,_best_err
  2024  001B88  C08B  F048         	movff	_lp+1,_best_err+1
  2025                           
  2026                           ; BSR set to: 0
  2027  001B8C  0012               	return		;funcret
  2028  001B8E                     __end_of_twidde_start:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1l	equ	0xFE1
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _setD *****************
  2041 ;; Defined at:
  2042 ;;		line 24 in file "utils.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		None
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text2
  2071  001BEC                     __ptext2:
  2072                           	opt stack 0
  2073  001BEC                     _setD:
  2074                           	opt stack 29
  2075                           
  2076                           ;utils.c: 25: PORTBbits.RB4 = 0;
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;incstack = 0
  2080  001BEC  9881               	bcf	3969,4,c	;volatile
  2081                           
  2082                           ;utils.c: 26: PORTCbits.RC1 = 0;
  2083  001BEE  9282               	bcf	3970,1,c	;volatile
  2084                           
  2085                           ;utils.c: 27: PORTDbits.RD2 = 0;
  2086  001BF0  9483               	bcf	3971,2,c	;volatile
  2087                           
  2088                           ;utils.c: 28: PORTAbits.RA4 = 1;
  2089  001BF2  8880               	bsf	3968,4,c	;volatile
  2090  001BF4  0012               	return		;funcret
  2091  001BF6                     __end_of_setD:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           tblptrh	equ	0xFF7
  2095                           tblptrl	equ	0xFF6
  2096                           tablat	equ	0xFF5
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1l	equ	0xFE1
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _setC *****************
  2104 ;; Defined at:
  2105 ;;		line 18 in file "utils.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		None
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text3
  2134  001BF6                     __ptext3:
  2135                           	opt stack 0
  2136  001BF6                     _setC:
  2137                           	opt stack 29
  2138                           
  2139                           ;utils.c: 19: PORTBbits.RB4 = 0;
  2140                           
  2141                           ;incstack = 0
  2142  001BF6  9881               	bcf	3969,4,c	;volatile
  2143                           
  2144                           ;utils.c: 20: PORTCbits.RC1 = 0;
  2145  001BF8  9282               	bcf	3970,1,c	;volatile
  2146                           
  2147                           ;utils.c: 21: PORTDbits.RD2 = 1;
  2148  001BFA  8483               	bsf	3971,2,c	;volatile
  2149                           
  2150                           ;utils.c: 22: PORTAbits.RA4 = 0;
  2151  001BFC  9880               	bcf	3968,4,c	;volatile
  2152  001BFE  0012               	return		;funcret
  2153  001C00                     __end_of_setC:
  2154                           	opt stack 0
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1l	equ	0xFE1
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _setB *****************
  2166 ;; Defined at:
  2167 ;;		line 12 in file "utils.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		None
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text4
  2196  001C00                     __ptext4:
  2197                           	opt stack 0
  2198  001C00                     _setB:
  2199                           	opt stack 29
  2200                           
  2201                           ;utils.c: 13: PORTBbits.RB4 = 0;
  2202                           
  2203                           ;incstack = 0
  2204  001C00  9881               	bcf	3969,4,c	;volatile
  2205                           
  2206                           ;utils.c: 14: PORTCbits.RC1 = 1;
  2207  001C02  8282               	bsf	3970,1,c	;volatile
  2208                           
  2209                           ;utils.c: 15: PORTDbits.RD2 = 0;
  2210  001C04  9483               	bcf	3971,2,c	;volatile
  2211                           
  2212                           ;utils.c: 16: PORTAbits.RA4 = 0;
  2213  001C06  9880               	bcf	3968,4,c	;volatile
  2214  001C08  0012               	return		;funcret
  2215  001C0A                     __end_of_setB:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _setA *****************
  2228 ;; Defined at:
  2229 ;;		line 5 in file "utils.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		None
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text5
  2258  001C0A                     __ptext5:
  2259                           	opt stack 0
  2260  001C0A                     _setA:
  2261                           	opt stack 29
  2262                           
  2263                           ;utils.c: 6: PORTBbits.RB4 = 1;
  2264                           
  2265                           ;incstack = 0
  2266  001C0A  8881               	bsf	3969,4,c	;volatile
  2267                           
  2268                           ;utils.c: 7: PORTCbits.RC1 = 0;
  2269  001C0C  9282               	bcf	3970,1,c	;volatile
  2270                           
  2271                           ;utils.c: 8: PORTDbits.RD2 = 0;
  2272  001C0E  9483               	bcf	3971,2,c	;volatile
  2273                           
  2274                           ;utils.c: 9: PORTAbits.RA4 = 0;
  2275  001C10  9880               	bcf	3968,4,c	;volatile
  2276  001C12  0012               	return		;funcret
  2277  001C14                     __end_of_setA:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           postinc0	equ	0xFEE
  2284                           wreg	equ	0xFE8
  2285                           postdec1	equ	0xFE5
  2286                           fsr1l	equ	0xFE1
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _read_cal *****************
  2290 ;; Defined at:
  2291 ;;		line 47 in file "analog.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  i               2   37[COMRAM] int 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0
  2306 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          9       0       0       0       0       0       0       0       0
  2308 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:       19 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text6
  2320  0006EA                     __ptext6:
  2321                           	opt stack 0
  2322  0006EA                     _read_cal:
  2323                           	opt stack 29
  2324                           
  2325                           ;analog.c: 48: int i;
  2326                           ;analog.c: 50: for (i = 0;i < 5;i++) maxs[ls[i]] = maxs[ls[i]]>an[ls[i]]?maxs[ls[i]]:an[
      +                          ls[i]];
  2327                           
  2328                           ;incstack = 0
  2329  0006EA  0E00               	movlw	0
  2330  0006EC  6E27               	movwf	read_cal@i+1,c
  2331  0006EE  0E00               	movlw	0
  2332  0006F0  6E26               	movwf	read_cal@i,c
  2333  0006F2  BE27               	btfsc	read_cal@i+1,7,c
  2334  0006F4  D008               	goto	l131
  2335  0006F6  5027               	movf	read_cal@i+1,w,c
  2336  0006F8  E105               	bnz	u3560
  2337  0006FA  0E05               	movlw	5
  2338  0006FC  5C26               	subwf	read_cal@i,w,c
  2339  0006FE  B0D8               	btfsc	status,0,c
  2340  000700  D088               	goto	u3580
  2341  000702  D001               	goto	l131
  2342  000704                     u3560:
  2343  000704  D086               	goto	u3580
  2344  000706                     l131:
  2345  000706  90D8               	bcf	status,0,c
  2346  000708  3426               	rlcf	read_cal@i,w,c
  2347  00070A  6ED9               	movwf	fsr2l,c
  2348  00070C  3427               	rlcf	read_cal@i+1,w,c
  2349  00070E  6EDA               	movwf	fsr2h,c
  2350  000710  0EDB               	movlw	low _ls
  2351  000712  26D9               	addwf	fsr2l,f,c
  2352  000714  0E00               	movlw	high _ls
  2353  000716  22DA               	addwfc	fsr2h,f,c
  2354  000718  CFDE F015          	movff	postinc2,??_read_cal
  2355  00071C  CFDD F016          	movff	postdec2,??_read_cal+1
  2356  000720  90D8               	bcf	status,0,c
  2357  000722  3615               	rlcf	??_read_cal,f,c
  2358  000724  3616               	rlcf	??_read_cal+1,f,c
  2359  000726  0E9E               	movlw	low _maxs
  2360  000728  2415               	addwf	??_read_cal,w,c
  2361  00072A  6ED9               	movwf	fsr2l,c
  2362  00072C  0E00               	movlw	high _maxs
  2363  00072E  2016               	addwfc	??_read_cal+1,w,c
  2364  000730  6EDA               	movwf	fsr2h,c
  2365  000732  90D8               	bcf	status,0,c
  2366  000734  3426               	rlcf	read_cal@i,w,c
  2367  000736  6EE1               	movwf	fsr1l,c
  2368  000738  3427               	rlcf	read_cal@i+1,w,c
  2369  00073A  6EE2               	movwf	fsr1h,c
  2370  00073C  0EDB               	movlw	low _ls
  2371  00073E  26E1               	addwf	fsr1l,f,c
  2372  000740  0E00               	movlw	high _ls
  2373  000742  22E2               	addwfc	fsr1h,f,c
  2374  000744  CFE6 F019          	movff	postinc1,??_read_cal+4
  2375  000748  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2376  00074C  90D8               	bcf	status,0,c
  2377  00074E  3619               	rlcf	??_read_cal+4,f,c
  2378  000750  361A               	rlcf	??_read_cal+5,f,c
  2379  000752  0EB0               	movlw	low _an
  2380  000754  2419               	addwf	??_read_cal+4,w,c
  2381  000756  6EE1               	movwf	fsr1l,c
  2382  000758  0E00               	movlw	high _an
  2383  00075A  201A               	addwfc	??_read_cal+5,w,c
  2384  00075C  6EE2               	movwf	fsr1h,c
  2385  00075E  50DE               	movf	postinc2,w,c
  2386  000760  5CE6               	subwf	postinc1,w,c
  2387  000762  50E6               	movf	postinc1,w,c
  2388  000764  0A80               	xorlw	128
  2389  000766  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2390  000768  50DE               	movf	postinc2,w,c
  2391  00076A  0A80               	xorlw	128
  2392  00076C  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2393  00076E  A0D8               	btfss	status,0,c
  2394  000770  D015               	goto	l134
  2395  000772  90D8               	bcf	status,0,c
  2396  000774  3426               	rlcf	read_cal@i,w,c
  2397  000776  6ED9               	movwf	fsr2l,c
  2398  000778  3427               	rlcf	read_cal@i+1,w,c
  2399  00077A  6EDA               	movwf	fsr2h,c
  2400  00077C  0EDB               	movlw	low _ls
  2401  00077E  26D9               	addwf	fsr2l,f,c
  2402  000780  0E00               	movlw	high _ls
  2403  000782  22DA               	addwfc	fsr2h,f,c
  2404  000784  CFDE F015          	movff	postinc2,??_read_cal
  2405  000788  CFDD F016          	movff	postdec2,??_read_cal+1
  2406  00078C  90D8               	bcf	status,0,c
  2407  00078E  3615               	rlcf	??_read_cal,f,c
  2408  000790  3616               	rlcf	??_read_cal+1,f,c
  2409  000792  0EB0               	movlw	low _an
  2410  000794  2415               	addwf	??_read_cal,w,c
  2411  000796  6E1E               	movwf	_read_cal$503,c
  2412  000798  0E00               	movlw	high _an
  2413  00079A  D014               	goto	L2
  2414  00079C                     l134:
  2415  00079C  90D8               	bcf	status,0,c
  2416  00079E  3426               	rlcf	read_cal@i,w,c
  2417  0007A0  6ED9               	movwf	fsr2l,c
  2418  0007A2  3427               	rlcf	read_cal@i+1,w,c
  2419  0007A4  6EDA               	movwf	fsr2h,c
  2420  0007A6  0EDB               	movlw	low _ls
  2421  0007A8  26D9               	addwf	fsr2l,f,c
  2422  0007AA  0E00               	movlw	high _ls
  2423  0007AC  22DA               	addwfc	fsr2h,f,c
  2424  0007AE  CFDE F015          	movff	postinc2,??_read_cal
  2425  0007B2  CFDD F016          	movff	postdec2,??_read_cal+1
  2426  0007B6  90D8               	bcf	status,0,c
  2427  0007B8  3615               	rlcf	??_read_cal,f,c
  2428  0007BA  3616               	rlcf	??_read_cal+1,f,c
  2429  0007BC  0E9E               	movlw	low _maxs
  2430  0007BE  2415               	addwf	??_read_cal,w,c
  2431  0007C0  6E1E               	movwf	_read_cal$503,c
  2432  0007C2  0E00               	movlw	high _maxs
  2433  0007C4                     L2:
  2434  0007C4  2016               	addwfc	??_read_cal+1,w,c
  2435  0007C6  6E1F               	movwf	_read_cal$503+1,c
  2436  0007C8  C01E  FFD9         	movff	_read_cal$503,fsr2l
  2437  0007CC  C01F  FFDA         	movff	_read_cal$503+1,fsr2h
  2438  0007D0  90D8               	bcf	status,0,c
  2439  0007D2  3426               	rlcf	read_cal@i,w,c
  2440  0007D4  6EE1               	movwf	fsr1l,c
  2441  0007D6  3427               	rlcf	read_cal@i+1,w,c
  2442  0007D8  6EE2               	movwf	fsr1h,c
  2443  0007DA  0EDB               	movlw	low _ls
  2444  0007DC  26E1               	addwf	fsr1l,f,c
  2445  0007DE  0E00               	movlw	high _ls
  2446  0007E0  22E2               	addwfc	fsr1h,f,c
  2447  0007E2  CFE6 F015          	movff	postinc1,??_read_cal
  2448  0007E6  CFE5 F016          	movff	postdec1,??_read_cal+1
  2449  0007EA  90D8               	bcf	status,0,c
  2450  0007EC  3615               	rlcf	??_read_cal,f,c
  2451  0007EE  3616               	rlcf	??_read_cal+1,f,c
  2452  0007F0  0E9E               	movlw	low _maxs
  2453  0007F2  2415               	addwf	??_read_cal,w,c
  2454  0007F4  6EE1               	movwf	fsr1l,c
  2455  0007F6  0E00               	movlw	high _maxs
  2456  0007F8  2016               	addwfc	??_read_cal+1,w,c
  2457  0007FA  6EE2               	movwf	fsr1h,c
  2458  0007FC  CFDE FFE6          	movff	postinc2,postinc1
  2459  000800  CFDD FFE5          	movff	postdec2,postdec1
  2460  000804  4A26               	infsnz	read_cal@i,f,c
  2461  000806  2A27               	incf	read_cal@i+1,f,c
  2462  000808  BE27               	btfsc	read_cal@i+1,7,c
  2463  00080A  D77D               	goto	l131
  2464  00080C  5027               	movf	read_cal@i+1,w,c
  2465  00080E  E101               	bnz	l3201
  2466  000810  D774               	goto	L3
  2467  000812                     u3580:
  2468  000812                     l3201:
  2469                           
  2470                           ;analog.c: 51: for (i = 0;i < 5;i++) mins[ls[i]] = mins[ls[i]]<an[ls[i]]?mins[ls[i]]:an[
      +                          ls[i]];
  2471  000812  0E00               	movlw	0
  2472  000814  6E27               	movwf	read_cal@i+1,c
  2473  000816  0E00               	movlw	0
  2474  000818  6E26               	movwf	read_cal@i,c
  2475  00081A  BE27               	btfsc	read_cal@i+1,7,c
  2476  00081C  D008               	goto	l137
  2477  00081E  5027               	movf	read_cal@i+1,w,c
  2478  000820  E105               	bnz	u3590
  2479  000822  0E05               	movlw	5
  2480  000824  5C26               	subwf	read_cal@i,w,c
  2481  000826  B0D8               	btfsc	status,0,c
  2482  000828  D088               	goto	u3610
  2483  00082A  D001               	goto	l137
  2484  00082C                     u3590:
  2485  00082C  D086               	goto	u3610
  2486  00082E                     l137:
  2487  00082E  90D8               	bcf	status,0,c
  2488  000830  3426               	rlcf	read_cal@i,w,c
  2489  000832  6ED9               	movwf	fsr2l,c
  2490  000834  3427               	rlcf	read_cal@i+1,w,c
  2491  000836  6EDA               	movwf	fsr2h,c
  2492  000838  0EDB               	movlw	low _ls
  2493  00083A  26D9               	addwf	fsr2l,f,c
  2494  00083C  0E00               	movlw	high _ls
  2495  00083E  22DA               	addwfc	fsr2h,f,c
  2496  000840  CFDE F015          	movff	postinc2,??_read_cal
  2497  000844  CFDD F016          	movff	postdec2,??_read_cal+1
  2498  000848  90D8               	bcf	status,0,c
  2499  00084A  3615               	rlcf	??_read_cal,f,c
  2500  00084C  3616               	rlcf	??_read_cal+1,f,c
  2501  00084E  0EB0               	movlw	low _an
  2502  000850  2415               	addwf	??_read_cal,w,c
  2503  000852  6ED9               	movwf	fsr2l,c
  2504  000854  0E00               	movlw	high _an
  2505  000856  2016               	addwfc	??_read_cal+1,w,c
  2506  000858  6EDA               	movwf	fsr2h,c
  2507  00085A  90D8               	bcf	status,0,c
  2508  00085C  3426               	rlcf	read_cal@i,w,c
  2509  00085E  6EE1               	movwf	fsr1l,c
  2510  000860  3427               	rlcf	read_cal@i+1,w,c
  2511  000862  6EE2               	movwf	fsr1h,c
  2512  000864  0EDB               	movlw	low _ls
  2513  000866  26E1               	addwf	fsr1l,f,c
  2514  000868  0E00               	movlw	high _ls
  2515  00086A  22E2               	addwfc	fsr1h,f,c
  2516  00086C  CFE6 F019          	movff	postinc1,??_read_cal+4
  2517  000870  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2518  000874  90D8               	bcf	status,0,c
  2519  000876  3619               	rlcf	??_read_cal+4,f,c
  2520  000878  361A               	rlcf	??_read_cal+5,f,c
  2521  00087A  0E8C               	movlw	low _mins
  2522  00087C  2419               	addwf	??_read_cal+4,w,c
  2523  00087E  6EE1               	movwf	fsr1l,c
  2524  000880  0E00               	movlw	high _mins
  2525  000882  201A               	addwfc	??_read_cal+5,w,c
  2526  000884  6EE2               	movwf	fsr1h,c
  2527  000886  50DE               	movf	postinc2,w,c
  2528  000888  5CE6               	subwf	postinc1,w,c
  2529  00088A  50E6               	movf	postinc1,w,c
  2530  00088C  0A80               	xorlw	128
  2531  00088E  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2532  000890  50DE               	movf	postinc2,w,c
  2533  000892  0A80               	xorlw	128
  2534  000894  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2535  000896  A0D8               	btfss	status,0,c
  2536  000898  D015               	goto	l140
  2537  00089A  90D8               	bcf	status,0,c
  2538  00089C  3426               	rlcf	read_cal@i,w,c
  2539  00089E  6ED9               	movwf	fsr2l,c
  2540  0008A0  3427               	rlcf	read_cal@i+1,w,c
  2541  0008A2  6EDA               	movwf	fsr2h,c
  2542  0008A4  0EDB               	movlw	low _ls
  2543  0008A6  26D9               	addwf	fsr2l,f,c
  2544  0008A8  0E00               	movlw	high _ls
  2545  0008AA  22DA               	addwfc	fsr2h,f,c
  2546  0008AC  CFDE F015          	movff	postinc2,??_read_cal
  2547  0008B0  CFDD F016          	movff	postdec2,??_read_cal+1
  2548  0008B4  90D8               	bcf	status,0,c
  2549  0008B6  3615               	rlcf	??_read_cal,f,c
  2550  0008B8  3616               	rlcf	??_read_cal+1,f,c
  2551  0008BA  0EB0               	movlw	low _an
  2552  0008BC  2415               	addwf	??_read_cal,w,c
  2553  0008BE  6E20               	movwf	_read_cal$505,c
  2554  0008C0  0E00               	movlw	high _an
  2555  0008C2  D014               	goto	L4
  2556  0008C4                     l140:
  2557  0008C4  90D8               	bcf	status,0,c
  2558  0008C6  3426               	rlcf	read_cal@i,w,c
  2559  0008C8  6ED9               	movwf	fsr2l,c
  2560  0008CA  3427               	rlcf	read_cal@i+1,w,c
  2561  0008CC  6EDA               	movwf	fsr2h,c
  2562  0008CE  0EDB               	movlw	low _ls
  2563  0008D0  26D9               	addwf	fsr2l,f,c
  2564  0008D2  0E00               	movlw	high _ls
  2565  0008D4  22DA               	addwfc	fsr2h,f,c
  2566  0008D6  CFDE F015          	movff	postinc2,??_read_cal
  2567  0008DA  CFDD F016          	movff	postdec2,??_read_cal+1
  2568  0008DE  90D8               	bcf	status,0,c
  2569  0008E0  3615               	rlcf	??_read_cal,f,c
  2570  0008E2  3616               	rlcf	??_read_cal+1,f,c
  2571  0008E4  0E8C               	movlw	low _mins
  2572  0008E6  2415               	addwf	??_read_cal,w,c
  2573  0008E8  6E20               	movwf	_read_cal$505,c
  2574  0008EA  0E00               	movlw	high _mins
  2575  0008EC                     L4:
  2576  0008EC  2016               	addwfc	??_read_cal+1,w,c
  2577  0008EE  6E21               	movwf	_read_cal$505+1,c
  2578  0008F0  C020  FFD9         	movff	_read_cal$505,fsr2l
  2579  0008F4  C021  FFDA         	movff	_read_cal$505+1,fsr2h
  2580  0008F8  90D8               	bcf	status,0,c
  2581  0008FA  3426               	rlcf	read_cal@i,w,c
  2582  0008FC  6EE1               	movwf	fsr1l,c
  2583  0008FE  3427               	rlcf	read_cal@i+1,w,c
  2584  000900  6EE2               	movwf	fsr1h,c
  2585  000902  0EDB               	movlw	low _ls
  2586  000904  26E1               	addwf	fsr1l,f,c
  2587  000906  0E00               	movlw	high _ls
  2588  000908  22E2               	addwfc	fsr1h,f,c
  2589  00090A  CFE6 F015          	movff	postinc1,??_read_cal
  2590  00090E  CFE5 F016          	movff	postdec1,??_read_cal+1
  2591  000912  90D8               	bcf	status,0,c
  2592  000914  3615               	rlcf	??_read_cal,f,c
  2593  000916  3616               	rlcf	??_read_cal+1,f,c
  2594  000918  0E8C               	movlw	low _mins
  2595  00091A  2415               	addwf	??_read_cal,w,c
  2596  00091C  6EE1               	movwf	fsr1l,c
  2597  00091E  0E00               	movlw	high _mins
  2598  000920  2016               	addwfc	??_read_cal+1,w,c
  2599  000922  6EE2               	movwf	fsr1h,c
  2600  000924  CFDE FFE6          	movff	postinc2,postinc1
  2601  000928  CFDD FFE5          	movff	postdec2,postdec1
  2602  00092C  4A26               	infsnz	read_cal@i,f,c
  2603  00092E  2A27               	incf	read_cal@i+1,f,c
  2604  000930  BE27               	btfsc	read_cal@i+1,7,c
  2605  000932  D77D               	goto	l137
  2606  000934  5027               	movf	read_cal@i+1,w,c
  2607  000936  E101               	bnz	l3219
  2608  000938  D774               	goto	L5
  2609  00093A                     u3610:
  2610  00093A                     l3219:
  2611                           
  2612                           ;analog.c: 53: for (i = 0;i < 2;i++) maxs[es[i]] = maxs[es[i]]>an[es[i]]?maxs[es[i]]:an[
      +                          es[i]];
  2613  00093A  0E00               	movlw	0
  2614  00093C  6E27               	movwf	read_cal@i+1,c
  2615  00093E  0E00               	movlw	0
  2616  000940  6E26               	movwf	read_cal@i,c
  2617  000942  BE27               	btfsc	read_cal@i+1,7,c
  2618  000944  D008               	goto	l143
  2619  000946  5027               	movf	read_cal@i+1,w,c
  2620  000948  E105               	bnz	u3620
  2621  00094A  0E02               	movlw	2
  2622  00094C  5C26               	subwf	read_cal@i,w,c
  2623  00094E  B0D8               	btfsc	status,0,c
  2624  000950  D088               	goto	u3640
  2625  000952  D001               	goto	l143
  2626  000954                     u3620:
  2627  000954  D086               	goto	u3640
  2628  000956                     l143:
  2629  000956  90D8               	bcf	status,0,c
  2630  000958  3426               	rlcf	read_cal@i,w,c
  2631  00095A  6ED9               	movwf	fsr2l,c
  2632  00095C  3427               	rlcf	read_cal@i+1,w,c
  2633  00095E  6EDA               	movwf	fsr2h,c
  2634  000960  0E38               	movlw	low _es
  2635  000962  26D9               	addwf	fsr2l,f,c
  2636  000964  0E00               	movlw	high _es
  2637  000966  22DA               	addwfc	fsr2h,f,c
  2638  000968  CFDE F015          	movff	postinc2,??_read_cal
  2639  00096C  CFDD F016          	movff	postdec2,??_read_cal+1
  2640  000970  90D8               	bcf	status,0,c
  2641  000972  3615               	rlcf	??_read_cal,f,c
  2642  000974  3616               	rlcf	??_read_cal+1,f,c
  2643  000976  0E9E               	movlw	low _maxs
  2644  000978  2415               	addwf	??_read_cal,w,c
  2645  00097A  6ED9               	movwf	fsr2l,c
  2646  00097C  0E00               	movlw	high _maxs
  2647  00097E  2016               	addwfc	??_read_cal+1,w,c
  2648  000980  6EDA               	movwf	fsr2h,c
  2649  000982  90D8               	bcf	status,0,c
  2650  000984  3426               	rlcf	read_cal@i,w,c
  2651  000986  6EE1               	movwf	fsr1l,c
  2652  000988  3427               	rlcf	read_cal@i+1,w,c
  2653  00098A  6EE2               	movwf	fsr1h,c
  2654  00098C  0E38               	movlw	low _es
  2655  00098E  26E1               	addwf	fsr1l,f,c
  2656  000990  0E00               	movlw	high _es
  2657  000992  22E2               	addwfc	fsr1h,f,c
  2658  000994  CFE6 F019          	movff	postinc1,??_read_cal+4
  2659  000998  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2660  00099C  90D8               	bcf	status,0,c
  2661  00099E  3619               	rlcf	??_read_cal+4,f,c
  2662  0009A0  361A               	rlcf	??_read_cal+5,f,c
  2663  0009A2  0EB0               	movlw	low _an
  2664  0009A4  2419               	addwf	??_read_cal+4,w,c
  2665  0009A6  6EE1               	movwf	fsr1l,c
  2666  0009A8  0E00               	movlw	high _an
  2667  0009AA  201A               	addwfc	??_read_cal+5,w,c
  2668  0009AC  6EE2               	movwf	fsr1h,c
  2669  0009AE  50DE               	movf	postinc2,w,c
  2670  0009B0  5CE6               	subwf	postinc1,w,c
  2671  0009B2  50E6               	movf	postinc1,w,c
  2672  0009B4  0A80               	xorlw	128
  2673  0009B6  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2674  0009B8  50DE               	movf	postinc2,w,c
  2675  0009BA  0A80               	xorlw	128
  2676  0009BC  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2677  0009BE  A0D8               	btfss	status,0,c
  2678  0009C0  D015               	goto	l146
  2679  0009C2  90D8               	bcf	status,0,c
  2680  0009C4  3426               	rlcf	read_cal@i,w,c
  2681  0009C6  6ED9               	movwf	fsr2l,c
  2682  0009C8  3427               	rlcf	read_cal@i+1,w,c
  2683  0009CA  6EDA               	movwf	fsr2h,c
  2684  0009CC  0E38               	movlw	low _es
  2685  0009CE  26D9               	addwf	fsr2l,f,c
  2686  0009D0  0E00               	movlw	high _es
  2687  0009D2  22DA               	addwfc	fsr2h,f,c
  2688  0009D4  CFDE F015          	movff	postinc2,??_read_cal
  2689  0009D8  CFDD F016          	movff	postdec2,??_read_cal+1
  2690  0009DC  90D8               	bcf	status,0,c
  2691  0009DE  3615               	rlcf	??_read_cal,f,c
  2692  0009E0  3616               	rlcf	??_read_cal+1,f,c
  2693  0009E2  0EB0               	movlw	low _an
  2694  0009E4  2415               	addwf	??_read_cal,w,c
  2695  0009E6  6E22               	movwf	_read_cal$507,c
  2696  0009E8  0E00               	movlw	high _an
  2697  0009EA  D014               	goto	L6
  2698  0009EC                     l146:
  2699  0009EC  90D8               	bcf	status,0,c
  2700  0009EE  3426               	rlcf	read_cal@i,w,c
  2701  0009F0  6ED9               	movwf	fsr2l,c
  2702  0009F2  3427               	rlcf	read_cal@i+1,w,c
  2703  0009F4  6EDA               	movwf	fsr2h,c
  2704  0009F6  0E38               	movlw	low _es
  2705  0009F8  26D9               	addwf	fsr2l,f,c
  2706  0009FA  0E00               	movlw	high _es
  2707  0009FC  22DA               	addwfc	fsr2h,f,c
  2708  0009FE  CFDE F015          	movff	postinc2,??_read_cal
  2709  000A02  CFDD F016          	movff	postdec2,??_read_cal+1
  2710  000A06  90D8               	bcf	status,0,c
  2711  000A08  3615               	rlcf	??_read_cal,f,c
  2712  000A0A  3616               	rlcf	??_read_cal+1,f,c
  2713  000A0C  0E9E               	movlw	low _maxs
  2714  000A0E  2415               	addwf	??_read_cal,w,c
  2715  000A10  6E22               	movwf	_read_cal$507,c
  2716  000A12  0E00               	movlw	high _maxs
  2717  000A14                     L6:
  2718  000A14  2016               	addwfc	??_read_cal+1,w,c
  2719  000A16  6E23               	movwf	_read_cal$507+1,c
  2720  000A18  C022  FFD9         	movff	_read_cal$507,fsr2l
  2721  000A1C  C023  FFDA         	movff	_read_cal$507+1,fsr2h
  2722  000A20  90D8               	bcf	status,0,c
  2723  000A22  3426               	rlcf	read_cal@i,w,c
  2724  000A24  6EE1               	movwf	fsr1l,c
  2725  000A26  3427               	rlcf	read_cal@i+1,w,c
  2726  000A28  6EE2               	movwf	fsr1h,c
  2727  000A2A  0E38               	movlw	low _es
  2728  000A2C  26E1               	addwf	fsr1l,f,c
  2729  000A2E  0E00               	movlw	high _es
  2730  000A30  22E2               	addwfc	fsr1h,f,c
  2731  000A32  CFE6 F015          	movff	postinc1,??_read_cal
  2732  000A36  CFE5 F016          	movff	postdec1,??_read_cal+1
  2733  000A3A  90D8               	bcf	status,0,c
  2734  000A3C  3615               	rlcf	??_read_cal,f,c
  2735  000A3E  3616               	rlcf	??_read_cal+1,f,c
  2736  000A40  0E9E               	movlw	low _maxs
  2737  000A42  2415               	addwf	??_read_cal,w,c
  2738  000A44  6EE1               	movwf	fsr1l,c
  2739  000A46  0E00               	movlw	high _maxs
  2740  000A48  2016               	addwfc	??_read_cal+1,w,c
  2741  000A4A  6EE2               	movwf	fsr1h,c
  2742  000A4C  CFDE FFE6          	movff	postinc2,postinc1
  2743  000A50  CFDD FFE5          	movff	postdec2,postdec1
  2744  000A54  4A26               	infsnz	read_cal@i,f,c
  2745  000A56  2A27               	incf	read_cal@i+1,f,c
  2746  000A58  BE27               	btfsc	read_cal@i+1,7,c
  2747  000A5A  D77D               	goto	l143
  2748  000A5C  5027               	movf	read_cal@i+1,w,c
  2749  000A5E  E101               	bnz	l3237
  2750  000A60  D774               	goto	L7
  2751  000A62                     u3640:
  2752  000A62                     l3237:
  2753                           
  2754                           ;analog.c: 54: for (i = 0;i < 2;i++) mins[es[i]] = mins[es[i]]<an[es[i]]?mins[es[i]]:an[
      +                          es[i]];
  2755  000A62  0E00               	movlw	0
  2756  000A64  6E27               	movwf	read_cal@i+1,c
  2757  000A66  0E00               	movlw	0
  2758  000A68  6E26               	movwf	read_cal@i,c
  2759  000A6A  BE27               	btfsc	read_cal@i+1,7,c
  2760  000A6C  D008               	goto	l149
  2761  000A6E  5027               	movf	read_cal@i+1,w,c
  2762  000A70  E105               	bnz	u3650
  2763  000A72  0E02               	movlw	2
  2764  000A74  5C26               	subwf	read_cal@i,w,c
  2765  000A76  B0D8               	btfsc	status,0,c
  2766  000A78  0012               	return	
  2767  000A7A  D001               	goto	l149
  2768  000A7C                     u3650:
  2769  000A7C  0012               	return	
  2770  000A7E                     l149:
  2771  000A7E  90D8               	bcf	status,0,c
  2772  000A80  3426               	rlcf	read_cal@i,w,c
  2773  000A82  6ED9               	movwf	fsr2l,c
  2774  000A84  3427               	rlcf	read_cal@i+1,w,c
  2775  000A86  6EDA               	movwf	fsr2h,c
  2776  000A88  0E38               	movlw	low _es
  2777  000A8A  26D9               	addwf	fsr2l,f,c
  2778  000A8C  0E00               	movlw	high _es
  2779  000A8E  22DA               	addwfc	fsr2h,f,c
  2780  000A90  CFDE F015          	movff	postinc2,??_read_cal
  2781  000A94  CFDD F016          	movff	postdec2,??_read_cal+1
  2782  000A98  90D8               	bcf	status,0,c
  2783  000A9A  3615               	rlcf	??_read_cal,f,c
  2784  000A9C  3616               	rlcf	??_read_cal+1,f,c
  2785  000A9E  0EB0               	movlw	low _an
  2786  000AA0  2415               	addwf	??_read_cal,w,c
  2787  000AA2  6ED9               	movwf	fsr2l,c
  2788  000AA4  0E00               	movlw	high _an
  2789  000AA6  2016               	addwfc	??_read_cal+1,w,c
  2790  000AA8  6EDA               	movwf	fsr2h,c
  2791  000AAA  90D8               	bcf	status,0,c
  2792  000AAC  3426               	rlcf	read_cal@i,w,c
  2793  000AAE  6EE1               	movwf	fsr1l,c
  2794  000AB0  3427               	rlcf	read_cal@i+1,w,c
  2795  000AB2  6EE2               	movwf	fsr1h,c
  2796  000AB4  0E38               	movlw	low _es
  2797  000AB6  26E1               	addwf	fsr1l,f,c
  2798  000AB8  0E00               	movlw	high _es
  2799  000ABA  22E2               	addwfc	fsr1h,f,c
  2800  000ABC  CFE6 F019          	movff	postinc1,??_read_cal+4
  2801  000AC0  CFE5 F01A          	movff	postdec1,??_read_cal+5
  2802  000AC4  90D8               	bcf	status,0,c
  2803  000AC6  3619               	rlcf	??_read_cal+4,f,c
  2804  000AC8  361A               	rlcf	??_read_cal+5,f,c
  2805  000ACA  0E8C               	movlw	low _mins
  2806  000ACC  2419               	addwf	??_read_cal+4,w,c
  2807  000ACE  6EE1               	movwf	fsr1l,c
  2808  000AD0  0E00               	movlw	high _mins
  2809  000AD2  201A               	addwfc	??_read_cal+5,w,c
  2810  000AD4  6EE2               	movwf	fsr1h,c
  2811  000AD6  50DE               	movf	postinc2,w,c
  2812  000AD8  5CE6               	subwf	postinc1,w,c
  2813  000ADA  50E6               	movf	postinc1,w,c
  2814  000ADC  0A80               	xorlw	128
  2815  000ADE  6E1D               	movwf	(??_read_cal+8)& (0+255),c
  2816  000AE0  50DE               	movf	postinc2,w,c
  2817  000AE2  0A80               	xorlw	128
  2818  000AE4  581D               	subwfb	(??_read_cal+8)& (0+255),w,c
  2819  000AE6  A0D8               	btfss	status,0,c
  2820  000AE8  D015               	goto	l152
  2821  000AEA  90D8               	bcf	status,0,c
  2822  000AEC  3426               	rlcf	read_cal@i,w,c
  2823  000AEE  6ED9               	movwf	fsr2l,c
  2824  000AF0  3427               	rlcf	read_cal@i+1,w,c
  2825  000AF2  6EDA               	movwf	fsr2h,c
  2826  000AF4  0E38               	movlw	low _es
  2827  000AF6  26D9               	addwf	fsr2l,f,c
  2828  000AF8  0E00               	movlw	high _es
  2829  000AFA  22DA               	addwfc	fsr2h,f,c
  2830  000AFC  CFDE F015          	movff	postinc2,??_read_cal
  2831  000B00  CFDD F016          	movff	postdec2,??_read_cal+1
  2832  000B04  90D8               	bcf	status,0,c
  2833  000B06  3615               	rlcf	??_read_cal,f,c
  2834  000B08  3616               	rlcf	??_read_cal+1,f,c
  2835  000B0A  0EB0               	movlw	low _an
  2836  000B0C  2415               	addwf	??_read_cal,w,c
  2837  000B0E  6E24               	movwf	_read_cal$509,c
  2838  000B10  0E00               	movlw	high _an
  2839  000B12  D014               	goto	L8
  2840  000B14                     l152:
  2841  000B14  90D8               	bcf	status,0,c
  2842  000B16  3426               	rlcf	read_cal@i,w,c
  2843  000B18  6ED9               	movwf	fsr2l,c
  2844  000B1A  3427               	rlcf	read_cal@i+1,w,c
  2845  000B1C  6EDA               	movwf	fsr2h,c
  2846  000B1E  0E38               	movlw	low _es
  2847  000B20  26D9               	addwf	fsr2l,f,c
  2848  000B22  0E00               	movlw	high _es
  2849  000B24  22DA               	addwfc	fsr2h,f,c
  2850  000B26  CFDE F015          	movff	postinc2,??_read_cal
  2851  000B2A  CFDD F016          	movff	postdec2,??_read_cal+1
  2852  000B2E  90D8               	bcf	status,0,c
  2853  000B30  3615               	rlcf	??_read_cal,f,c
  2854  000B32  3616               	rlcf	??_read_cal+1,f,c
  2855  000B34  0E8C               	movlw	low _mins
  2856  000B36  2415               	addwf	??_read_cal,w,c
  2857  000B38  6E24               	movwf	_read_cal$509,c
  2858  000B3A  0E00               	movlw	high _mins
  2859  000B3C                     L8:
  2860  000B3C  2016               	addwfc	??_read_cal+1,w,c
  2861  000B3E  6E25               	movwf	_read_cal$509+1,c
  2862  000B40  C024  FFD9         	movff	_read_cal$509,fsr2l
  2863  000B44  C025  FFDA         	movff	_read_cal$509+1,fsr2h
  2864  000B48  90D8               	bcf	status,0,c
  2865  000B4A  3426               	rlcf	read_cal@i,w,c
  2866  000B4C  6EE1               	movwf	fsr1l,c
  2867  000B4E  3427               	rlcf	read_cal@i+1,w,c
  2868  000B50  6EE2               	movwf	fsr1h,c
  2869  000B52  0E38               	movlw	low _es
  2870  000B54  26E1               	addwf	fsr1l,f,c
  2871  000B56  0E00               	movlw	high _es
  2872  000B58  22E2               	addwfc	fsr1h,f,c
  2873  000B5A  CFE6 F015          	movff	postinc1,??_read_cal
  2874  000B5E  CFE5 F016          	movff	postdec1,??_read_cal+1
  2875  000B62  90D8               	bcf	status,0,c
  2876  000B64  3615               	rlcf	??_read_cal,f,c
  2877  000B66  3616               	rlcf	??_read_cal+1,f,c
  2878  000B68  0E8C               	movlw	low _mins
  2879  000B6A  2415               	addwf	??_read_cal,w,c
  2880  000B6C  6EE1               	movwf	fsr1l,c
  2881  000B6E  0E00               	movlw	high _mins
  2882  000B70  2016               	addwfc	??_read_cal+1,w,c
  2883  000B72  6EE2               	movwf	fsr1h,c
  2884  000B74  CFDE FFE6          	movff	postinc2,postinc1
  2885  000B78  CFDD FFE5          	movff	postdec2,postdec1
  2886  000B7C  4A26               	infsnz	read_cal@i,f,c
  2887  000B7E  2A27               	incf	read_cal@i+1,f,c
  2888  000B80  BE27               	btfsc	read_cal@i+1,7,c
  2889  000B82  D77D               	goto	l149
  2890  000B84  5027               	movf	read_cal@i+1,w,c
  2891  000B86  E101               	bnz	l155
  2892  000B88  D774               	goto	L9
  2893  000B8A                     l155:
  2894  000B8A  0012               	return		;funcret
  2895  000B8C                     __end_of_read_cal:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           postinc1	equ	0xFE6
  2904                           postdec1	equ	0xFE5
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           postinc2	equ	0xFDE
  2908                           postdec2	equ	0xFDD
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function _mspeed *****************
  2914 ;; Defined at:
  2915 ;;		line 107 in file "config.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  a               2   21[BANK0 ] int 
  2918 ;;  b               2   23[BANK0 ] int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0       4       0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        4 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    3
  2937 ;; This function calls:
  2938 ;;		_MotorASpeed
  2939 ;;		_MotorBSpeed
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text7
  2946  001BB2                     __ptext7:
  2947                           	opt stack 0
  2948  001BB2                     _mspeed:
  2949                           	opt stack 27
  2950                           
  2951                           ;config.c: 108: MotorASpeed(a);
  2952                           
  2953                           ;incstack = 0
  2954  001BB2  C0D7  F01D         	movff	mspeed@a,MotorASpeed@S
  2955  001BB6  C0D8  F01E         	movff	mspeed@a+1,MotorASpeed@S+1
  2956  001BBA  EC2D  F00B         	call	_MotorASpeed	;wreg free
  2957                           
  2958                           ;config.c: 109: MotorBSpeed(b);
  2959  001BBE  C0D9  F01D         	movff	mspeed@b,MotorBSpeed@S
  2960  001BC2  C0DA  F01E         	movff	mspeed@b+1,MotorBSpeed@S+1
  2961  001BC6  EC7E  F00B         	call	_MotorBSpeed	;wreg free
  2962  001BCA  0012               	return		;funcret
  2963  001BCC                     __end_of_mspeed:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           postinc1	equ	0xFE6
  2972                           postdec1	equ	0xFE5
  2973                           fsr1h	equ	0xFE2
  2974                           fsr1l	equ	0xFE1
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _MotorBSpeed *****************
  2982 ;; Defined at:
  2983 ;;		line 95 in file "config.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  S               2   28[COMRAM] int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2997 ;;      Params:         2       0       0       0       0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2999 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3000 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        3 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    2
  3004 ;; This function calls:
  3005 ;;		___awdiv
  3006 ;; This function is called by:
  3007 ;;		_mspeed
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text8
  3012  0016FC                     __ptext8:
  3013                           	opt stack 0
  3014  0016FC                     _MotorBSpeed:
  3015                           	opt stack 27
  3016                           
  3017                           ;config.c: 97: S = S<1000?S:1000;
  3018                           
  3019                           ;incstack = 0
  3020  0016FC  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3021  0016FE  D00A               	goto	l260
  3022  001700  0EE8               	movlw	232
  3023  001702  5C1D               	subwf	MotorBSpeed@S,w,c
  3024  001704  0E03               	movlw	3
  3025  001706  581E               	subwfb	MotorBSpeed@S+1,w,c
  3026  001708  A0D8               	btfss	status,0,c
  3027  00170A  D004               	goto	l260
  3028  00170C  0E03               	movlw	3
  3029  00170E  6E1E               	movwf	MotorBSpeed@S+1,c
  3030  001710  0EE8               	movlw	232
  3031  001712  6E1D               	movwf	MotorBSpeed@S,c
  3032  001714                     l260:
  3033                           
  3034                           ;config.c: 98: S = S>-1000?S:-1000;
  3035  001714  AE1E               	btfss	MotorBSpeed@S+1,7,c
  3036  001716  D00A               	goto	l264
  3037  001718  0E19               	movlw	25
  3038  00171A  5C1D               	subwf	MotorBSpeed@S,w,c
  3039  00171C  0EFC               	movlw	252
  3040  00171E  581E               	subwfb	MotorBSpeed@S+1,w,c
  3041  001720  B0D8               	btfsc	status,0,c
  3042  001722  D004               	goto	l264
  3043  001724  0EFC               	movlw	252
  3044  001726  6E1E               	movwf	MotorBSpeed@S+1,c
  3045  001728  0E18               	movlw	24
  3046  00172A  6E1D               	movwf	MotorBSpeed@S,c
  3047  00172C                     l264:
  3048                           
  3049                           ;config.c: 100: PORTBbits.RB1 = S > 0 ? 0 : 1;
  3050  00172C  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3051  00172E  D005               	goto	u3301
  3052  001730  501E               	movf	MotorBSpeed@S+1,w,c
  3053  001732  E106               	bnz	u3300
  3054  001734  041D               	decf	MotorBSpeed@S,w,c
  3055  001736  B0D8               	btfsc	status,0,c
  3056  001738  D003               	goto	u3300
  3057  00173A                     u3301:
  3058  00173A  6A1F               	clrf	??_MotorBSpeed& (0+255),c
  3059  00173C  2A1F               	incf	??_MotorBSpeed& (0+255),f,c
  3060  00173E  D001               	goto	u3318
  3061  001740                     u3300:
  3062  001740  6A1F               	clrf	??_MotorBSpeed& (0+255),c
  3063  001742                     u3318:
  3064  001742  461F               	rlncf	??_MotorBSpeed,f,c
  3065  001744  5081               	movf	3969,w,c	;volatile
  3066  001746  181F               	xorwf	??_MotorBSpeed,w,c
  3067  001748  0BFD               	andlw	-3
  3068  00174A  181F               	xorwf	??_MotorBSpeed,w,c
  3069  00174C  6E81               	movwf	3969,c	;volatile
  3070                           
  3071                           ;config.c: 101: S = S > 0 ? S : 1000 + S;
  3072  00174E  BE1E               	btfsc	MotorBSpeed@S+1,7,c
  3073  001750  D005               	goto	u3320
  3074  001752  501E               	movf	MotorBSpeed@S+1,w,c
  3075  001754  E109               	bnz	l2995
  3076  001756  041D               	decf	MotorBSpeed@S,w,c
  3077  001758  B0D8               	btfsc	status,0,c
  3078  00175A  D006               	goto	l268
  3079  00175C                     u3320:
  3080  00175C  0EE8               	movlw	232
  3081  00175E  241D               	addwf	MotorBSpeed@S,w,c
  3082  001760  6E1D               	movwf	MotorBSpeed@S,c
  3083  001762  0E03               	movlw	3
  3084  001764  201E               	addwfc	MotorBSpeed@S+1,w,c
  3085  001766  6E1E               	movwf	MotorBSpeed@S+1,c
  3086  001768                     l268:
  3087  001768                     l2995:
  3088                           
  3089                           ;config.c: 103: CCP2CONbits.DC2B = S % 4;
  3090  001768  C01D  F01F         	movff	MotorBSpeed@S,??_MotorBSpeed
  3091  00176C  0E03               	movlw	3
  3092  00176E  161F               	andwf	??_MotorBSpeed,f,c
  3093  001770  3A1F               	swapf	??_MotorBSpeed,f,c
  3094  001772  50BA               	movf	4026,w,c	;volatile
  3095  001774  181F               	xorwf	??_MotorBSpeed,w,c
  3096  001776  0BCF               	andlw	-49
  3097  001778  181F               	xorwf	??_MotorBSpeed,w,c
  3098  00177A  6EBA               	movwf	4026,c	;volatile
  3099                           
  3100                           ;config.c: 104: CCPR2L = S / 4;
  3101  00177C  C01D  F015         	movff	MotorBSpeed@S,___awdiv@dividend
  3102  001780  C01E  F016         	movff	MotorBSpeed@S+1,___awdiv@dividend+1
  3103  001784  0E00               	movlw	0
  3104  001786  6E18               	movwf	___awdiv@divisor+1,c
  3105  001788  0E04               	movlw	4
  3106  00178A  6E17               	movwf	___awdiv@divisor,c
  3107  00178C  EC13  F00C         	call	___awdiv	;wreg free
  3108  001790  5015               	movf	?___awdiv,w,c
  3109  001792  6EBB               	movwf	4027,c	;volatile
  3110  001794  0012               	return		;funcret
  3111  001796                     __end_of_MotorBSpeed:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postinc1	equ	0xFE6
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           postinc2	equ	0xFDE
  3124                           postdec2	equ	0xFDD
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _MotorASpeed *****************
  3130 ;; Defined at:
  3131 ;;		line 84 in file "config.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  S               2   28[COMRAM] int 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         2       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        3 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    2
  3152 ;; This function calls:
  3153 ;;		___awdiv
  3154 ;; This function is called by:
  3155 ;;		_mspeed
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text9
  3160  00165A                     __ptext9:
  3161                           	opt stack 0
  3162  00165A                     _MotorASpeed:
  3163                           	opt stack 27
  3164                           
  3165                           ;config.c: 85: S = -S;
  3166                           
  3167                           ;incstack = 0
  3168  00165A  6C1D               	negf	MotorASpeed@S,c
  3169  00165C  1E1E               	comf	MotorASpeed@S+1,f,c
  3170  00165E  B0D8               	btfsc	status,0,c
  3171  001660  2A1E               	incf	MotorASpeed@S+1,f,c
  3172                           
  3173                           ;config.c: 86: S = S<1000?S:1000;
  3174  001662  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3175  001664  D00A               	goto	l245
  3176  001666  0EE8               	movlw	232
  3177  001668  5C1D               	subwf	MotorASpeed@S,w,c
  3178  00166A  0E03               	movlw	3
  3179  00166C  581E               	subwfb	MotorASpeed@S+1,w,c
  3180  00166E  A0D8               	btfss	status,0,c
  3181  001670  D004               	goto	l245
  3182  001672  0E03               	movlw	3
  3183  001674  6E1E               	movwf	MotorASpeed@S+1,c
  3184  001676  0EE8               	movlw	232
  3185  001678  6E1D               	movwf	MotorASpeed@S,c
  3186  00167A                     l245:
  3187                           
  3188                           ;config.c: 87: S = S>-1000?S:-1000;
  3189  00167A  AE1E               	btfss	MotorASpeed@S+1,7,c
  3190  00167C  D00A               	goto	l249
  3191  00167E  0E19               	movlw	25
  3192  001680  5C1D               	subwf	MotorASpeed@S,w,c
  3193  001682  0EFC               	movlw	252
  3194  001684  581E               	subwfb	MotorASpeed@S+1,w,c
  3195  001686  B0D8               	btfsc	status,0,c
  3196  001688  D004               	goto	l249
  3197  00168A  0EFC               	movlw	252
  3198  00168C  6E1E               	movwf	MotorASpeed@S+1,c
  3199  00168E  0E18               	movlw	24
  3200  001690  6E1D               	movwf	MotorASpeed@S,c
  3201  001692                     l249:
  3202                           
  3203                           ;config.c: 89: PORTBbits.RB0 = S > 0 ? 0 : 1;
  3204  001692  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3205  001694  D005               	goto	u3251
  3206  001696  501E               	movf	MotorASpeed@S+1,w,c
  3207  001698  E106               	bnz	u3250
  3208  00169A  041D               	decf	MotorASpeed@S,w,c
  3209  00169C  B0D8               	btfsc	status,0,c
  3210  00169E  D003               	goto	u3250
  3211  0016A0                     u3251:
  3212  0016A0  6A1F               	clrf	??_MotorASpeed& (0+255),c
  3213  0016A2  2A1F               	incf	??_MotorASpeed& (0+255),f,c
  3214  0016A4  D001               	goto	u3268
  3215  0016A6                     u3250:
  3216  0016A6  6A1F               	clrf	??_MotorASpeed& (0+255),c
  3217  0016A8                     u3268:
  3218  0016A8  5081               	movf	3969,w,c	;volatile
  3219  0016AA  181F               	xorwf	??_MotorASpeed,w,c
  3220  0016AC  0BFE               	andlw	-2
  3221  0016AE  181F               	xorwf	??_MotorASpeed,w,c
  3222  0016B0  6E81               	movwf	3969,c	;volatile
  3223                           
  3224                           ;config.c: 90: S = S > 0 ? S : 1000 + S;
  3225  0016B2  BE1E               	btfsc	MotorASpeed@S+1,7,c
  3226  0016B4  D005               	goto	u3270
  3227  0016B6  501E               	movf	MotorASpeed@S+1,w,c
  3228  0016B8  E109               	bnz	l2979
  3229  0016BA  041D               	decf	MotorASpeed@S,w,c
  3230  0016BC  B0D8               	btfsc	status,0,c
  3231  0016BE  D006               	goto	l253
  3232  0016C0                     u3270:
  3233  0016C0  0EE8               	movlw	232
  3234  0016C2  241D               	addwf	MotorASpeed@S,w,c
  3235  0016C4  6E1D               	movwf	MotorASpeed@S,c
  3236  0016C6  0E03               	movlw	3
  3237  0016C8  201E               	addwfc	MotorASpeed@S+1,w,c
  3238  0016CA  6E1E               	movwf	MotorASpeed@S+1,c
  3239  0016CC                     l253:
  3240  0016CC                     l2979:
  3241                           
  3242                           ;config.c: 92: CCP1CONbits.DC1B1 = S % 4;
  3243  0016CC  C01D  F01F         	movff	MotorASpeed@S,??_MotorASpeed
  3244  0016D0  0E03               	movlw	3
  3245  0016D2  161F               	andwf	??_MotorASpeed,f,c
  3246  0016D4  3A1F               	swapf	??_MotorASpeed,f,c
  3247  0016D6  461F               	rlncf	??_MotorASpeed,f,c
  3248  0016D8  50BD               	movf	4029,w,c	;volatile
  3249  0016DA  181F               	xorwf	??_MotorASpeed,w,c
  3250  0016DC  0BDF               	andlw	-33
  3251  0016DE  181F               	xorwf	??_MotorASpeed,w,c
  3252  0016E0  6EBD               	movwf	4029,c	;volatile
  3253                           
  3254                           ;config.c: 93: CCPR1L = S / 4;
  3255  0016E2  C01D  F015         	movff	MotorASpeed@S,___awdiv@dividend
  3256  0016E6  C01E  F016         	movff	MotorASpeed@S+1,___awdiv@dividend+1
  3257  0016EA  0E00               	movlw	0
  3258  0016EC  6E18               	movwf	___awdiv@divisor+1,c
  3259  0016EE  0E04               	movlw	4
  3260  0016F0  6E17               	movwf	___awdiv@divisor,c
  3261  0016F2  EC13  F00C         	call	___awdiv	;wreg free
  3262  0016F6  5015               	movf	?___awdiv,w,c
  3263  0016F8  6EBE               	movwf	4030,c	;volatile
  3264  0016FA  0012               	return		;funcret
  3265  0016FC                     __end_of_MotorASpeed:
  3266                           	opt stack 0
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           postinc1	equ	0xFE6
  3274                           postdec1	equ	0xFE5
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           postinc2	equ	0xFDE
  3278                           postdec2	equ	0xFDD
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _line_cal *****************
  3284 ;; Defined at:
  3285 ;;		line 57 in file "analog.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  value           4   14[BANK0 ] long 
  3290 ;;  b               4    8[BANK0 ] long 
  3291 ;;  a               4    4[BANK0 ] long 
  3292 ;;  j               2   22[BANK0 ] int 
  3293 ;;  i               2   20[BANK0 ] int 
  3294 ;;  aux             2   18[BANK0 ] int 
  3295 ;;  ok              2   12[BANK0 ] int 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0
  3306 ;;      Locals:         0      24       0       0       0       0       0       0       0
  3307 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3308 ;;      Totals:         4      24       0       0       0       0       0       0       0
  3309 ;;Total ram usage:       28 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    2
  3312 ;; This function calls:
  3313 ;;		___aldiv
  3314 ;;		___lmul
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text10
  3321  000B8C                     __ptext10:
  3322                           	opt stack 0
  3323  000B8C                     _line_cal:
  3324                           	opt stack 28
  3325                           
  3326                           ;analog.c: 58: ll a = 0;
  3327                           
  3328                           ;incstack = 0
  3329  000B8C  0E00               	movlw	0
  3330  000B8E  0100               	movlb	0	; () banked
  3331  000B90  6FC6               	movwf	line_cal@a& (0+255),b
  3332  000B92  0E00               	movlw	0
  3333  000B94  6FC7               	movwf	(line_cal@a+1)& (0+255),b
  3334  000B96  0E00               	movlw	0
  3335  000B98  6FC8               	movwf	(line_cal@a+2)& (0+255),b
  3336  000B9A  0E00               	movlw	0
  3337  000B9C  6FC9               	movwf	(line_cal@a+3)& (0+255),b
  3338                           
  3339                           ;analog.c: 59: ll b = 0;
  3340  000B9E  0E00               	movlw	0
  3341  000BA0  0100               	movlb	0	; () banked
  3342  000BA2  6FCA               	movwf	line_cal@b& (0+255),b
  3343  000BA4  0E00               	movlw	0
  3344  000BA6  6FCB               	movwf	(line_cal@b+1)& (0+255),b
  3345  000BA8  0E00               	movlw	0
  3346  000BAA  6FCC               	movwf	(line_cal@b+2)& (0+255),b
  3347  000BAC  0E00               	movlw	0
  3348  000BAE  6FCD               	movwf	(line_cal@b+3)& (0+255),b
  3349                           
  3350                           ;analog.c: 61: int i , j , aux;
  3351                           ;analog.c: 62: ll value;
  3352                           ;analog.c: 63: int ok = 0;
  3353  000BB0  0E00               	movlw	0
  3354  000BB2  0100               	movlb	0	; () banked
  3355  000BB4  6FCF               	movwf	(line_cal@ok+1)& (0+255),b
  3356  000BB6  0E00               	movlw	0
  3357  000BB8  6FCE               	movwf	line_cal@ok& (0+255),b
  3358                           
  3359                           ;analog.c: 65: for (i = 0;i < 5;i++){
  3360  000BBA  0E00               	movlw	0
  3361  000BBC  0100               	movlb	0	; () banked
  3362  000BBE  6FD7               	movwf	(line_cal@i+1)& (0+255),b
  3363  000BC0  0E00               	movlw	0
  3364  000BC2  6FD6               	movwf	line_cal@i& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367  000BC4  0100               	movlb	0	; () banked
  3368  000BC6  BFD7               	btfsc	(line_cal@i+1)& (0+255),7,b
  3369  000BC8  D00A               	goto	l158
  3370  000BCA  0100               	movlb	0	; () banked
  3371  000BCC  51D7               	movf	(line_cal@i+1)& (0+255),w,b
  3372  000BCE  E106               	bnz	u3680
  3373  000BD0  0E05               	movlw	5
  3374  000BD2  0100               	movlb	0	; () banked
  3375  000BD4  5DD6               	subwf	line_cal@i& (0+255),w,b
  3376  000BD6  B0D8               	btfsc	status,0,c
  3377  000BD8  D159               	goto	u3720
  3378  000BDA  D001               	goto	l158
  3379  000BDC                     u3680:
  3380                           
  3381                           ; BSR set to: 0
  3382  000BDC  D157               	goto	u3720
  3383  000BDE                     l158:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;analog.c: 67: j = ls[i];
  3387                           
  3388                           ; BSR set to: 0
  3389  000BDE  90D8               	bcf	status,0,c
  3390  000BE0  0100               	movlb	0	; () banked
  3391  000BE2  35D6               	rlcf	line_cal@i& (0+255),w,b
  3392  000BE4  6ED9               	movwf	fsr2l,c
  3393  000BE6  0100               	movlb	0	; () banked
  3394  000BE8  35D7               	rlcf	(line_cal@i+1)& (0+255),w,b
  3395  000BEA  6EDA               	movwf	fsr2h,c
  3396  000BEC  0EDB               	movlw	low _ls
  3397  000BEE  26D9               	addwf	fsr2l,f,c
  3398  000BF0  0E00               	movlw	high _ls
  3399  000BF2  22DA               	addwfc	fsr2h,f,c
  3400  000BF4  CFDE F0D8          	movff	postinc2,line_cal@j
  3401  000BF8  CFDD F0D9          	movff	postdec2,line_cal@j+1
  3402                           
  3403                           ;analog.c: 68: aux = an[j];
  3404  000BFC  90D8               	bcf	status,0,c
  3405  000BFE  0100               	movlb	0	; () banked
  3406  000C00  35D8               	rlcf	line_cal@j& (0+255),w,b
  3407  000C02  6ED9               	movwf	fsr2l,c
  3408  000C04  0100               	movlb	0	; () banked
  3409  000C06  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3410  000C08  6EDA               	movwf	fsr2h,c
  3411  000C0A  0EB0               	movlw	low _an
  3412  000C0C  26D9               	addwf	fsr2l,f,c
  3413  000C0E  0E00               	movlw	high _an
  3414  000C10  22DA               	addwfc	fsr2h,f,c
  3415  000C12  CFDE F0D4          	movff	postinc2,line_cal@aux
  3416  000C16  CFDD F0D5          	movff	postdec2,line_cal@aux+1
  3417                           
  3418                           ;analog.c: 69: aux = aux>mins[j]?aux:mins[j];
  3419  000C1A  90D8               	bcf	status,0,c
  3420  000C1C  0100               	movlb	0	; () banked
  3421  000C1E  35D8               	rlcf	line_cal@j& (0+255),w,b
  3422  000C20  6ED9               	movwf	fsr2l,c
  3423  000C22  0100               	movlb	0	; () banked
  3424  000C24  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3425  000C26  6EDA               	movwf	fsr2h,c
  3426  000C28  0E8C               	movlw	low _mins
  3427  000C2A  26D9               	addwf	fsr2l,f,c
  3428  000C2C  0E00               	movlw	high _mins
  3429  000C2E  22DA               	addwfc	fsr2h,f,c
  3430  000C30  0100               	movlb	0	; () banked
  3431  000C32  51D4               	movf	line_cal@aux& (0+255),w,b
  3432  000C34  5CDE               	subwf	postinc2,w,c
  3433  000C36  50DE               	movf	postinc2,w,c
  3434  000C38  0A80               	xorlw	128
  3435  000C3A  6E31               	movwf	(??_line_cal+2)& (0+255),c
  3436  000C3C  0100               	movlb	0	; () banked
  3437  000C3E  51D5               	movf	(line_cal@aux+1)& (0+255),w,b
  3438  000C40  0A80               	xorlw	128
  3439  000C42  5831               	subwfb	(??_line_cal+2)& (0+255),w,c
  3440  000C44  A0D8               	btfss	status,0,c
  3441  000C46  D00F               	goto	l161
  3442                           
  3443                           ; BSR set to: 0
  3444  000C48  90D8               	bcf	status,0,c
  3445  000C4A  0100               	movlb	0	; () banked
  3446  000C4C  35D8               	rlcf	line_cal@j& (0+255),w,b
  3447  000C4E  6ED9               	movwf	fsr2l,c
  3448  000C50  0100               	movlb	0	; () banked
  3449  000C52  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3450  000C54  6EDA               	movwf	fsr2h,c
  3451  000C56  0E8C               	movlw	low _mins
  3452  000C58  26D9               	addwf	fsr2l,f,c
  3453  000C5A  0E00               	movlw	high _mins
  3454  000C5C  22DA               	addwfc	fsr2h,f,c
  3455  000C5E  CFDE F0D4          	movff	postinc2,line_cal@aux
  3456  000C62  CFDD F0D5          	movff	postdec2,line_cal@aux+1
  3457  000C66                     l161:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;analog.c: 70: aux = aux<maxs[j]?aux:maxs[j];
  3461                           
  3462                           ; BSR set to: 0
  3463                           
  3464                           ; BSR set to: 0
  3465  000C66  90D8               	bcf	status,0,c
  3466  000C68  0100               	movlb	0	; () banked
  3467  000C6A  35D8               	rlcf	line_cal@j& (0+255),w,b
  3468  000C6C  6ED9               	movwf	fsr2l,c
  3469  000C6E  0100               	movlb	0	; () banked
  3470  000C70  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3471  000C72  6EDA               	movwf	fsr2h,c
  3472  000C74  0E9E               	movlw	low _maxs
  3473  000C76  26D9               	addwf	fsr2l,f,c
  3474  000C78  0E00               	movlw	high _maxs
  3475  000C7A  22DA               	addwfc	fsr2h,f,c
  3476  000C7C  50DE               	movf	postinc2,w,c
  3477  000C7E  0100               	movlb	0	; () banked
  3478  000C80  5DD4               	subwf	line_cal@aux& (0+255),w,b
  3479  000C82  0100               	movlb	0	; () banked
  3480  000C84  51D5               	movf	(line_cal@aux+1)& (0+255),w,b
  3481  000C86  0A80               	xorlw	128
  3482  000C88  6E31               	movwf	(??_line_cal+2)& (0+255),c
  3483  000C8A  50DE               	movf	postinc2,w,c
  3484  000C8C  0A80               	xorlw	128
  3485  000C8E  5831               	subwfb	(??_line_cal+2)& (0+255),w,c
  3486  000C90  A0D8               	btfss	status,0,c
  3487  000C92  D00F               	goto	l165
  3488                           
  3489                           ; BSR set to: 0
  3490  000C94  90D8               	bcf	status,0,c
  3491  000C96  0100               	movlb	0	; () banked
  3492  000C98  35D8               	rlcf	line_cal@j& (0+255),w,b
  3493  000C9A  6ED9               	movwf	fsr2l,c
  3494  000C9C  0100               	movlb	0	; () banked
  3495  000C9E  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3496  000CA0  6EDA               	movwf	fsr2h,c
  3497  000CA2  0E9E               	movlw	low _maxs
  3498  000CA4  26D9               	addwf	fsr2l,f,c
  3499  000CA6  0E00               	movlw	high _maxs
  3500  000CA8  22DA               	addwfc	fsr2h,f,c
  3501  000CAA  CFDE F0D4          	movff	postinc2,line_cal@aux
  3502  000CAE  CFDD F0D5          	movff	postdec2,line_cal@aux+1
  3503  000CB2                     l165:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;analog.c: 72: aux -= mins[j];
  3507                           
  3508                           ; BSR set to: 0
  3509                           
  3510                           ; BSR set to: 0
  3511  000CB2  90D8               	bcf	status,0,c
  3512  000CB4  0100               	movlb	0	; () banked
  3513  000CB6  35D8               	rlcf	line_cal@j& (0+255),w,b
  3514  000CB8  6ED9               	movwf	fsr2l,c
  3515  000CBA  0100               	movlb	0	; () banked
  3516  000CBC  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3517  000CBE  6EDA               	movwf	fsr2h,c
  3518  000CC0  0E8C               	movlw	low _mins
  3519  000CC2  26D9               	addwf	fsr2l,f,c
  3520  000CC4  0E00               	movlw	high _mins
  3521  000CC6  22DA               	addwfc	fsr2h,f,c
  3522  000CC8  50DE               	movf	postinc2,w,c
  3523  000CCA  0100               	movlb	0	; () banked
  3524  000CCC  5FD4               	subwf	line_cal@aux& (0+255),f,b
  3525  000CCE  50DD               	movf	postdec2,w,c
  3526  000CD0  0100               	movlb	0	; () banked
  3527  000CD2  5BD5               	subwfb	(line_cal@aux+1)& (0+255),f,b
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;analog.c: 74: value = 1000 - (ll)(aux) * (ll)1000 / (ll)(maxs[j] - mins[j]);
  3531  000CD4  C0D4  F015         	movff	line_cal@aux,___lmul@multiplier
  3532  000CD8  C0D5  F016         	movff	line_cal@aux+1,___lmul@multiplier+1
  3533  000CDC  0E00               	movlw	0
  3534  000CDE  BE16               	btfsc	___lmul@multiplier+1,7,c
  3535  000CE0  0EFF               	movlw	-1
  3536  000CE2  6E17               	movwf	___lmul@multiplier+2,c
  3537  000CE4  6E18               	movwf	___lmul@multiplier+3,c
  3538  000CE6  0EE8               	movlw	232
  3539  000CE8  6E19               	movwf	___lmul@multiplicand,c
  3540  000CEA  0E03               	movlw	3
  3541  000CEC  6E1A               	movwf	___lmul@multiplicand+1,c
  3542  000CEE  0E00               	movlw	0
  3543  000CF0  6E1B               	movwf	___lmul@multiplicand+2,c
  3544  000CF2  0E00               	movlw	0
  3545  000CF4  6E1C               	movwf	___lmul@multiplicand+3,c
  3546  000CF6  ECFC  F00C         	call	___lmul	;wreg free
  3547  000CFA  C015  F021         	movff	?___lmul,___aldiv@dividend
  3548  000CFE  C016  F022         	movff	?___lmul+1,___aldiv@dividend+1
  3549  000D02  C017  F023         	movff	?___lmul+2,___aldiv@dividend+2
  3550  000D06  C018  F024         	movff	?___lmul+3,___aldiv@dividend+3
  3551  000D0A  90D8               	bcf	status,0,c
  3552  000D0C  0100               	movlb	0	; () banked
  3553  000D0E  35D8               	rlcf	line_cal@j& (0+255),w,b
  3554  000D10  6ED9               	movwf	fsr2l,c
  3555  000D12  0100               	movlb	0	; () banked
  3556  000D14  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3557  000D16  6EDA               	movwf	fsr2h,c
  3558  000D18  0E9E               	movlw	low _maxs
  3559  000D1A  26D9               	addwf	fsr2l,f,c
  3560  000D1C  0E00               	movlw	high _maxs
  3561  000D1E  22DA               	addwfc	fsr2h,f,c
  3562  000D20  CFDE F02F          	movff	postinc2,??_line_cal
  3563  000D24  CFDD F030          	movff	postdec2,??_line_cal+1
  3564  000D28  90D8               	bcf	status,0,c
  3565  000D2A  0100               	movlb	0	; () banked
  3566  000D2C  35D8               	rlcf	line_cal@j& (0+255),w,b
  3567  000D2E  6ED9               	movwf	fsr2l,c
  3568  000D30  0100               	movlb	0	; () banked
  3569  000D32  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3570  000D34  6EDA               	movwf	fsr2h,c
  3571  000D36  0E8C               	movlw	low _mins
  3572  000D38  26D9               	addwf	fsr2l,f,c
  3573  000D3A  0E00               	movlw	high _mins
  3574  000D3C  22DA               	addwfc	fsr2h,f,c
  3575  000D3E  CFDE F031          	movff	postinc2,??_line_cal+2
  3576  000D42  CFDD F032          	movff	postdec2,??_line_cal+3
  3577  000D46  1E31               	comf	??_line_cal+2,f,c
  3578  000D48  1E32               	comf	??_line_cal+3,f,c
  3579  000D4A  4A31               	infsnz	??_line_cal+2,f,c
  3580  000D4C  2A32               	incf	??_line_cal+3,f,c
  3581  000D4E  502F               	movf	??_line_cal,w,c
  3582  000D50  2631               	addwf	??_line_cal+2,f,c
  3583  000D52  5030               	movf	??_line_cal+1,w,c
  3584  000D54  2232               	addwfc	??_line_cal+3,f,c
  3585  000D56  C031  F025         	movff	??_line_cal+2,___aldiv@divisor
  3586  000D5A  C032  F026         	movff	??_line_cal+3,___aldiv@divisor+1
  3587  000D5E  0E00               	movlw	0
  3588  000D60  BE26               	btfsc	___aldiv@divisor+1,7,c
  3589  000D62  0EFF               	movlw	-1
  3590  000D64  6E27               	movwf	___aldiv@divisor+2,c
  3591  000D66  6E28               	movwf	___aldiv@divisor+3,c
  3592  000D68  EC1A  F00A         	call	___aldiv	;wreg free
  3593  000D6C  1E21               	comf	?___aldiv,f,c
  3594  000D6E  1E22               	comf	?___aldiv+1,f,c
  3595  000D70  1E23               	comf	?___aldiv+2,f,c
  3596  000D72  1E24               	comf	?___aldiv+3,f,c
  3597  000D74  2A21               	incf	?___aldiv,f,c
  3598  000D76  0E00               	movlw	0
  3599  000D78  2222               	addwfc	?___aldiv+1,f,c
  3600  000D7A  2223               	addwfc	?___aldiv+2,f,c
  3601  000D7C  2224               	addwfc	?___aldiv+3,f,c
  3602  000D7E  0EE8               	movlw	232
  3603  000D80  2421               	addwf	?___aldiv,w,c
  3604  000D82  0100               	movlb	0	; () banked
  3605  000D84  6FD0               	movwf	line_cal@value& (0+255),b
  3606  000D86  0E03               	movlw	3
  3607  000D88  2022               	addwfc	?___aldiv+1,w,c
  3608  000D8A  0100               	movlb	0	; () banked
  3609  000D8C  6FD1               	movwf	(line_cal@value+1)& (0+255),b
  3610  000D8E  0E00               	movlw	0
  3611  000D90  2023               	addwfc	?___aldiv+2,w,c
  3612  000D92  0100               	movlb	0	; () banked
  3613  000D94  6FD2               	movwf	(line_cal@value+2)& (0+255),b
  3614  000D96  0E00               	movlw	0
  3615  000D98  2024               	addwfc	?___aldiv+3,w,c
  3616  000D9A  0100               	movlb	0	; () banked
  3617  000D9C  6FD3               	movwf	(line_cal@value+3)& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;analog.c: 76: calval[j] = value;
  3621  000D9E  90D8               	bcf	status,0,c
  3622  000DA0  0100               	movlb	0	; () banked
  3623  000DA2  35D8               	rlcf	line_cal@j& (0+255),w,b
  3624  000DA4  6ED9               	movwf	fsr2l,c
  3625  000DA6  0100               	movlb	0	; () banked
  3626  000DA8  35D9               	rlcf	(line_cal@j+1)& (0+255),w,b
  3627  000DAA  6EDA               	movwf	fsr2h,c
  3628  000DAC  0E13               	movlw	low _calval
  3629  000DAE  26D9               	addwf	fsr2l,f,c
  3630  000DB0  0E01               	movlw	high _calval
  3631  000DB2  22DA               	addwfc	fsr2h,f,c
  3632  000DB4  C0D0  FFDE         	movff	line_cal@value,postinc2
  3633  000DB8  C0D1  FFDD         	movff	line_cal@value+1,postdec2
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;analog.c: 78: if (value >= 300) ok = 1;
  3637  000DBC  0100               	movlb	0	; () banked
  3638  000DBE  BFD3               	btfsc	(line_cal@value+3)& (0+255),7,b
  3639  000DC0  D012               	goto	l168
  3640  000DC2  0100               	movlb	0	; () banked
  3641  000DC4  51D3               	movf	(line_cal@value+3)& (0+255),w,b
  3642  000DC6  0100               	movlb	0	; () banked
  3643  000DC8  11D2               	iorwf	(line_cal@value+2)& (0+255),w,b
  3644  000DCA  E108               	bnz	u3710
  3645  000DCC  0E2C               	movlw	44
  3646  000DCE  0100               	movlb	0	; () banked
  3647  000DD0  5DD0               	subwf	line_cal@value& (0+255),w,b
  3648  000DD2  0E01               	movlw	1
  3649  000DD4  0100               	movlb	0	; () banked
  3650  000DD6  59D1               	subwfb	(line_cal@value+1)& (0+255),w,b
  3651  000DD8  A0D8               	btfss	status,0,c
  3652  000DDA  D005               	goto	l168
  3653  000DDC                     u3710:
  3654                           
  3655                           ; BSR set to: 0
  3656  000DDC  0E00               	movlw	0
  3657  000DDE  0100               	movlb	0	; () banked
  3658  000DE0  6FCF               	movwf	(line_cal@ok+1)& (0+255),b
  3659  000DE2  0E01               	movlw	1
  3660  000DE4  6FCE               	movwf	line_cal@ok& (0+255),b
  3661  000DE6                     l168:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;analog.c: 80: a += value * (ll)i * 100;
  3665                           
  3666                           ; BSR set to: 0
  3667  000DE6  C0D6  F015         	movff	line_cal@i,___lmul@multiplier
  3668  000DEA  C0D7  F016         	movff	line_cal@i+1,___lmul@multiplier+1
  3669  000DEE  0E00               	movlw	0
  3670  000DF0  BE16               	btfsc	___lmul@multiplier+1,7,c
  3671  000DF2  0EFF               	movlw	-1
  3672  000DF4  6E17               	movwf	___lmul@multiplier+2,c
  3673  000DF6  6E18               	movwf	___lmul@multiplier+3,c
  3674  000DF8  C0D0  F019         	movff	line_cal@value,___lmul@multiplicand
  3675  000DFC  C0D1  F01A         	movff	line_cal@value+1,___lmul@multiplicand+1
  3676  000E00  C0D2  F01B         	movff	line_cal@value+2,___lmul@multiplicand+2
  3677  000E04  C0D3  F01C         	movff	line_cal@value+3,___lmul@multiplicand+3
  3678  000E08  ECFC  F00C         	call	___lmul	;wreg free
  3679  000E0C  C015  F0C2         	movff	?___lmul,_line_cal$2246
  3680  000E10  C016  F0C3         	movff	?___lmul+1,_line_cal$2246+1
  3681  000E14  C017  F0C4         	movff	?___lmul+2,_line_cal$2246+2
  3682  000E18  C018  F0C5         	movff	?___lmul+3,_line_cal$2246+3
  3683                           
  3684                           ;analog.c: 80: a += value * (ll)i * 100;
  3685  000E1C  C0C2  F015         	movff	_line_cal$2246,___lmul@multiplier
  3686  000E20  C0C3  F016         	movff	_line_cal$2246+1,___lmul@multiplier+1
  3687  000E24  C0C4  F017         	movff	_line_cal$2246+2,___lmul@multiplier+2
  3688  000E28  C0C5  F018         	movff	_line_cal$2246+3,___lmul@multiplier+3
  3689  000E2C  0E64               	movlw	100
  3690  000E2E  6E19               	movwf	___lmul@multiplicand,c
  3691  000E30  0E00               	movlw	0
  3692  000E32  6E1A               	movwf	___lmul@multiplicand+1,c
  3693  000E34  0E00               	movlw	0
  3694  000E36  6E1B               	movwf	___lmul@multiplicand+2,c
  3695  000E38  0E00               	movlw	0
  3696  000E3A  6E1C               	movwf	___lmul@multiplicand+3,c
  3697  000E3C  ECFC  F00C         	call	___lmul	;wreg free
  3698  000E40  5015               	movf	?___lmul,w,c
  3699  000E42  0100               	movlb	0	; () banked
  3700  000E44  27C6               	addwf	line_cal@a& (0+255),f,b
  3701  000E46  5016               	movf	?___lmul+1,w,c
  3702  000E48  0100               	movlb	0	; () banked
  3703  000E4A  23C7               	addwfc	(line_cal@a+1)& (0+255),f,b
  3704  000E4C  5017               	movf	?___lmul+2,w,c
  3705  000E4E  0100               	movlb	0	; () banked
  3706  000E50  23C8               	addwfc	(line_cal@a+2)& (0+255),f,b
  3707  000E52  5018               	movf	?___lmul+3,w,c
  3708  000E54  0100               	movlb	0	; () banked
  3709  000E56  23C9               	addwfc	(line_cal@a+3)& (0+255),f,b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;analog.c: 81: b += value;
  3713  000E58  0100               	movlb	0	; () banked
  3714  000E5A  51D0               	movf	line_cal@value& (0+255),w,b
  3715  000E5C  0100               	movlb	0	; () banked
  3716  000E5E  27CA               	addwf	line_cal@b& (0+255),f,b
  3717  000E60  0100               	movlb	0	; () banked
  3718  000E62  51D1               	movf	(line_cal@value+1)& (0+255),w,b
  3719  000E64  0100               	movlb	0	; () banked
  3720  000E66  23CB               	addwfc	(line_cal@b+1)& (0+255),f,b
  3721  000E68  0100               	movlb	0	; () banked
  3722  000E6A  51D2               	movf	(line_cal@value+2)& (0+255),w,b
  3723  000E6C  0100               	movlb	0	; () banked
  3724  000E6E  23CC               	addwfc	(line_cal@b+2)& (0+255),f,b
  3725  000E70  0100               	movlb	0	; () banked
  3726  000E72  51D3               	movf	(line_cal@value+3)& (0+255),w,b
  3727  000E74  0100               	movlb	0	; () banked
  3728  000E76  23CD               	addwfc	(line_cal@b+3)& (0+255),f,b
  3729                           
  3730                           ; BSR set to: 0
  3731  000E78  0100               	movlb	0	; () banked
  3732  000E7A  4BD6               	infsnz	line_cal@i& (0+255),f,b
  3733  000E7C  2BD7               	incf	(line_cal@i+1)& (0+255),f,b
  3734                           
  3735                           ; BSR set to: 0
  3736  000E7E  0100               	movlb	0	; () banked
  3737  000E80  BFD7               	btfsc	(line_cal@i+1)& (0+255),7,b
  3738  000E82  D6AD               	goto	l158
  3739  000E84  0100               	movlb	0	; () banked
  3740  000E86  51D7               	movf	(line_cal@i+1)& (0+255),w,b
  3741  000E88  E101               	bnz	l3289
  3742  000E8A  D6A2               	goto	L10
  3743  000E8C                     u3720:
  3744  000E8C                     l3289:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;analog.c: 83: }
  3748                           ;analog.c: 84: if (ok == 1){
  3749  000E8C  0100               	movlb	0	; () banked
  3750  000E8E  05CE               	decf	line_cal@ok& (0+255),w,b
  3751  000E90  0100               	movlb	0	; () banked
  3752  000E92  11CF               	iorwf	(line_cal@ok+1)& (0+255),w,b
  3753  000E94  A4D8               	btfss	status,2,c
  3754  000E96  D01B               	goto	l169
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;analog.c: 85: lp = a / b - 200;
  3758  000E98  C0C6  F021         	movff	line_cal@a,___aldiv@dividend
  3759  000E9C  C0C7  F022         	movff	line_cal@a+1,___aldiv@dividend+1
  3760  000EA0  C0C8  F023         	movff	line_cal@a+2,___aldiv@dividend+2
  3761  000EA4  C0C9  F024         	movff	line_cal@a+3,___aldiv@dividend+3
  3762  000EA8  C0CA  F025         	movff	line_cal@b,___aldiv@divisor
  3763  000EAC  C0CB  F026         	movff	line_cal@b+1,___aldiv@divisor+1
  3764  000EB0  C0CC  F027         	movff	line_cal@b+2,___aldiv@divisor+2
  3765  000EB4  C0CD  F028         	movff	line_cal@b+3,___aldiv@divisor+3
  3766  000EB8  EC1A  F00A         	call	___aldiv	;wreg free
  3767  000EBC  0E38               	movlw	56
  3768  000EBE  2421               	addwf	?___aldiv,w,c
  3769  000EC0  0100               	movlb	0	; () banked
  3770  000EC2  6F8A               	movwf	_lp& (0+255),b
  3771  000EC4  0EFF               	movlw	255
  3772  000EC6  2022               	addwfc	?___aldiv+1,w,c
  3773  000EC8  0100               	movlb	0	; () banked
  3774  000ECA  6F8B               	movwf	(_lp+1)& (0+255),b
  3775                           
  3776                           ;analog.c: 86: }else{
  3777  000ECC  0012               	return	
  3778  000ECE                     l169:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;analog.c: 87: lp = lp > 0 ? 190 : -190;
  3782                           
  3783                           ; BSR set to: 0
  3784  000ECE  0100               	movlb	0	; () banked
  3785  000ED0  BF8B               	btfsc	(_lp+1)& (0+255),7,b
  3786  000ED2  D007               	goto	u3740
  3787  000ED4  0100               	movlb	0	; () banked
  3788  000ED6  518B               	movf	(_lp+1)& (0+255),w,b
  3789  000ED8  E10A               	bnz	l3297
  3790  000EDA  0100               	movlb	0	; () banked
  3791  000EDC  058A               	decf	_lp& (0+255),w,b
  3792  000EDE  B0D8               	btfsc	status,0,c
  3793  000EE0  D006               	goto	l172
  3794  000EE2                     u3740:
  3795                           
  3796                           ; BSR set to: 0
  3797  000EE2  0EFF               	movlw	255
  3798  000EE4  0100               	movlb	0	; () banked
  3799  000EE6  6F8B               	movwf	(_lp+1)& (0+255),b
  3800  000EE8  0E42               	movlw	66
  3801  000EEA  6F8A               	movwf	_lp& (0+255),b
  3802  000EEC  0012               	return	
  3803  000EEE                     l172:
  3804  000EEE                     l3297:
  3805                           
  3806                           ; BSR set to: 0
  3807  000EEE  0E00               	movlw	0
  3808  000EF0  0100               	movlb	0	; () banked
  3809  000EF2  6F8B               	movwf	(_lp+1)& (0+255),b
  3810  000EF4  0EBE               	movlw	190
  3811  000EF6  6F8A               	movwf	_lp& (0+255),b
  3812                           
  3813                           ; BSR set to: 0
  3814  000EF8  0012               	return	
  3815  000EFA                     __end_of_line_cal:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           postinc1	equ	0xFE6
  3824                           postdec1	equ	0xFE5
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           postinc2	equ	0xFDE
  3828                           postdec2	equ	0xFDD
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function ___lmul *****************
  3834 ;; Defined at:
  3835 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/Umul32.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  multiplier      4   20[COMRAM] unsigned long 
  3838 ;;  multiplicand    4   24[COMRAM] unsigned long 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  product         4   28[COMRAM] unsigned long 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  4   20[COMRAM] unsigned long 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         8       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:       12 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_line_cal
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text11
  3865  0019F8                     __ptext11:
  3866                           	opt stack 0
  3867  0019F8                     ___lmul:
  3868                           	opt stack 28
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;incstack = 0
  3872  0019F8  0E00               	movlw	0
  3873  0019FA  6E1D               	movwf	___lmul@product,c
  3874  0019FC  0E00               	movlw	0
  3875  0019FE  6E1E               	movwf	___lmul@product+1,c
  3876  001A00  0E00               	movlw	0
  3877  001A02  6E1F               	movwf	___lmul@product+2,c
  3878  001A04  0E00               	movlw	0
  3879  001A06  6E20               	movwf	___lmul@product+3,c
  3880  001A08  A015               	btfss	___lmul@multiplier,0,c
  3881  001A0A  D008               	goto	l414
  3882  001A0C  5019               	movf	___lmul@multiplicand,w,c
  3883  001A0E  261D               	addwf	___lmul@product,f,c
  3884  001A10  501A               	movf	___lmul@multiplicand+1,w,c
  3885  001A12  221E               	addwfc	___lmul@product+1,f,c
  3886  001A14  501B               	movf	___lmul@multiplicand+2,w,c
  3887  001A16  221F               	addwfc	___lmul@product+2,f,c
  3888  001A18  501C               	movf	___lmul@multiplicand+3,w,c
  3889  001A1A  2220               	addwfc	___lmul@product+3,f,c
  3890  001A1C                     l414:
  3891  001A1C  90D8               	bcf	status,0,c
  3892  001A1E  3619               	rlcf	___lmul@multiplicand,f,c
  3893  001A20  361A               	rlcf	___lmul@multiplicand+1,f,c
  3894  001A22  361B               	rlcf	___lmul@multiplicand+2,f,c
  3895  001A24  361C               	rlcf	___lmul@multiplicand+3,f,c
  3896  001A26  90D8               	bcf	status,0,c
  3897  001A28  3218               	rrcf	___lmul@multiplier+3,f,c
  3898  001A2A  3217               	rrcf	___lmul@multiplier+2,f,c
  3899  001A2C  3216               	rrcf	___lmul@multiplier+1,f,c
  3900  001A2E  3215               	rrcf	___lmul@multiplier,f,c
  3901  001A30  5015               	movf	___lmul@multiplier,w,c
  3902  001A32  1016               	iorwf	___lmul@multiplier+1,w,c
  3903  001A34  1017               	iorwf	___lmul@multiplier+2,w,c
  3904  001A36  1018               	iorwf	___lmul@multiplier+3,w,c
  3905  001A38  A4D8               	btfss	status,2,c
  3906  001A3A  D7E6               	goto	l413
  3907  001A3C  C01D  F015         	movff	___lmul@product,?___lmul
  3908  001A40  C01E  F016         	movff	___lmul@product+1,?___lmul+1
  3909  001A44  C01F  F017         	movff	___lmul@product+2,?___lmul+2
  3910  001A48  C020  F018         	movff	___lmul@product+3,?___lmul+3
  3911  001A4C  0012               	return		;funcret
  3912  001A4E                     __end_of___lmul:
  3913                           	opt stack 0
  3914                           tblptru	equ	0xFF8
  3915                           tblptrh	equ	0xFF7
  3916                           tblptrl	equ	0xFF6
  3917                           tablat	equ	0xFF5
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           postinc1	equ	0xFE6
  3921                           postdec1	equ	0xFE5
  3922                           fsr1h	equ	0xFE2
  3923                           fsr1l	equ	0xFE1
  3924                           postinc2	equ	0xFDE
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function ___aldiv *****************
  3931 ;; Defined at:
  3932 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/aldiv.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  dividend        4   32[COMRAM] long 
  3935 ;;  divisor         4   36[COMRAM] long 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  quotient        4   42[COMRAM] long 
  3938 ;;  sign            1   41[COMRAM] unsigned char 
  3939 ;;  counter         1   40[COMRAM] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  4   32[COMRAM] long 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3949 ;;      Params:         8       0       0       0       0       0       0       0       0
  3950 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3952 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3953 ;;Total ram usage:       14 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_line_cal
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text12
  3964  001434                     __ptext12:
  3965                           	opt stack 0
  3966  001434                     ___aldiv:
  3967                           	opt stack 28
  3968                           
  3969                           ;incstack = 0
  3970  001434  0E00               	movlw	0
  3971  001436  6E2A               	movwf	___aldiv@sign,c
  3972  001438  AE28               	btfss	___aldiv@divisor+3,7,c
  3973  00143A  D00A               	goto	l457
  3974  00143C  1E28               	comf	___aldiv@divisor+3,f,c
  3975  00143E  1E27               	comf	___aldiv@divisor+2,f,c
  3976  001440  1E26               	comf	___aldiv@divisor+1,f,c
  3977  001442  6C25               	negf	___aldiv@divisor,c
  3978  001444  0E00               	movlw	0
  3979  001446  2226               	addwfc	___aldiv@divisor+1,f,c
  3980  001448  2227               	addwfc	___aldiv@divisor+2,f,c
  3981  00144A  2228               	addwfc	___aldiv@divisor+3,f,c
  3982  00144C  0E01               	movlw	1
  3983  00144E  6E2A               	movwf	___aldiv@sign,c
  3984  001450                     l457:
  3985  001450  AE24               	btfss	___aldiv@dividend+3,7,c
  3986  001452  D00A               	goto	l458
  3987  001454  1E24               	comf	___aldiv@dividend+3,f,c
  3988  001456  1E23               	comf	___aldiv@dividend+2,f,c
  3989  001458  1E22               	comf	___aldiv@dividend+1,f,c
  3990  00145A  6C21               	negf	___aldiv@dividend,c
  3991  00145C  0E00               	movlw	0
  3992  00145E  2222               	addwfc	___aldiv@dividend+1,f,c
  3993  001460  2223               	addwfc	___aldiv@dividend+2,f,c
  3994  001462  2224               	addwfc	___aldiv@dividend+3,f,c
  3995  001464  0E01               	movlw	1
  3996  001466  1A2A               	xorwf	___aldiv@sign,f,c
  3997  001468                     l458:
  3998  001468  0E00               	movlw	0
  3999  00146A  6E2B               	movwf	___aldiv@quotient,c
  4000  00146C  0E00               	movlw	0
  4001  00146E  6E2C               	movwf	___aldiv@quotient+1,c
  4002  001470  0E00               	movlw	0
  4003  001472  6E2D               	movwf	___aldiv@quotient+2,c
  4004  001474  0E00               	movlw	0
  4005  001476  6E2E               	movwf	___aldiv@quotient+3,c
  4006  001478  5025               	movf	___aldiv@divisor,w,c
  4007  00147A  1026               	iorwf	___aldiv@divisor+1,w,c
  4008  00147C  1027               	iorwf	___aldiv@divisor+2,w,c
  4009  00147E  1028               	iorwf	___aldiv@divisor+3,w,c
  4010  001480  B4D8               	btfsc	status,2,c
  4011  001482  D02A               	goto	l465
  4012  001484  0E01               	movlw	1
  4013  001486  6E29               	movwf	___aldiv@counter,c
  4014  001488  D006               	goto	l460
  4015  00148A  90D8               	bcf	status,0,c
  4016  00148C  3625               	rlcf	___aldiv@divisor,f,c
  4017  00148E  3626               	rlcf	___aldiv@divisor+1,f,c
  4018  001490  3627               	rlcf	___aldiv@divisor+2,f,c
  4019  001492  3628               	rlcf	___aldiv@divisor+3,f,c
  4020  001494  2A29               	incf	___aldiv@counter,f,c
  4021  001496                     l460:
  4022  001496  AE28               	btfss	___aldiv@divisor+3,7,c
  4023  001498  D7F8               	goto	l461
  4024  00149A                     u3460:
  4025  00149A  90D8               	bcf	status,0,c
  4026  00149C  362B               	rlcf	___aldiv@quotient,f,c
  4027  00149E  362C               	rlcf	___aldiv@quotient+1,f,c
  4028  0014A0  362D               	rlcf	___aldiv@quotient+2,f,c
  4029  0014A2  362E               	rlcf	___aldiv@quotient+3,f,c
  4030  0014A4  5025               	movf	___aldiv@divisor,w,c
  4031  0014A6  5C21               	subwf	___aldiv@dividend,w,c
  4032  0014A8  5026               	movf	___aldiv@divisor+1,w,c
  4033  0014AA  5822               	subwfb	___aldiv@dividend+1,w,c
  4034  0014AC  5027               	movf	___aldiv@divisor+2,w,c
  4035  0014AE  5823               	subwfb	___aldiv@dividend+2,w,c
  4036  0014B0  5028               	movf	___aldiv@divisor+3,w,c
  4037  0014B2  5824               	subwfb	___aldiv@dividend+3,w,c
  4038  0014B4  A0D8               	btfss	status,0,c
  4039  0014B6  D009               	goto	l464
  4040  0014B8  5025               	movf	___aldiv@divisor,w,c
  4041  0014BA  5E21               	subwf	___aldiv@dividend,f,c
  4042  0014BC  5026               	movf	___aldiv@divisor+1,w,c
  4043  0014BE  5A22               	subwfb	___aldiv@dividend+1,f,c
  4044  0014C0  5027               	movf	___aldiv@divisor+2,w,c
  4045  0014C2  5A23               	subwfb	___aldiv@dividend+2,f,c
  4046  0014C4  5028               	movf	___aldiv@divisor+3,w,c
  4047  0014C6  5A24               	subwfb	___aldiv@dividend+3,f,c
  4048  0014C8  802B               	bsf	___aldiv@quotient,0,c
  4049  0014CA                     l464:
  4050  0014CA  90D8               	bcf	status,0,c
  4051  0014CC  3228               	rrcf	___aldiv@divisor+3,f,c
  4052  0014CE  3227               	rrcf	___aldiv@divisor+2,f,c
  4053  0014D0  3226               	rrcf	___aldiv@divisor+1,f,c
  4054  0014D2  3225               	rrcf	___aldiv@divisor,f,c
  4055  0014D4  2E29               	decfsz	___aldiv@counter,f,c
  4056  0014D6  D7E1               	goto	u3460
  4057  0014D8                     l465:
  4058  0014D8  502A               	movf	___aldiv@sign,w,c
  4059  0014DA  B4D8               	btfsc	status,2,c
  4060  0014DC  D008               	goto	l466
  4061  0014DE  1E2E               	comf	___aldiv@quotient+3,f,c
  4062  0014E0  1E2D               	comf	___aldiv@quotient+2,f,c
  4063  0014E2  1E2C               	comf	___aldiv@quotient+1,f,c
  4064  0014E4  6C2B               	negf	___aldiv@quotient,c
  4065  0014E6  0E00               	movlw	0
  4066  0014E8  222C               	addwfc	___aldiv@quotient+1,f,c
  4067  0014EA  222D               	addwfc	___aldiv@quotient+2,f,c
  4068  0014EC  222E               	addwfc	___aldiv@quotient+3,f,c
  4069  0014EE                     l466:
  4070  0014EE  C02B  F021         	movff	___aldiv@quotient,?___aldiv
  4071  0014F2  C02C  F022         	movff	___aldiv@quotient+1,?___aldiv+1
  4072  0014F6  C02D  F023         	movff	___aldiv@quotient+2,?___aldiv+2
  4073  0014FA  C02E  F024         	movff	___aldiv@quotient+3,?___aldiv+3
  4074  0014FE  0012               	return	
  4075  001500                     __end_of___aldiv:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           postinc0	equ	0xFEE
  4082                           wreg	equ	0xFE8
  4083                           postinc1	equ	0xFE6
  4084                           postdec1	equ	0xFE5
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function _init_tms *****************
  4094 ;; Defined at:
  4095 ;;		line 7 in file "config.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    2
  4116 ;; This function calls:
  4117 ;;		_MotorsPWM
  4118 ;;		_an_init
  4119 ;;		_init_io
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text13
  4126  001A4E                     __ptext13:
  4127                           	opt stack 0
  4128  001A4E                     _init_tms:
  4129                           	opt stack 28
  4130                           
  4131                           ;config.c: 8: OSCCONbits.IRCF = 7;
  4132                           
  4133                           ;incstack = 0
  4134  001A4E  88D3               	bsf	4051,4,c	;volatile
  4135  001A50  8AD3               	bsf	4051,5,c	;volatile
  4136  001A52  8CD3               	bsf	4051,6,c	;volatile
  4137                           
  4138                           ;config.c: 11: CMCON=0x07;
  4139  001A54  0E07               	movlw	7
  4140  001A56  6EB4               	movwf	4020,c	;volatile
  4141                           
  4142                           ;config.c: 14: UCONbits.USBEN = 0;
  4143  001A58  966D               	bcf	3949,3,c	;volatile
  4144                           
  4145                           ;config.c: 15: UCFGbits.UTRDIS = 1;
  4146  001A5A  866F               	bsf	3951,3,c	;volatile
  4147                           
  4148                           ;config.c: 18: T0CONbits.TMR0ON = 0;
  4149  001A5C  9ED5               	bcf	4053,7,c	;volatile
  4150                           
  4151                           ;config.c: 19: T0CONbits.T08BIT = 0;
  4152  001A5E  9CD5               	bcf	4053,6,c	;volatile
  4153                           
  4154                           ;config.c: 20: T0CONbits.T0CS = 0;
  4155  001A60  9AD5               	bcf	4053,5,c	;volatile
  4156                           
  4157                           ;config.c: 22: T0CONbits.PSA = 1;
  4158  001A62  86D5               	bsf	4053,3,c	;volatile
  4159                           
  4160                           ;config.c: 23: TMR0H = 0xF8;
  4161  001A64  0EF8               	movlw	248
  4162  001A66  6ED7               	movwf	4055,c	;volatile
  4163                           
  4164                           ;config.c: 24: TMR0L = 0x2F;
  4165  001A68  0E2F               	movlw	47
  4166  001A6A  6ED6               	movwf	4054,c	;volatile
  4167                           
  4168                           ;config.c: 27: INTCON2bits.TMR0IP = 1;
  4169  001A6C  84F1               	bsf	intcon2,2,c	;volatile
  4170                           
  4171                           ;config.c: 28: RCONbits.IPEN = 0;
  4172  001A6E  9ED0               	bcf	4048,7,c	;volatile
  4173                           
  4174                           ;config.c: 29: INTCONbits.TMR0IE = 1;
  4175  001A70  8AF2               	bsf	intcon,5,c	;volatile
  4176                           
  4177                           ;config.c: 33: INTCONbits.GIE = 1;
  4178  001A72  8EF2               	bsf	intcon,7,c	;volatile
  4179                           
  4180                           ;config.c: 35: T0CONbits.TMR0ON = 1;
  4181  001A74  8ED5               	bsf	4053,7,c	;volatile
  4182                           
  4183                           ;config.c: 37: T1CONbits.TMR1ON = 0;
  4184  001A76  90CD               	bcf	4045,0,c	;volatile
  4185                           
  4186                           ;config.c: 38: T1CONbits.T1RD16 = 0;
  4187  001A78  9ECD               	bcf	4045,7,c	;volatile
  4188                           
  4189                           ;config.c: 39: T1CONbits.T1RUN = 0;
  4190  001A7A  9CCD               	bcf	4045,6,c	;volatile
  4191                           
  4192                           ;config.c: 40: T1CONbits.T1CKPS = 0;
  4193  001A7C  0ECF               	movlw	-49
  4194  001A7E  16CD               	andwf	4045,f,c	;volatile
  4195                           
  4196                           ;config.c: 41: T1CONbits.T1OSCEN = 0;
  4197  001A80  96CD               	bcf	4045,3,c	;volatile
  4198                           
  4199                           ;config.c: 42: T1CONbits.TMR1CS = 0;
  4200  001A82  92CD               	bcf	4045,1,c	;volatile
  4201                           
  4202                           ;config.c: 43: T1CONbits.TMR1ON = 1;
  4203  001A84  80CD               	bsf	4045,0,c	;volatile
  4204                           
  4205                           ;config.c: 45: TMR1H = 0xF8;
  4206  001A86  0EF8               	movlw	248
  4207  001A88  6ECF               	movwf	4047,c	;volatile
  4208                           
  4209                           ;config.c: 46: TMR1L = 0x2F;
  4210  001A8A  0E2F               	movlw	47
  4211  001A8C  6ECE               	movwf	4046,c	;volatile
  4212                           
  4213                           ;config.c: 48: init_io();
  4214  001A8E  EC89  F00D         	call	_init_io	;wreg free
  4215                           
  4216                           ;config.c: 49: an_init();
  4217  001A92  ECA0  F00D         	call	_an_init	;wreg free
  4218                           
  4219                           ;config.c: 50: MotorsPWM();
  4220  001A96  EC4E  F00D         	call	_MotorsPWM	;wreg free
  4221  001A9A  0012               	return		;funcret
  4222  001A9C                     __end_of_init_tms:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           intcon	equ	0xFF2
  4229                           intcon2	equ	0xFF1
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           postinc1	equ	0xFE6
  4233                           postdec1	equ	0xFE5
  4234                           fsr1h	equ	0xFE2
  4235                           fsr1l	equ	0xFE1
  4236                           postinc2	equ	0xFDE
  4237                           postdec2	equ	0xFDD
  4238                           fsr2h	equ	0xFDA
  4239                           fsr2l	equ	0xFD9
  4240                           status	equ	0xFD8
  4241                           
  4242 ;; *************** function _init_io *****************
  4243 ;; Defined at:
  4244 ;;		line 6 in file "io.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		None
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_init_tms
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text14
  4273  001B12                     __ptext14:
  4274                           	opt stack 0
  4275  001B12                     _init_io:
  4276                           	opt stack 28
  4277                           
  4278                           ;io.c: 8: TRISBbits.RB4 = OUTPUT;
  4279                           
  4280                           ;incstack = 0
  4281  001B12  9893               	bcf	3987,4,c	;volatile
  4282                           
  4283                           ;io.c: 9: TRISCbits.RC1 = OUTPUT;
  4284  001B14  9294               	bcf	3988,1,c	;volatile
  4285                           
  4286                           ;io.c: 10: TRISDbits.RD2 = OUTPUT;
  4287  001B16  9495               	bcf	3989,2,c	;volatile
  4288                           
  4289                           ;io.c: 11: TRISAbits.RA4 = OUTPUT;
  4290  001B18  9892               	bcf	3986,4,c	;volatile
  4291                           
  4292                           ;io.c: 14: TRISBbits.RB0 = OUTPUT;
  4293  001B1A  9093               	bcf	3987,0,c	;volatile
  4294                           
  4295                           ;io.c: 15: TRISBbits.RB1 = OUTPUT;
  4296  001B1C  9293               	bcf	3987,1,c	;volatile
  4297                           
  4298                           ;io.c: 18: TRISDbits.RD0 = INPUT;
  4299  001B1E  8095               	bsf	3989,0,c	;volatile
  4300                           
  4301                           ;io.c: 19: TRISDbits.RD1 = INPUT;
  4302  001B20  8295               	bsf	3989,1,c	;volatile
  4303                           
  4304                           ;io.c: 22: TRISAbits.RA0 = INPUT;
  4305  001B22  8092               	bsf	3986,0,c	;volatile
  4306                           
  4307                           ;io.c: 23: TRISAbits.RA1 = INPUT;
  4308  001B24  8292               	bsf	3986,1,c	;volatile
  4309                           
  4310                           ;io.c: 26: TRISAbits.RA2 = INPUT;
  4311  001B26  8492               	bsf	3986,2,c	;volatile
  4312                           
  4313                           ;io.c: 27: TRISAbits.RA3 = INPUT;
  4314  001B28  8692               	bsf	3986,3,c	;volatile
  4315                           
  4316                           ;io.c: 28: TRISAbits.RA5 = INPUT;
  4317  001B2A  8A92               	bsf	3986,5,c	;volatile
  4318                           
  4319                           ;io.c: 29: TRISEbits.RE0 = INPUT;
  4320  001B2C  8096               	bsf	3990,0,c	;volatile
  4321                           
  4322                           ;io.c: 30: TRISEbits.RE1 = INPUT;
  4323  001B2E  8296               	bsf	3990,1,c	;volatile
  4324                           
  4325                           ;io.c: 31: TRISEbits.RE2 = INPUT;
  4326  001B30  8496               	bsf	3990,2,c	;volatile
  4327                           
  4328                           ;io.c: 32: TRISBbits.RB2 = INPUT;
  4329  001B32  8493               	bsf	3987,2,c	;volatile
  4330                           
  4331                           ;io.c: 35: TRISCbits.RC2 = OUTPUT;
  4332  001B34  9494               	bcf	3988,2,c	;volatile
  4333                           
  4334                           ;io.c: 36: TRISBbits.RB3 = OUTPUT;
  4335  001B36  9693               	bcf	3987,3,c	;volatile
  4336                           
  4337                           ;io.c: 39: PORTEbits.RDPU = 1;
  4338  001B38  8E84               	bsf	3972,7,c	;volatile
  4339                           
  4340                           ;io.c: 42: TRISCbits.RC6 = OUTPUT;
  4341  001B3A  9C94               	bcf	3988,6,c	;volatile
  4342                           
  4343                           ;io.c: 43: TRISCbits.RC7 = OUTPUT;
  4344  001B3C  9E94               	bcf	3988,7,c	;volatile
  4345  001B3E  0012               	return		;funcret
  4346  001B40                     __end_of_init_io:
  4347                           	opt stack 0
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           intcon	equ	0xFF2
  4353                           intcon2	equ	0xFF1
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           postinc1	equ	0xFE6
  4357                           postdec1	equ	0xFE5
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           postinc2	equ	0xFDE
  4361                           postdec2	equ	0xFDD
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _an_init *****************
  4367 ;; Defined at:
  4368 ;;		line 16 in file "analog.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4382 ;;      Params:         0       0       0       0       0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4385 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_init_tms
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text15
  4397  001B40                     __ptext15:
  4398                           	opt stack 0
  4399  001B40                     _an_init:
  4400                           	opt stack 28
  4401                           
  4402                           ;analog.c: 17: ADCON1bits.VCFG = 0;
  4403                           
  4404                           ;incstack = 0
  4405  001B40  0ECF               	movlw	-49
  4406  001B42  16C1               	andwf	4033,f,c	;volatile
  4407                           
  4408                           ;analog.c: 18: ADCON1bits.PCFG = 0x06;
  4409  001B44  50C1               	movf	4033,w,c	;volatile
  4410  001B46  0BF0               	andlw	-16
  4411  001B48  0906               	iorlw	6
  4412  001B4A  6EC1               	movwf	4033,c	;volatile
  4413                           
  4414                           ;analog.c: 20: ADCON2bits.ADFM=0;
  4415  001B4C  9EC0               	bcf	4032,7,c	;volatile
  4416                           
  4417                           ;analog.c: 21: ADCON2bits.ACQT=7;
  4418  001B4E  86C0               	bsf	4032,3,c	;volatile
  4419  001B50  88C0               	bsf	4032,4,c	;volatile
  4420  001B52  8AC0               	bsf	4032,5,c	;volatile
  4421                           
  4422                           ;analog.c: 22: ADCON2bits.ADCS=6;
  4423  001B54  50C0               	movf	4032,w,c	;volatile
  4424  001B56  0BF8               	andlw	-8
  4425  001B58  0906               	iorlw	6
  4426  001B5A  6EC0               	movwf	4032,c	;volatile
  4427                           
  4428                           ;analog.c: 23: ADCON0bits.CHS=0;
  4429  001B5C  94C2               	bcf	4034,2,c	;volatile
  4430  001B5E  96C2               	bcf	4034,3,c	;volatile
  4431  001B60  98C2               	bcf	4034,4,c	;volatile
  4432  001B62  9AC2               	bcf	4034,5,c	;volatile
  4433                           
  4434                           ;analog.c: 24: ADCON0bits.GODONE=0;
  4435  001B64  92C2               	bcf	4034,1,c	;volatile
  4436                           
  4437                           ;analog.c: 25: ADCON0bits.ADON=1;
  4438  001B66  80C2               	bsf	4034,0,c	;volatile
  4439  001B68  0012               	return		;funcret
  4440  001B6A                     __end_of_an_init:
  4441                           	opt stack 0
  4442                           tblptru	equ	0xFF8
  4443                           tblptrh	equ	0xFF7
  4444                           tblptrl	equ	0xFF6
  4445                           tablat	equ	0xFF5
  4446                           intcon	equ	0xFF2
  4447                           intcon2	equ	0xFF1
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postinc1	equ	0xFE6
  4451                           postdec1	equ	0xFE5
  4452                           fsr1h	equ	0xFE2
  4453                           fsr1l	equ	0xFE1
  4454                           postinc2	equ	0xFDE
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _MotorsPWM *****************
  4461 ;; Defined at:
  4462 ;;		line 55 in file "config.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_init_tms
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text16
  4491  001A9C                     __ptext16:
  4492                           	opt stack 0
  4493  001A9C                     _MotorsPWM:
  4494                           	opt stack 28
  4495                           
  4496                           ;config.c: 57: T2OUTPS0 = 0;
  4497                           
  4498                           ;incstack = 0
  4499  001A9C  96CA               	bcf	4042,3,c	;volatile
  4500                           
  4501                           ;config.c: 58: T2OUTPS1 = 0;
  4502  001A9E  98CA               	bcf	4042,4,c	;volatile
  4503                           
  4504                           ;config.c: 59: T2OUTPS2 = 0;
  4505  001AA0  9ACA               	bcf	4042,5,c	;volatile
  4506                           
  4507                           ;config.c: 60: T2OUTPS3 = 0;
  4508  001AA2  9CCA               	bcf	4042,6,c	;volatile
  4509                           
  4510                           ;config.c: 62: TMR2ON = 1;
  4511  001AA4  84CA               	bsf	4042,2,c	;volatile
  4512                           
  4513                           ;config.c: 63: T2CKPS0 = 0;
  4514  001AA6  90CA               	bcf	4042,0,c	;volatile
  4515                           
  4516                           ;config.c: 64: T2CKPS1 = 0;
  4517  001AA8  92CA               	bcf	4042,1,c	;volatile
  4518                           
  4519                           ;config.c: 66: TMR2ON = 1;
  4520  001AAA  84CA               	bsf	4042,2,c	;volatile
  4521                           
  4522                           ;config.c: 69: T2CONbits.TOUTPS=11;
  4523  001AAC  50CA               	movf	4042,w,c	;volatile
  4524  001AAE  0B87               	andlw	-121
  4525  001AB0  0958               	iorlw	88
  4526  001AB2  6ECA               	movwf	4042,c	;volatile
  4527                           
  4528                           ;config.c: 70: T2CONbits.T2CKPS=1;
  4529  001AB4  50CA               	movf	4042,w,c	;volatile
  4530  001AB6  0BFC               	andlw	-4
  4531  001AB8  0901               	iorlw	1
  4532  001ABA  6ECA               	movwf	4042,c	;volatile
  4533                           
  4534                           ;config.c: 71: T2CONbits.TMR2ON=0;
  4535  001ABC  94CA               	bcf	4042,2,c	;volatile
  4536                           
  4537                           ;config.c: 72: PR2=249;
  4538  001ABE  0EF9               	movlw	249
  4539  001AC0  6ECB               	movwf	4043,c	;volatile
  4540                           
  4541                           ;config.c: 73: T2CONbits.TMR2ON=1;
  4542  001AC2  84CA               	bsf	4042,2,c	;volatile
  4543                           
  4544                           ;config.c: 76: CCP1CONbits.CCP1M = 1100;
  4545  001AC4  50BD               	movf	4029,w,c	;volatile
  4546  001AC6  0BF0               	andlw	-16
  4547  001AC8  090C               	iorlw	12
  4548  001ACA  6EBD               	movwf	4029,c	;volatile
  4549                           
  4550                           ;config.c: 77: CCP2CONbits.CCP2M = 1100;
  4551  001ACC  50BA               	movf	4026,w,c	;volatile
  4552  001ACE  0BF0               	andlw	-16
  4553  001AD0  090C               	iorlw	12
  4554  001AD2  6EBA               	movwf	4026,c	;volatile
  4555                           
  4556                           ;config.c: 80: PR2 = 249;
  4557  001AD4  0EF9               	movlw	249
  4558  001AD6  6ECB               	movwf	4043,c	;volatile
  4559  001AD8  0012               	return		;funcret
  4560  001ADA                     __end_of_MotorsPWM:
  4561                           	opt stack 0
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           intcon	equ	0xFF2
  4567                           intcon2	equ	0xFF1
  4568                           postinc0	equ	0xFEE
  4569                           wreg	equ	0xFE8
  4570                           postinc1	equ	0xFE6
  4571                           postdec1	equ	0xFE5
  4572                           fsr1h	equ	0xFE2
  4573                           fsr1l	equ	0xFE1
  4574                           postinc2	equ	0xFDE
  4575                           postdec2	equ	0xFDD
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           status	equ	0xFD8
  4579                           
  4580 ;; *************** function _init_cal *****************
  4581 ;; Defined at:
  4582 ;;		line 41 in file "analog.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  i               2   20[COMRAM] int 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0
  4597 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4599 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4600 ;;Total ram usage:        2 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text17
  4611  00191C                     __ptext17:
  4612                           	opt stack 0
  4613  00191C                     _init_cal:
  4614                           	opt stack 29
  4615                           
  4616                           ;analog.c: 42: int i;
  4617                           ;analog.c: 44: for (i = 0;i < 9;i++) maxs[i] = 0;
  4618                           
  4619                           ;incstack = 0
  4620  00191C  0E00               	movlw	0
  4621  00191E  6E16               	movwf	init_cal@i+1,c
  4622  001920  0E00               	movlw	0
  4623  001922  6E15               	movwf	init_cal@i,c
  4624  001924                     l3161:
  4625  001924  BE16               	btfsc	init_cal@i+1,7,c
  4626  001926  D006               	goto	l124
  4627  001928  5016               	movf	init_cal@i+1,w,c
  4628  00192A  E114               	bnz	l3171
  4629  00192C  0E09               	movlw	9
  4630  00192E  5C15               	subwf	init_cal@i,w,c
  4631  001930  B0D8               	btfsc	status,0,c
  4632  001932  D010               	goto	u3530
  4633  001934                     l124:
  4634  001934  90D8               	bcf	status,0,c
  4635  001936  3415               	rlcf	init_cal@i,w,c
  4636  001938  6ED9               	movwf	fsr2l,c
  4637  00193A  3416               	rlcf	init_cal@i+1,w,c
  4638  00193C  6EDA               	movwf	fsr2h,c
  4639  00193E  0E9E               	movlw	low _maxs
  4640  001940  26D9               	addwf	fsr2l,f,c
  4641  001942  0E00               	movlw	high _maxs
  4642  001944  22DA               	addwfc	fsr2h,f,c
  4643  001946  0E00               	movlw	0
  4644  001948  6EDE               	movwf	postinc2,c
  4645  00194A  0E00               	movlw	0
  4646  00194C  6EDD               	movwf	postdec2,c
  4647  00194E  4A15               	infsnz	init_cal@i,f,c
  4648  001950  2A16               	incf	init_cal@i+1,f,c
  4649  001952  D7E8               	goto	l3161
  4650  001954                     u3530:
  4651  001954                     l3171:
  4652                           
  4653                           ;analog.c: 45: for (i = 0;i < 9;i++) mins[i] = 1024;
  4654  001954  0E00               	movlw	0
  4655  001956  6E16               	movwf	init_cal@i+1,c
  4656  001958  0E00               	movlw	0
  4657  00195A  6E15               	movwf	init_cal@i,c
  4658  00195C                     l3173:
  4659  00195C  BE16               	btfsc	init_cal@i+1,7,c
  4660  00195E  D006               	goto	l126
  4661  001960  5016               	movf	init_cal@i+1,w,c
  4662  001962  E114               	bnz	l128
  4663  001964  0E09               	movlw	9
  4664  001966  5C15               	subwf	init_cal@i,w,c
  4665  001968  B0D8               	btfsc	status,0,c
  4666  00196A  0012               	return	
  4667  00196C                     l126:
  4668  00196C  90D8               	bcf	status,0,c
  4669  00196E  3415               	rlcf	init_cal@i,w,c
  4670  001970  6ED9               	movwf	fsr2l,c
  4671  001972  3416               	rlcf	init_cal@i+1,w,c
  4672  001974  6EDA               	movwf	fsr2h,c
  4673  001976  0E8C               	movlw	low _mins
  4674  001978  26D9               	addwf	fsr2l,f,c
  4675  00197A  0E00               	movlw	high _mins
  4676  00197C  22DA               	addwfc	fsr2h,f,c
  4677  00197E  0E00               	movlw	0
  4678  001980  6EDE               	movwf	postinc2,c
  4679  001982  0E04               	movlw	4
  4680  001984  6EDD               	movwf	postdec2,c
  4681  001986  4A15               	infsnz	init_cal@i,f,c
  4682  001988  2A16               	incf	init_cal@i+1,f,c
  4683  00198A  D7E8               	goto	l3173
  4684  00198C                     l128:
  4685  00198C  0012               	return		;funcret
  4686  00198E                     __end_of_init_cal:
  4687                           	opt stack 0
  4688                           tblptru	equ	0xFF8
  4689                           tblptrh	equ	0xFF7
  4690                           tblptrl	equ	0xFF6
  4691                           tablat	equ	0xFF5
  4692                           intcon	equ	0xFF2
  4693                           intcon2	equ	0xFF1
  4694                           postinc0	equ	0xFEE
  4695                           wreg	equ	0xFE8
  4696                           postinc1	equ	0xFE6
  4697                           postdec1	equ	0xFE5
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           postinc2	equ	0xFDE
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           status	equ	0xFD8
  4705                           
  4706 ;; *************** function ___fttol *****************
  4707 ;; Defined at:
  4708 ;;		line 44 in file "/opt/microchip/xc8/v1.43/sources/common/fttol.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  f1              3    6[BANK0 ] float 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  lval            4   16[BANK0 ] unsigned long 
  4713 ;;  exp1            1   20[BANK0 ] unsigned char 
  4714 ;;  sign1           1   15[BANK0 ] unsigned char 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  4    6[BANK0 ] long 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         0       4       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4726 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4727 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4728 ;;Total ram usage:       15 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    1
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text18
  4739  001110                     __ptext18:
  4740                           	opt stack 0
  4741  001110                     ___fttol:
  4742                           	opt stack 29
  4743                           
  4744                           ;incstack = 0
  4745  001110  C0CA  F0CC         	movff	___fttol@f1+2,??___fttol
  4746  001114  0100               	movlb	0	; () banked
  4747  001116  6BCD               	clrf	(??___fttol+1)& (0+255),b
  4748  001118  6BCE               	clrf	(??___fttol+2)& (0+255),b
  4749  00111A  0100               	movlb	0	; () banked
  4750  00111C  35C9               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4751  00111E  0100               	movlb	0	; () banked
  4752  001120  37CC               	rlcf	??___fttol& (0+255),f,b
  4753  001122  E301               	bnc	u4131
  4754  001124  81CD               	bsf	(??___fttol+1)& (0+255),0,b
  4755  001126                     u4131:
  4756  001126  0100               	movlb	0	; () banked
  4757  001128  51CC               	movf	??___fttol& (0+255),w,b
  4758  00112A  0100               	movlb	0	; () banked
  4759  00112C  6FD6               	movwf	___fttol@exp1& (0+255),b
  4760  00112E  0100               	movlb	0	; () banked
  4761  001130  51D6               	movf	___fttol@exp1& (0+255),w,b
  4762  001132  A4D8               	btfss	status,2,c
  4763  001134  D00A               	goto	l716
  4764                           
  4765                           ; BSR set to: 0
  4766  001136  0E00               	movlw	0
  4767  001138  0100               	movlb	0	; () banked
  4768  00113A  6FC8               	movwf	?___fttol& (0+255),b
  4769  00113C  0E00               	movlw	0
  4770  00113E  6FC9               	movwf	(?___fttol+1)& (0+255),b
  4771  001140  0E00               	movlw	0
  4772  001142  6FCA               	movwf	(?___fttol+2)& (0+255),b
  4773  001144  0E00               	movlw	0
  4774  001146  6FCB               	movwf	(?___fttol+3)& (0+255),b
  4775                           
  4776                           ; BSR set to: 0
  4777  001148  0012               	return	
  4778  00114A                     l716:
  4779                           
  4780                           ; BSR set to: 0
  4781                           
  4782                           ; BSR set to: 0
  4783  00114A  0E17               	movlw	23
  4784  00114C  0100               	movlb	0	; () banked
  4785  00114E  6FCC               	movwf	??___fttol& (0+255),b
  4786  001150  C0C8  F0CD         	movff	___fttol@f1,??___fttol+1
  4787  001154  C0C9  F0CE         	movff	___fttol@f1+1,??___fttol+2
  4788  001158  C0CA  F0CF         	movff	___fttol@f1+2,??___fttol+3
  4789  00115C  0100               	movlb	0	; () banked
  4790  00115E  29CC               	incf	??___fttol& (0+255),w,b
  4791  001160  0100               	movlb	0	; () banked
  4792  001162  6FD0               	movwf	(??___fttol+4)& (0+255),b
  4793  001164  D005               	goto	u4150
  4794  001166                     u4155:
  4795  001166  0100               	movlb	0	; () banked
  4796  001168  90D8               	bcf	status,0,c
  4797  00116A  33CF               	rrcf	(??___fttol+3)& (0+255),f,b
  4798  00116C  33CE               	rrcf	(??___fttol+2)& (0+255),f,b
  4799  00116E  33CD               	rrcf	(??___fttol+1)& (0+255),f,b
  4800  001170                     u4150:
  4801  001170  0100               	movlb	0	; () banked
  4802  001172  2FD0               	decfsz	(??___fttol+4)& (0+255),f,b
  4803  001174  D7F8               	goto	u4155
  4804  001176  0100               	movlb	0	; () banked
  4805  001178  51CD               	movf	(??___fttol+1)& (0+255),w,b
  4806  00117A  0100               	movlb	0	; () banked
  4807  00117C  6FD1               	movwf	___fttol@sign1& (0+255),b
  4808                           
  4809                           ; BSR set to: 0
  4810  00117E  0100               	movlb	0	; () banked
  4811  001180  8FC9               	bsf	(___fttol@f1+1)& (0+255),7,b
  4812                           
  4813                           ; BSR set to: 0
  4814  001182  0EFF               	movlw	255
  4815  001184  0100               	movlb	0	; () banked
  4816  001186  17C8               	andwf	___fttol@f1& (0+255),f,b
  4817  001188  0EFF               	movlw	255
  4818  00118A  0100               	movlb	0	; () banked
  4819  00118C  17C9               	andwf	(___fttol@f1+1)& (0+255),f,b
  4820  00118E  0E00               	movlw	0
  4821  001190  0100               	movlb	0	; () banked
  4822  001192  17CA               	andwf	(___fttol@f1+2)& (0+255),f,b
  4823                           
  4824                           ; BSR set to: 0
  4825  001194  0100               	movlb	0	; () banked
  4826  001196  51C8               	movf	___fttol@f1& (0+255),w,b
  4827  001198  0100               	movlb	0	; () banked
  4828  00119A  6FD2               	movwf	___fttol@lval& (0+255),b
  4829  00119C  0100               	movlb	0	; () banked
  4830  00119E  51C9               	movf	(___fttol@f1+1)& (0+255),w,b
  4831  0011A0  0100               	movlb	0	; () banked
  4832  0011A2  6FD3               	movwf	(___fttol@lval+1)& (0+255),b
  4833  0011A4  0100               	movlb	0	; () banked
  4834  0011A6  51CA               	movf	(___fttol@f1+2)& (0+255),w,b
  4835  0011A8  0100               	movlb	0	; () banked
  4836  0011AA  6FD4               	movwf	(___fttol@lval+2)& (0+255),b
  4837  0011AC  0100               	movlb	0	; () banked
  4838  0011AE  6BD5               	clrf	(___fttol@lval+3)& (0+255),b
  4839                           
  4840                           ; BSR set to: 0
  4841  0011B0  0E8E               	movlw	142
  4842  0011B2  0100               	movlb	0	; () banked
  4843  0011B4  5FD6               	subwf	___fttol@exp1& (0+255),f,b
  4844                           
  4845                           ; BSR set to: 0
  4846  0011B6  0100               	movlb	0	; () banked
  4847  0011B8  AFD6               	btfss	___fttol@exp1& (0+255),7,b
  4848  0011BA  D01A               	goto	l718
  4849                           
  4850                           ; BSR set to: 0
  4851  0011BC  0100               	movlb	0	; () banked
  4852  0011BE  51D6               	movf	___fttol@exp1& (0+255),w,b
  4853  0011C0  0A80               	xorlw	128
  4854  0011C2  0F8F               	addlw	143
  4855  0011C4  B0D8               	btfsc	status,0,c
  4856  0011C6  D00A               	goto	l719
  4857                           
  4858                           ; BSR set to: 0
  4859  0011C8  0E00               	movlw	0
  4860  0011CA  0100               	movlb	0	; () banked
  4861  0011CC  6FC8               	movwf	?___fttol& (0+255),b
  4862  0011CE  0E00               	movlw	0
  4863  0011D0  6FC9               	movwf	(?___fttol+1)& (0+255),b
  4864  0011D2  0E00               	movlw	0
  4865  0011D4  6FCA               	movwf	(?___fttol+2)& (0+255),b
  4866  0011D6  0E00               	movlw	0
  4867  0011D8  6FCB               	movwf	(?___fttol+3)& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870  0011DA  0012               	return	
  4871  0011DC                     l719:
  4872                           
  4873                           ; BSR set to: 0
  4874                           
  4875                           ; BSR set to: 0
  4876                           
  4877                           ; BSR set to: 0
  4878  0011DC  0100               	movlb	0	; () banked
  4879  0011DE  90D8               	bcf	status,0,c
  4880  0011E0  33D5               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4881  0011E2  33D4               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4882  0011E4  33D3               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4883  0011E6  33D2               	rrcf	___fttol@lval& (0+255),f,b
  4884                           
  4885                           ; BSR set to: 0
  4886  0011E8  0100               	movlb	0	; () banked
  4887  0011EA  3FD6               	incfsz	___fttol@exp1& (0+255),f,b
  4888  0011EC  D7F7               	goto	l719
  4889                           
  4890                           ; BSR set to: 0
  4891  0011EE  D01B               	goto	u4190
  4892  0011F0                     l718:
  4893                           
  4894                           ; BSR set to: 0
  4895                           
  4896                           ; BSR set to: 0
  4897  0011F0  0E17               	movlw	23
  4898  0011F2  0100               	movlb	0	; () banked
  4899  0011F4  65D6               	cpfsgt	___fttol@exp1& (0+255),b
  4900  0011F6  D012               	goto	l724
  4901                           
  4902                           ; BSR set to: 0
  4903  0011F8  0E00               	movlw	0
  4904  0011FA  0100               	movlb	0	; () banked
  4905  0011FC  6FC8               	movwf	?___fttol& (0+255),b
  4906  0011FE  0E00               	movlw	0
  4907  001200  6FC9               	movwf	(?___fttol+1)& (0+255),b
  4908  001202  0E00               	movlw	0
  4909  001204  6FCA               	movwf	(?___fttol+2)& (0+255),b
  4910  001206  0E00               	movlw	0
  4911  001208  6FCB               	movwf	(?___fttol+3)& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914  00120A  0012               	return	
  4915  00120C                     
  4916                           ; BSR set to: 0
  4917                           
  4918                           ; BSR set to: 0
  4919  00120C  0100               	movlb	0	; () banked
  4920  00120E  90D8               	bcf	status,0,c
  4921  001210  37D2               	rlcf	___fttol@lval& (0+255),f,b
  4922  001212  37D3               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4923  001214  37D4               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4924  001216  37D5               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4925  001218  0100               	movlb	0	; () banked
  4926  00121A  07D6               	decf	___fttol@exp1& (0+255),f,b
  4927  00121C                     l724:
  4928                           
  4929                           ; BSR set to: 0
  4930                           
  4931                           ; BSR set to: 0
  4932  00121C  0100               	movlb	0	; () banked
  4933  00121E  51D6               	movf	___fttol@exp1& (0+255),w,b
  4934  001220  0100               	movlb	0	; () banked
  4935  001222  A4D8               	btfss	status,2,c
  4936  001224  D7F3               	goto	l725
  4937  001226                     u4190:
  4938                           
  4939                           ; BSR set to: 0
  4940                           
  4941                           ; BSR set to: 0
  4942                           
  4943                           ; BSR set to: 0
  4944  001226  0100               	movlb	0	; () banked
  4945  001228  51D1               	movf	___fttol@sign1& (0+255),w,b
  4946  00122A  0100               	movlb	0	; () banked
  4947  00122C  B4D8               	btfsc	status,2,c
  4948  00122E  D009               	goto	l727
  4949                           
  4950                           ; BSR set to: 0
  4951  001230  0100               	movlb	0	; () banked
  4952  001232  1FD5               	comf	(___fttol@lval+3)& (0+255),f,b
  4953  001234  1FD4               	comf	(___fttol@lval+2)& (0+255),f,b
  4954  001236  1FD3               	comf	(___fttol@lval+1)& (0+255),f,b
  4955  001238  6DD2               	negf	___fttol@lval& (0+255),b
  4956  00123A  0E00               	movlw	0
  4957  00123C  23D3               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4958  00123E  23D4               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4959  001240  23D5               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4960  001242                     l727:
  4961                           
  4962                           ; BSR set to: 0
  4963                           
  4964                           ; BSR set to: 0
  4965  001242  C0D2  F0C8         	movff	___fttol@lval,?___fttol
  4966  001246  C0D3  F0C9         	movff	___fttol@lval+1,?___fttol+1
  4967  00124A  C0D4  F0CA         	movff	___fttol@lval+2,?___fttol+2
  4968  00124E  C0D5  F0CB         	movff	___fttol@lval+3,?___fttol+3
  4969  001252  0012               	return	
  4970  001254                     __end_of___fttol:
  4971                           	opt stack 0
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           intcon	equ	0xFF2
  4977                           intcon2	equ	0xFF1
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           postinc1	equ	0xFE6
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           postinc2	equ	0xFDE
  4985                           postdec2	equ	0xFDD
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8
  4989                           
  4990 ;; *************** function ___ftneg *****************
  4991 ;; Defined at:
  4992 ;;		line 15 in file "/opt/microchip/xc8/v1.43/sources/common/ftneg.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  f1              3   20[COMRAM] float 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  3   20[COMRAM] float 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         3       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        3 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text19
  5021  001B8E                     __ptext19:
  5022                           	opt stack 0
  5023  001B8E                     ___ftneg:
  5024                           	opt stack 29
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;incstack = 0
  5028  001B8E  5015               	movf	___ftneg@f1,w,c
  5029  001B90  1016               	iorwf	___ftneg@f1+1,w,c
  5030  001B92  1017               	iorwf	___ftneg@f1+2,w,c
  5031  001B94  B4D8               	btfsc	status,2,c
  5032  001B96  D006               	goto	l706
  5033  001B98  0E00               	movlw	0
  5034  001B9A  1A15               	xorwf	___ftneg@f1,f,c
  5035  001B9C  0E00               	movlw	0
  5036  001B9E  1A16               	xorwf	___ftneg@f1+1,f,c
  5037  001BA0  0E80               	movlw	128
  5038  001BA2  1A17               	xorwf	___ftneg@f1+2,f,c
  5039  001BA4                     l706:
  5040  001BA4  C015  F015         	movff	___ftneg@f1,?___ftneg
  5041  001BA8  C016  F016         	movff	___ftneg@f1+1,?___ftneg+1
  5042  001BAC  C017  F017         	movff	___ftneg@f1+2,?___ftneg+2
  5043  001BB0  0012               	return		;funcret
  5044  001BB2                     __end_of___ftneg:
  5045                           	opt stack 0
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           intcon	equ	0xFF2
  5051                           intcon2	equ	0xFF1
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           postinc1	equ	0xFE6
  5055                           postdec1	equ	0xFE5
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           postinc2	equ	0xFDE
  5059                           postdec2	equ	0xFDD
  5060                           fsr2h	equ	0xFDA
  5061                           fsr2l	equ	0xFD9
  5062                           status	equ	0xFD8
  5063                           
  5064 ;; *************** function ___ftmul *****************
  5065 ;; Defined at:
  5066 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/ftmul.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  f1              3   32[COMRAM] float 
  5069 ;;  f2              3   35[COMRAM] float 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  f3_as_produc    3   42[COMRAM] unsigned um
  5072 ;;  sign            1   46[COMRAM] unsigned char 
  5073 ;;  cntr            1   45[COMRAM] unsigned char 
  5074 ;;  exp             1   41[COMRAM] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  3   32[COMRAM] float 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         6       0       0       0       0       0       0       0       0
  5085 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5086 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5087 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5088 ;;Total ram usage:       15 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    2
  5091 ;; This function calls:
  5092 ;;		___ftpack
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;;		_twiddle_update
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text20
  5100  001254                     __ptext20:
  5101                           	opt stack 0
  5102  001254                     ___ftmul:
  5103                           	opt stack 28
  5104                           
  5105                           ;incstack = 0
  5106  001254  C023  F027         	movff	___ftmul@f1+2,??___ftmul
  5107  001258  6A28               	clrf	(??___ftmul+1)& (0+255),c
  5108  00125A  6A29               	clrf	(??___ftmul+2)& (0+255),c
  5109  00125C  3422               	rlcf	___ftmul@f1+1,w,c
  5110  00125E  3627               	rlcf	??___ftmul& (0+255),f,c
  5111  001260  E301               	bnc	u4021
  5112  001262  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  5113  001264                     u4021:
  5114  001264  5027               	movf	??___ftmul,w,c
  5115  001266  6E2A               	movwf	___ftmul@exp,c
  5116  001268  502A               	movf	___ftmul@exp,w,c
  5117  00126A  A4D8               	btfss	status,2,c
  5118  00126C  D007               	goto	l695
  5119  00126E  0E00               	movlw	0
  5120  001270  6E21               	movwf	?___ftmul,c
  5121  001272  0E00               	movlw	0
  5122  001274  6E22               	movwf	?___ftmul+1,c
  5123  001276  0E00               	movlw	0
  5124  001278  6E23               	movwf	?___ftmul+2,c
  5125  00127A  0012               	return	
  5126  00127C                     l695:
  5127  00127C  C026  F027         	movff	___ftmul@f2+2,??___ftmul
  5128  001280  6A28               	clrf	(??___ftmul+1)& (0+255),c
  5129  001282  6A29               	clrf	(??___ftmul+2)& (0+255),c
  5130  001284  3425               	rlcf	___ftmul@f2+1,w,c
  5131  001286  3627               	rlcf	??___ftmul& (0+255),f,c
  5132  001288  E301               	bnc	u4041
  5133  00128A  8028               	bsf	(??___ftmul+1)& (0+255),0,c
  5134  00128C                     u4041:
  5135  00128C  5027               	movf	??___ftmul,w,c
  5136  00128E  6E2F               	movwf	___ftmul@sign,c
  5137  001290  502F               	movf	___ftmul@sign,w,c
  5138  001292  A4D8               	btfss	status,2,c
  5139  001294  D007               	goto	l697
  5140  001296  0E00               	movlw	0
  5141  001298  6E21               	movwf	?___ftmul,c
  5142  00129A  0E00               	movlw	0
  5143  00129C  6E22               	movwf	?___ftmul+1,c
  5144  00129E  0E00               	movlw	0
  5145  0012A0  6E23               	movwf	?___ftmul+2,c
  5146  0012A2  0012               	return	
  5147  0012A4                     l697:
  5148  0012A4  502F               	movf	___ftmul@sign,w,c
  5149  0012A6  0F7B               	addlw	123
  5150  0012A8  262A               	addwf	___ftmul@exp,f,c
  5151  0012AA  C023  F02F         	movff	___ftmul@f1+2,___ftmul@sign
  5152  0012AE  5026               	movf	___ftmul@f2+2,w,c
  5153  0012B0  1A2F               	xorwf	___ftmul@sign,f,c
  5154  0012B2  0E80               	movlw	128
  5155  0012B4  162F               	andwf	___ftmul@sign,f,c
  5156  0012B6  8E22               	bsf	___ftmul@f1+1,7,c
  5157  0012B8  8E25               	bsf	___ftmul@f2+1,7,c
  5158  0012BA  0EFF               	movlw	255
  5159  0012BC  1624               	andwf	___ftmul@f2,f,c
  5160  0012BE  0EFF               	movlw	255
  5161  0012C0  1625               	andwf	___ftmul@f2+1,f,c
  5162  0012C2  0E00               	movlw	0
  5163  0012C4  1626               	andwf	___ftmul@f2+2,f,c
  5164  0012C6  0E00               	movlw	0
  5165  0012C8  6E2B               	movwf	___ftmul@f3_as_product,c
  5166  0012CA  0E00               	movlw	0
  5167  0012CC  6E2C               	movwf	___ftmul@f3_as_product+1,c
  5168  0012CE  0E00               	movlw	0
  5169  0012D0  6E2D               	movwf	___ftmul@f3_as_product+2,c
  5170  0012D2  0E07               	movlw	7
  5171  0012D4  6E2E               	movwf	___ftmul@cntr,c
  5172  0012D6  A021               	btfss	___ftmul@f1,0,c
  5173  0012D8  D006               	goto	l699
  5174  0012DA  5024               	movf	___ftmul@f2,w,c
  5175  0012DC  262B               	addwf	___ftmul@f3_as_product,f,c
  5176  0012DE  5025               	movf	___ftmul@f2+1,w,c
  5177  0012E0  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  5178  0012E2  5026               	movf	___ftmul@f2+2,w,c
  5179  0012E4  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  5180  0012E6                     l699:
  5181  0012E6  90D8               	bcf	status,0,c
  5182  0012E8  3223               	rrcf	___ftmul@f1+2,f,c
  5183  0012EA  3222               	rrcf	___ftmul@f1+1,f,c
  5184  0012EC  3221               	rrcf	___ftmul@f1,f,c
  5185  0012EE  90D8               	bcf	status,0,c
  5186  0012F0  3624               	rlcf	___ftmul@f2,f,c
  5187  0012F2  3625               	rlcf	___ftmul@f2+1,f,c
  5188  0012F4  3626               	rlcf	___ftmul@f2+2,f,c
  5189  0012F6  2E2E               	decfsz	___ftmul@cntr,f,c
  5190  0012F8  D7EE               	goto	l698
  5191  0012FA  0E09               	movlw	9
  5192  0012FC  6E2E               	movwf	___ftmul@cntr,c
  5193  0012FE  A021               	btfss	___ftmul@f1,0,c
  5194  001300  D006               	goto	l702
  5195  001302  5024               	movf	___ftmul@f2,w,c
  5196  001304  262B               	addwf	___ftmul@f3_as_product,f,c
  5197  001306  5025               	movf	___ftmul@f2+1,w,c
  5198  001308  222C               	addwfc	___ftmul@f3_as_product+1,f,c
  5199  00130A  5026               	movf	___ftmul@f2+2,w,c
  5200  00130C  222D               	addwfc	___ftmul@f3_as_product+2,f,c
  5201  00130E                     l702:
  5202  00130E  90D8               	bcf	status,0,c
  5203  001310  3223               	rrcf	___ftmul@f1+2,f,c
  5204  001312  3222               	rrcf	___ftmul@f1+1,f,c
  5205  001314  3221               	rrcf	___ftmul@f1,f,c
  5206  001316  90D8               	bcf	status,0,c
  5207  001318  322D               	rrcf	___ftmul@f3_as_product+2,f,c
  5208  00131A  322C               	rrcf	___ftmul@f3_as_product+1,f,c
  5209  00131C  322B               	rrcf	___ftmul@f3_as_product,f,c
  5210  00131E  2E2E               	decfsz	___ftmul@cntr,f,c
  5211  001320  D7EE               	goto	l701
  5212  001322  C02B  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  5213  001326  C02C  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5214  00132A  C02D  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5215  00132E  C02A  F018         	movff	___ftmul@exp,___ftpack@exp
  5216  001332  C02F  F019         	movff	___ftmul@sign,___ftpack@sign
  5217  001336  EC80  F00A         	call	___ftpack	;wreg free
  5218  00133A  C015  F021         	movff	?___ftpack,?___ftmul
  5219  00133E  C016  F022         	movff	?___ftpack+1,?___ftmul+1
  5220  001342  C017  F023         	movff	?___ftpack+2,?___ftmul+2
  5221  001346  0012               	return	
  5222  001348                     __end_of___ftmul:
  5223                           	opt stack 0
  5224                           tblptru	equ	0xFF8
  5225                           tblptrh	equ	0xFF7
  5226                           tblptrl	equ	0xFF6
  5227                           tablat	equ	0xFF5
  5228                           intcon	equ	0xFF2
  5229                           intcon2	equ	0xFF1
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           postinc1	equ	0xFE6
  5233                           postdec1	equ	0xFE5
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           postinc2	equ	0xFDE
  5237                           postdec2	equ	0xFDD
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function ___ftge *****************
  5243 ;; Defined at:
  5244 ;;		line 4 in file "/opt/microchip/xc8/v1.43/sources/common/ftge.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  ff1             3   20[COMRAM] float 
  5247 ;;  ff2             3   23[COMRAM] float 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;		None               void
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5259 ;;      Params:         6       0       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5261 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5263 ;;Total ram usage:        9 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_main
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text21
  5274  001796                     __ptext21:
  5275                           	opt stack 0
  5276  001796                     ___ftge:
  5277                           	opt stack 29
  5278                           
  5279                           ;incstack = 0
  5280  001796  AE17               	btfss	___ftge@ff1+2,7,c
  5281  001798  D016               	goto	l688
  5282  00179A  C015  F01B         	movff	___ftge@ff1,??___ftge
  5283  00179E  C016  F01C         	movff	___ftge@ff1+1,??___ftge+1
  5284  0017A2  C017  F01D         	movff	___ftge@ff1+2,??___ftge+2
  5285  0017A6  1E1B               	comf	??___ftge,f,c
  5286  0017A8  1E1C               	comf	??___ftge+1,f,c
  5287  0017AA  1E1D               	comf	??___ftge+2,f,c
  5288  0017AC  2A1B               	incf	??___ftge,f,c
  5289  0017AE  0E00               	movlw	0
  5290  0017B0  221C               	addwfc	??___ftge+1,f,c
  5291  0017B2  221D               	addwfc	??___ftge+2,f,c
  5292  0017B4  0E00               	movlw	0
  5293  0017B6  241B               	addwf	??___ftge,w,c
  5294  0017B8  6E15               	movwf	___ftge@ff1,c
  5295  0017BA  0E00               	movlw	0
  5296  0017BC  201C               	addwfc	??___ftge+1,w,c
  5297  0017BE  6E16               	movwf	___ftge@ff1+1,c
  5298  0017C0  0E80               	movlw	128
  5299  0017C2  201D               	addwfc	??___ftge+2,w,c
  5300  0017C4  6E17               	movwf	___ftge@ff1+2,c
  5301  0017C6                     l688:
  5302  0017C6  AE1A               	btfss	___ftge@ff2+2,7,c
  5303  0017C8  D016               	goto	l689
  5304  0017CA  C018  F01B         	movff	___ftge@ff2,??___ftge
  5305  0017CE  C019  F01C         	movff	___ftge@ff2+1,??___ftge+1
  5306  0017D2  C01A  F01D         	movff	___ftge@ff2+2,??___ftge+2
  5307  0017D6  1E1B               	comf	??___ftge,f,c
  5308  0017D8  1E1C               	comf	??___ftge+1,f,c
  5309  0017DA  1E1D               	comf	??___ftge+2,f,c
  5310  0017DC  2A1B               	incf	??___ftge,f,c
  5311  0017DE  0E00               	movlw	0
  5312  0017E0  221C               	addwfc	??___ftge+1,f,c
  5313  0017E2  221D               	addwfc	??___ftge+2,f,c
  5314  0017E4  0E00               	movlw	0
  5315  0017E6  241B               	addwf	??___ftge,w,c
  5316  0017E8  6E18               	movwf	___ftge@ff2,c
  5317  0017EA  0E00               	movlw	0
  5318  0017EC  201C               	addwfc	??___ftge+1,w,c
  5319  0017EE  6E19               	movwf	___ftge@ff2+1,c
  5320  0017F0  0E80               	movlw	128
  5321  0017F2  201D               	addwfc	??___ftge+2,w,c
  5322  0017F4  6E1A               	movwf	___ftge@ff2+2,c
  5323  0017F6                     l689:
  5324  0017F6  0E00               	movlw	0
  5325  0017F8  1A15               	xorwf	___ftge@ff1,f,c
  5326  0017FA  0E00               	movlw	0
  5327  0017FC  1A16               	xorwf	___ftge@ff1+1,f,c
  5328  0017FE  0E80               	movlw	128
  5329  001800  1A17               	xorwf	___ftge@ff1+2,f,c
  5330  001802  0E00               	movlw	0
  5331  001804  1A18               	xorwf	___ftge@ff2,f,c
  5332  001806  0E00               	movlw	0
  5333  001808  1A19               	xorwf	___ftge@ff2+1,f,c
  5334  00180A  0E80               	movlw	128
  5335  00180C  1A1A               	xorwf	___ftge@ff2+2,f,c
  5336  00180E  5018               	movf	___ftge@ff2,w,c
  5337  001810  5C15               	subwf	___ftge@ff1,w,c
  5338  001812  5019               	movf	___ftge@ff2+1,w,c
  5339  001814  5816               	subwfb	___ftge@ff1+1,w,c
  5340  001816  501A               	movf	___ftge@ff2+2,w,c
  5341  001818  5817               	subwfb	___ftge@ff1+2,w,c
  5342  00181A  B0D8               	btfsc	status,0,c
  5343  00181C  D002               	goto	l2895
  5344  00181E  90D8               	bcf	status,0,c
  5345  001820  0012               	return	
  5346  001822                     l2895:
  5347  001822  80D8               	bsf	status,0,c
  5348  001824  0012               	return	
  5349  001826                     __end_of___ftge:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           intcon	equ	0xFF2
  5356                           intcon2	equ	0xFF1
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           postinc1	equ	0xFE6
  5360                           postdec1	equ	0xFE5
  5361                           fsr1h	equ	0xFE2
  5362                           fsr1l	equ	0xFE1
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function ___ftadd *****************
  5370 ;; Defined at:
  5371 ;;		line 86 in file "/opt/microchip/xc8/v1.43/sources/common/ftadd.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  f1              3   47[COMRAM] float 
  5374 ;;  f2              3   50[COMRAM] float 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  exp1            1    5[BANK0 ] unsigned char 
  5377 ;;  exp2            1    4[BANK0 ] unsigned char 
  5378 ;;  sign            1    3[BANK0 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  3   47[COMRAM] float 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5388 ;;      Params:         6       0       0       0       0       0       0       0       0
  5389 ;;      Locals:         0       3       0       0       0       0       0       0       0
  5390 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5391 ;;      Totals:         6       6       0       0       0       0       0       0       0
  5392 ;;Total ram usage:       12 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    2
  5395 ;; This function calls:
  5396 ;;		___ftpack
  5397 ;; This function is called by:
  5398 ;;		_main
  5399 ;;		_twiddle_update
  5400 ;;		___ftsub
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text22
  5405  000EFA                     __ptext22:
  5406                           	opt stack 0
  5407  000EFA                     ___ftadd:
  5408                           	opt stack 28
  5409                           
  5410                           ;incstack = 0
  5411  000EFA  C032  F0C2         	movff	___ftadd@f1+2,??___ftadd
  5412  000EFE  0100               	movlb	0	; () banked
  5413  000F00  6BC3               	clrf	(??___ftadd+1)& (0+255),b
  5414  000F02  6BC4               	clrf	(??___ftadd+2)& (0+255),b
  5415  000F04  3431               	rlcf	___ftadd@f1+1,w,c
  5416  000F06  0100               	movlb	0	; () banked
  5417  000F08  37C2               	rlcf	??___ftadd& (0+255),f,b
  5418  000F0A  E301               	bnc	u3811
  5419  000F0C  81C3               	bsf	(??___ftadd+1)& (0+255),0,b
  5420  000F0E                     u3811:
  5421  000F0E  0100               	movlb	0	; () banked
  5422  000F10  51C2               	movf	??___ftadd& (0+255),w,b
  5423  000F12  0100               	movlb	0	; () banked
  5424  000F14  6FC7               	movwf	___ftadd@exp1& (0+255),b
  5425  000F16  C035  F0C2         	movff	___ftadd@f2+2,??___ftadd
  5426  000F1A  0100               	movlb	0	; () banked
  5427  000F1C  6BC3               	clrf	(??___ftadd+1)& (0+255),b
  5428  000F1E  6BC4               	clrf	(??___ftadd+2)& (0+255),b
  5429  000F20  3434               	rlcf	___ftadd@f2+1,w,c
  5430  000F22  0100               	movlb	0	; () banked
  5431  000F24  37C2               	rlcf	??___ftadd& (0+255),f,b
  5432  000F26  E301               	bnc	u3821
  5433  000F28  81C3               	bsf	(??___ftadd+1)& (0+255),0,b
  5434  000F2A                     u3821:
  5435  000F2A  0100               	movlb	0	; () banked
  5436  000F2C  51C2               	movf	??___ftadd& (0+255),w,b
  5437  000F2E  0100               	movlb	0	; () banked
  5438  000F30  6FC6               	movwf	___ftadd@exp2& (0+255),b
  5439                           
  5440                           ; BSR set to: 0
  5441  000F32  0100               	movlb	0	; () banked
  5442  000F34  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5443  000F36  0100               	movlb	0	; () banked
  5444  000F38  B4D8               	btfsc	status,2,c
  5445  000F3A  D011               	goto	u3850
  5446                           
  5447                           ; BSR set to: 0
  5448  000F3C  0100               	movlb	0	; () banked
  5449  000F3E  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5450  000F40  0100               	movlb	0	; () banked
  5451  000F42  5DC7               	subwf	___ftadd@exp1& (0+255),w,b
  5452  000F44  B0D8               	btfsc	status,0,c
  5453  000F46  D012               	goto	l647
  5454                           
  5455                           ; BSR set to: 0
  5456  000F48  0100               	movlb	0	; () banked
  5457  000F4A  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5458  000F4C  0800               	sublw	0
  5459  000F4E  0100               	movlb	0	; () banked
  5460  000F50  25C6               	addwf	___ftadd@exp2& (0+255),w,b
  5461  000F52  0100               	movlb	0	; () banked
  5462  000F54  6FC2               	movwf	??___ftadd& (0+255),b
  5463  000F56  0E18               	movlw	24
  5464  000F58  0100               	movlb	0	; () banked
  5465  000F5A  65C2               	cpfsgt	??___ftadd& (0+255),b
  5466  000F5C  D007               	goto	l647
  5467  000F5E                     u3850:
  5468                           
  5469                           ; BSR set to: 0
  5470  000F5E  C033  F030         	movff	___ftadd@f2,?___ftadd
  5471  000F62  C034  F031         	movff	___ftadd@f2+1,?___ftadd+1
  5472  000F66  C035  F032         	movff	___ftadd@f2+2,?___ftadd+2
  5473  000F6A  0012               	return	
  5474  000F6C                     l647:
  5475                           
  5476                           ; BSR set to: 0
  5477                           
  5478                           ; BSR set to: 0
  5479  000F6C  0100               	movlb	0	; () banked
  5480  000F6E  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5481  000F70  0100               	movlb	0	; () banked
  5482  000F72  B4D8               	btfsc	status,2,c
  5483  000F74  D011               	goto	u3880
  5484                           
  5485                           ; BSR set to: 0
  5486  000F76  0100               	movlb	0	; () banked
  5487  000F78  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5488  000F7A  0100               	movlb	0	; () banked
  5489  000F7C  5DC6               	subwf	___ftadd@exp2& (0+255),w,b
  5490  000F7E  B0D8               	btfsc	status,0,c
  5491  000F80  D012               	goto	l651
  5492                           
  5493                           ; BSR set to: 0
  5494  000F82  0100               	movlb	0	; () banked
  5495  000F84  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5496  000F86  0800               	sublw	0
  5497  000F88  0100               	movlb	0	; () banked
  5498  000F8A  25C7               	addwf	___ftadd@exp1& (0+255),w,b
  5499  000F8C  0100               	movlb	0	; () banked
  5500  000F8E  6FC2               	movwf	??___ftadd& (0+255),b
  5501  000F90  0E18               	movlw	24
  5502  000F92  0100               	movlb	0	; () banked
  5503  000F94  65C2               	cpfsgt	??___ftadd& (0+255),b
  5504  000F96  D007               	goto	l651
  5505  000F98                     u3880:
  5506                           
  5507                           ; BSR set to: 0
  5508  000F98  C030  F030         	movff	___ftadd@f1,?___ftadd
  5509  000F9C  C031  F031         	movff	___ftadd@f1+1,?___ftadd+1
  5510  000FA0  C032  F032         	movff	___ftadd@f1+2,?___ftadd+2
  5511  000FA4  0012               	return	
  5512  000FA6                     l651:
  5513                           
  5514                           ; BSR set to: 0
  5515                           
  5516                           ; BSR set to: 0
  5517  000FA6  0E06               	movlw	6
  5518  000FA8  0100               	movlb	0	; () banked
  5519  000FAA  6FC5               	movwf	___ftadd@sign& (0+255),b
  5520                           
  5521                           ; BSR set to: 0
  5522  000FAC  AE32               	btfss	___ftadd@f1+2,7,c
  5523  000FAE  D002               	goto	l654
  5524                           
  5525                           ; BSR set to: 0
  5526  000FB0  0100               	movlb	0	; () banked
  5527  000FB2  8FC5               	bsf	___ftadd@sign& (0+255),7,b
  5528  000FB4                     l654:
  5529                           
  5530                           ; BSR set to: 0
  5531                           
  5532                           ; BSR set to: 0
  5533  000FB4  AE35               	btfss	___ftadd@f2+2,7,c
  5534  000FB6  D002               	goto	l655
  5535                           
  5536                           ; BSR set to: 0
  5537  000FB8  0100               	movlb	0	; () banked
  5538  000FBA  8DC5               	bsf	___ftadd@sign& (0+255),6,b
  5539  000FBC                     l655:
  5540                           
  5541                           ; BSR set to: 0
  5542  000FBC  8E31               	bsf	___ftadd@f1+1,7,c
  5543                           
  5544                           ; BSR set to: 0
  5545  000FBE  0EFF               	movlw	255
  5546  000FC0  1630               	andwf	___ftadd@f1,f,c
  5547  000FC2  0EFF               	movlw	255
  5548  000FC4  1631               	andwf	___ftadd@f1+1,f,c
  5549  000FC6  0E00               	movlw	0
  5550  000FC8  1632               	andwf	___ftadd@f1+2,f,c
  5551  000FCA  8E34               	bsf	___ftadd@f2+1,7,c
  5552                           
  5553                           ; BSR set to: 0
  5554  000FCC  0EFF               	movlw	255
  5555  000FCE  1633               	andwf	___ftadd@f2,f,c
  5556  000FD0  0EFF               	movlw	255
  5557  000FD2  1634               	andwf	___ftadd@f2+1,f,c
  5558  000FD4  0E00               	movlw	0
  5559  000FD6  1635               	andwf	___ftadd@f2+2,f,c
  5560                           
  5561                           ; BSR set to: 0
  5562  000FD8  0100               	movlb	0	; () banked
  5563  000FDA  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5564  000FDC  0100               	movlb	0	; () banked
  5565  000FDE  5DC7               	subwf	___ftadd@exp1& (0+255),w,b
  5566  000FE0  B0D8               	btfsc	status,0,c
  5567  000FE2  D023               	goto	l656
  5568  000FE4                     u3910:
  5569                           
  5570                           ; BSR set to: 0
  5571                           
  5572                           ; BSR set to: 0
  5573  000FE4  90D8               	bcf	status,0,c
  5574  000FE6  3633               	rlcf	___ftadd@f2,f,c
  5575  000FE8  3634               	rlcf	___ftadd@f2+1,f,c
  5576  000FEA  3635               	rlcf	___ftadd@f2+2,f,c
  5577  000FEC  0100               	movlb	0	; () banked
  5578  000FEE  07C6               	decf	___ftadd@exp2& (0+255),f,b
  5579                           
  5580                           ; BSR set to: 0
  5581  000FF0  0100               	movlb	0	; () banked
  5582  000FF2  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5583  000FF4  0100               	movlb	0	; () banked
  5584  000FF6  19C6               	xorwf	___ftadd@exp2& (0+255),w,b
  5585  000FF8  B4D8               	btfsc	status,2,c
  5586  000FFA  D010               	goto	l661
  5587                           
  5588                           ; BSR set to: 0
  5589  000FFC  0100               	movlb	0	; () banked
  5590  000FFE  07C5               	decf	___ftadd@sign& (0+255),f,b
  5591  001000  C0C5  F0C2         	movff	___ftadd@sign,??___ftadd
  5592  001004  0E07               	movlw	7
  5593  001006  0100               	movlb	0	; () banked
  5594  001008  17C2               	andwf	??___ftadd& (0+255),f,b
  5595  00100A  B4D8               	btfsc	status,2,c
  5596  00100C  D007               	goto	l661
  5597  00100E  D7EA               	goto	u3910
  5598  001010                     
  5599                           ; BSR set to: 0
  5600                           
  5601                           ; BSR set to: 0
  5602  001010  90D8               	bcf	status,0,c
  5603  001012  3232               	rrcf	___ftadd@f1+2,f,c
  5604  001014  3231               	rrcf	___ftadd@f1+1,f,c
  5605  001016  3230               	rrcf	___ftadd@f1,f,c
  5606  001018  0100               	movlb	0	; () banked
  5607  00101A  2BC7               	incf	___ftadd@exp1& (0+255),f,b
  5608  00101C                     l661:
  5609                           
  5610                           ; BSR set to: 0
  5611                           
  5612                           ; BSR set to: 0
  5613  00101C  0100               	movlb	0	; () banked
  5614  00101E  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5615  001020  0100               	movlb	0	; () banked
  5616  001022  19C7               	xorwf	___ftadd@exp1& (0+255),w,b
  5617  001024  B4D8               	btfsc	status,2,c
  5618  001026  D029               	goto	u3980
  5619  001028  D7F3               	goto	l662
  5620  00102A                     l656:
  5621                           
  5622                           ; BSR set to: 0
  5623                           
  5624                           ; BSR set to: 0
  5625  00102A  0100               	movlb	0	; () banked
  5626  00102C  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5627  00102E  0100               	movlb	0	; () banked
  5628  001030  5DC6               	subwf	___ftadd@exp2& (0+255),w,b
  5629  001032  B0D8               	btfsc	status,0,c
  5630  001034  D022               	goto	u3980
  5631  001036                     u3950:
  5632                           
  5633                           ; BSR set to: 0
  5634                           
  5635                           ; BSR set to: 0
  5636  001036  90D8               	bcf	status,0,c
  5637  001038  3630               	rlcf	___ftadd@f1,f,c
  5638  00103A  3631               	rlcf	___ftadd@f1+1,f,c
  5639  00103C  3632               	rlcf	___ftadd@f1+2,f,c
  5640  00103E  0100               	movlb	0	; () banked
  5641  001040  07C7               	decf	___ftadd@exp1& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 0
  5644  001042  0100               	movlb	0	; () banked
  5645  001044  51C7               	movf	___ftadd@exp1& (0+255),w,b
  5646  001046  0100               	movlb	0	; () banked
  5647  001048  19C6               	xorwf	___ftadd@exp2& (0+255),w,b
  5648  00104A  B4D8               	btfsc	status,2,c
  5649  00104C  D010               	goto	l670
  5650                           
  5651                           ; BSR set to: 0
  5652  00104E  0100               	movlb	0	; () banked
  5653  001050  07C5               	decf	___ftadd@sign& (0+255),f,b
  5654  001052  C0C5  F0C2         	movff	___ftadd@sign,??___ftadd
  5655  001056  0E07               	movlw	7
  5656  001058  0100               	movlb	0	; () banked
  5657  00105A  17C2               	andwf	??___ftadd& (0+255),f,b
  5658  00105C  B4D8               	btfsc	status,2,c
  5659  00105E  D007               	goto	l670
  5660  001060  D7EA               	goto	u3950
  5661  001062                     
  5662                           ; BSR set to: 0
  5663                           
  5664                           ; BSR set to: 0
  5665  001062  90D8               	bcf	status,0,c
  5666  001064  3235               	rrcf	___ftadd@f2+2,f,c
  5667  001066  3234               	rrcf	___ftadd@f2+1,f,c
  5668  001068  3233               	rrcf	___ftadd@f2,f,c
  5669  00106A  0100               	movlb	0	; () banked
  5670  00106C  2BC6               	incf	___ftadd@exp2& (0+255),f,b
  5671  00106E                     l670:
  5672                           
  5673                           ; BSR set to: 0
  5674                           
  5675                           ; BSR set to: 0
  5676  00106E  0100               	movlb	0	; () banked
  5677  001070  51C6               	movf	___ftadd@exp2& (0+255),w,b
  5678  001072  0100               	movlb	0	; () banked
  5679  001074  19C7               	xorwf	___ftadd@exp1& (0+255),w,b
  5680  001076  A4D8               	btfss	status,2,c
  5681  001078  D7F4               	goto	l671
  5682  00107A                     u3980:
  5683                           
  5684                           ; BSR set to: 0
  5685                           
  5686                           ; BSR set to: 0
  5687                           
  5688                           ; BSR set to: 0
  5689  00107A  0100               	movlb	0	; () banked
  5690  00107C  AFC5               	btfss	___ftadd@sign& (0+255),7,b
  5691  00107E  D00C               	goto	l673
  5692                           
  5693                           ; BSR set to: 0
  5694  001080  0EFF               	movlw	255
  5695  001082  1A30               	xorwf	___ftadd@f1,f,c
  5696  001084  0EFF               	movlw	255
  5697  001086  1A31               	xorwf	___ftadd@f1+1,f,c
  5698  001088  0EFF               	movlw	255
  5699  00108A  1A32               	xorwf	___ftadd@f1+2,f,c
  5700  00108C  0E01               	movlw	1
  5701  00108E  2630               	addwf	___ftadd@f1,f,c
  5702  001090  0E00               	movlw	0
  5703  001092  2231               	addwfc	___ftadd@f1+1,f,c
  5704  001094  0E00               	movlw	0
  5705  001096  2232               	addwfc	___ftadd@f1+2,f,c
  5706  001098                     l673:
  5707                           
  5708                           ; BSR set to: 0
  5709  001098  0100               	movlb	0	; () banked
  5710  00109A  ADC5               	btfss	___ftadd@sign& (0+255),6,b
  5711  00109C  D00C               	goto	l674
  5712                           
  5713                           ; BSR set to: 0
  5714  00109E  0EFF               	movlw	255
  5715  0010A0  1A33               	xorwf	___ftadd@f2,f,c
  5716  0010A2  0EFF               	movlw	255
  5717  0010A4  1A34               	xorwf	___ftadd@f2+1,f,c
  5718  0010A6  0EFF               	movlw	255
  5719  0010A8  1A35               	xorwf	___ftadd@f2+2,f,c
  5720  0010AA  0E01               	movlw	1
  5721  0010AC  2633               	addwf	___ftadd@f2,f,c
  5722  0010AE  0E00               	movlw	0
  5723  0010B0  2234               	addwfc	___ftadd@f2+1,f,c
  5724  0010B2  0E00               	movlw	0
  5725  0010B4  2235               	addwfc	___ftadd@f2+2,f,c
  5726  0010B6                     l674:
  5727                           
  5728                           ; BSR set to: 0
  5729                           
  5730                           ; BSR set to: 0
  5731  0010B6  0E00               	movlw	0
  5732  0010B8  0100               	movlb	0	; () banked
  5733  0010BA  6FC5               	movwf	___ftadd@sign& (0+255),b
  5734                           
  5735                           ; BSR set to: 0
  5736  0010BC  5030               	movf	___ftadd@f1,w,c
  5737  0010BE  2633               	addwf	___ftadd@f2,f,c
  5738  0010C0  5031               	movf	___ftadd@f1+1,w,c
  5739  0010C2  2234               	addwfc	___ftadd@f2+1,f,c
  5740  0010C4  5032               	movf	___ftadd@f1+2,w,c
  5741  0010C6  2235               	addwfc	___ftadd@f2+2,f,c
  5742                           
  5743                           ; BSR set to: 0
  5744  0010C8  AE35               	btfss	___ftadd@f2+2,7,c
  5745  0010CA  D00F               	goto	l675
  5746                           
  5747                           ; BSR set to: 0
  5748  0010CC  0EFF               	movlw	255
  5749  0010CE  1A33               	xorwf	___ftadd@f2,f,c
  5750  0010D0  0EFF               	movlw	255
  5751  0010D2  1A34               	xorwf	___ftadd@f2+1,f,c
  5752  0010D4  0EFF               	movlw	255
  5753  0010D6  1A35               	xorwf	___ftadd@f2+2,f,c
  5754  0010D8  0E01               	movlw	1
  5755  0010DA  2633               	addwf	___ftadd@f2,f,c
  5756  0010DC  0E00               	movlw	0
  5757  0010DE  2234               	addwfc	___ftadd@f2+1,f,c
  5758  0010E0  0E00               	movlw	0
  5759  0010E2  2235               	addwfc	___ftadd@f2+2,f,c
  5760                           
  5761                           ; BSR set to: 0
  5762  0010E4  0E01               	movlw	1
  5763  0010E6  0100               	movlb	0	; () banked
  5764  0010E8  6FC5               	movwf	___ftadd@sign& (0+255),b
  5765  0010EA                     l675:
  5766                           
  5767                           ; BSR set to: 0
  5768                           
  5769                           ; BSR set to: 0
  5770  0010EA  C033  F015         	movff	___ftadd@f2,___ftpack@arg
  5771  0010EE  C034  F016         	movff	___ftadd@f2+1,___ftpack@arg+1
  5772  0010F2  C035  F017         	movff	___ftadd@f2+2,___ftpack@arg+2
  5773  0010F6  C0C7  F018         	movff	___ftadd@exp1,___ftpack@exp
  5774  0010FA  C0C5  F019         	movff	___ftadd@sign,___ftpack@sign
  5775  0010FE  EC80  F00A         	call	___ftpack	;wreg free
  5776  001102  C015  F030         	movff	?___ftpack,?___ftadd
  5777  001106  C016  F031         	movff	?___ftpack+1,?___ftadd+1
  5778  00110A  C017  F032         	movff	?___ftpack+2,?___ftadd+2
  5779  00110E  0012               	return	
  5780  001110                     __end_of___ftadd:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           intcon	equ	0xFF2
  5787                           intcon2	equ	0xFF1
  5788                           postinc0	equ	0xFEE
  5789                           wreg	equ	0xFE8
  5790                           postinc1	equ	0xFE6
  5791                           postdec1	equ	0xFE5
  5792                           fsr1h	equ	0xFE2
  5793                           fsr1l	equ	0xFE1
  5794                           postinc2	equ	0xFDE
  5795                           postdec2	equ	0xFDD
  5796                           fsr2h	equ	0xFDA
  5797                           fsr2l	equ	0xFD9
  5798                           status	equ	0xFD8
  5799                           
  5800 ;; *************** function ___awtoft *****************
  5801 ;; Defined at:
  5802 ;;		line 32 in file "/opt/microchip/xc8/v1.43/sources/common/awtoft.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;  c               2   28[COMRAM] int 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  sign            1   31[COMRAM] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  3   28[COMRAM] float 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5816 ;;      Params:         3       0       0       0       0       0       0       0       0
  5817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5819 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5820 ;;Total ram usage:        4 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    2
  5823 ;; This function calls:
  5824 ;;		___ftpack
  5825 ;; This function is called by:
  5826 ;;		_main
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text23
  5831  001ADA                     __ptext23:
  5832                           	opt stack 0
  5833  001ADA                     ___awtoft:
  5834                           	opt stack 28
  5835                           
  5836                           ;incstack = 0
  5837  001ADA  0E00               	movlw	0
  5838  001ADC  6E20               	movwf	___awtoft@sign,c
  5839  001ADE  AE1E               	btfss	___awtoft@c+1,7,c
  5840  001AE0  D006               	goto	l597
  5841  001AE2  6C1D               	negf	___awtoft@c,c
  5842  001AE4  1E1E               	comf	___awtoft@c+1,f,c
  5843  001AE6  B0D8               	btfsc	status,0,c
  5844  001AE8  2A1E               	incf	___awtoft@c+1,f,c
  5845  001AEA  0E01               	movlw	1
  5846  001AEC  6E20               	movwf	___awtoft@sign,c
  5847  001AEE                     l597:
  5848  001AEE  C01D  F015         	movff	___awtoft@c,___ftpack@arg
  5849  001AF2  C01E  F016         	movff	___awtoft@c+1,___ftpack@arg+1
  5850  001AF6  6A17               	clrf	___ftpack@arg+2,c
  5851  001AF8  0E8E               	movlw	142
  5852  001AFA  6E18               	movwf	___ftpack@exp,c
  5853  001AFC  C020  F019         	movff	___awtoft@sign,___ftpack@sign
  5854  001B00  EC80  F00A         	call	___ftpack	;wreg free
  5855  001B04  C015  F01D         	movff	?___ftpack,?___awtoft
  5856  001B08  C016  F01E         	movff	?___ftpack+1,?___awtoft+1
  5857  001B0C  C017  F01F         	movff	?___ftpack+2,?___awtoft+2
  5858  001B10  0012               	return	
  5859  001B12                     __end_of___awtoft:
  5860                           	opt stack 0
  5861                           tblptru	equ	0xFF8
  5862                           tblptrh	equ	0xFF7
  5863                           tblptrl	equ	0xFF6
  5864                           tablat	equ	0xFF5
  5865                           intcon	equ	0xFF2
  5866                           intcon2	equ	0xFF1
  5867                           postinc0	equ	0xFEE
  5868                           wreg	equ	0xFE8
  5869                           postinc1	equ	0xFE6
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function ___ftpack *****************
  5880 ;; Defined at:
  5881 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/float.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  arg             3   20[COMRAM] unsigned um
  5884 ;;  exp             1   23[COMRAM] unsigned char 
  5885 ;;  sign            1   24[COMRAM] unsigned char 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  3   20[COMRAM] float 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5897 ;;      Params:         5       0       0       0       0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5899 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5900 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5901 ;;Total ram usage:        8 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		___awtoft
  5908 ;;		___ftadd
  5909 ;;		___ftmul
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text24
  5914  001500                     __ptext24:
  5915                           	opt stack 0
  5916  001500                     ___ftpack:
  5917                           	opt stack 28
  5918                           
  5919                           ;incstack = 0
  5920  001500  5018               	movf	___ftpack@exp,w,c
  5921  001502  B4D8               	btfsc	status,2,c
  5922  001504  D005               	goto	u3360
  5923  001506  5015               	movf	___ftpack@arg,w,c
  5924  001508  1016               	iorwf	___ftpack@arg+1,w,c
  5925  00150A  1017               	iorwf	___ftpack@arg+2,w,c
  5926  00150C  A4D8               	btfss	status,2,c
  5927  00150E  D00C               	goto	l616
  5928  001510                     u3360:
  5929  001510  0E00               	movlw	0
  5930  001512  6E15               	movwf	?___ftpack,c
  5931  001514  0E00               	movlw	0
  5932  001516  6E16               	movwf	?___ftpack+1,c
  5933  001518  0E00               	movlw	0
  5934  00151A  6E17               	movwf	?___ftpack+2,c
  5935  00151C  0012               	return	
  5936  00151E  2A18               	incf	___ftpack@exp,f,c
  5937  001520  90D8               	bcf	status,0,c
  5938  001522  3217               	rrcf	___ftpack@arg+2,f,c
  5939  001524  3216               	rrcf	___ftpack@arg+1,f,c
  5940  001526  3215               	rrcf	___ftpack@arg,f,c
  5941  001528                     l616:
  5942  001528  0E00               	movlw	0
  5943  00152A  1415               	andwf	___ftpack@arg,w,c
  5944  00152C  6E1A               	movwf	??___ftpack& (0+255),c
  5945  00152E  0E00               	movlw	0
  5946  001530  1416               	andwf	___ftpack@arg+1,w,c
  5947  001532  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  5948  001534  0EFE               	movlw	254
  5949  001536  1417               	andwf	___ftpack@arg+2,w,c
  5950  001538  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  5951  00153A  501A               	movf	??___ftpack,w,c
  5952  00153C  101B               	iorwf	??___ftpack+1,w,c
  5953  00153E  101C               	iorwf	??___ftpack+2,w,c
  5954  001540  B4D8               	btfsc	status,2,c
  5955  001542  D00C               	goto	l619
  5956  001544  D7EC               	goto	l617
  5957  001546  2A18               	incf	___ftpack@exp,f,c
  5958  001548  0E01               	movlw	1
  5959  00154A  2615               	addwf	___ftpack@arg,f,c
  5960  00154C  0E00               	movlw	0
  5961  00154E  2216               	addwfc	___ftpack@arg+1,f,c
  5962  001550  0E00               	movlw	0
  5963  001552  2217               	addwfc	___ftpack@arg+2,f,c
  5964  001554  90D8               	bcf	status,0,c
  5965  001556  3217               	rrcf	___ftpack@arg+2,f,c
  5966  001558  3216               	rrcf	___ftpack@arg+1,f,c
  5967  00155A  3215               	rrcf	___ftpack@arg,f,c
  5968  00155C                     l619:
  5969  00155C  0E00               	movlw	0
  5970  00155E  1415               	andwf	___ftpack@arg,w,c
  5971  001560  6E1A               	movwf	??___ftpack& (0+255),c
  5972  001562  0E00               	movlw	0
  5973  001564  1416               	andwf	___ftpack@arg+1,w,c
  5974  001566  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  5975  001568  0EFF               	movlw	255
  5976  00156A  1417               	andwf	___ftpack@arg+2,w,c
  5977  00156C  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  5978  00156E  501A               	movf	??___ftpack,w,c
  5979  001570  101B               	iorwf	??___ftpack+1,w,c
  5980  001572  101C               	iorwf	??___ftpack+2,w,c
  5981  001574  B4D8               	btfsc	status,2,c
  5982  001576  D006               	goto	l622
  5983  001578  D7E6               	goto	l620
  5984  00157A  0618               	decf	___ftpack@exp,f,c
  5985  00157C  90D8               	bcf	status,0,c
  5986  00157E  3615               	rlcf	___ftpack@arg,f,c
  5987  001580  3616               	rlcf	___ftpack@arg+1,f,c
  5988  001582  3617               	rlcf	___ftpack@arg+2,f,c
  5989  001584                     l622:
  5990  001584  BE16               	btfsc	___ftpack@arg+1,7,c
  5991  001586  D003               	goto	u3400
  5992  001588  0E02               	movlw	2
  5993  00158A  6018               	cpfslt	___ftpack@exp,c
  5994  00158C  D7F6               	goto	l623
  5995  00158E                     u3400:
  5996  00158E  A018               	btfss	___ftpack@exp,0,c
  5997  001590  9E16               	bcf	___ftpack@arg+1,7,c
  5998  001592  90D8               	bcf	status,0,c
  5999  001594  3218               	rrcf	___ftpack@exp,f,c
  6000  001596  5018               	movf	___ftpack@exp,w,c
  6001  001598  1217               	iorwf	___ftpack@arg+2,f,c
  6002  00159A  5019               	movf	___ftpack@sign,w,c
  6003  00159C  A4D8               	btfss	status,2,c
  6004  00159E  8E17               	bsf	___ftpack@arg+2,7,c
  6005  0015A0  C015  F015         	movff	___ftpack@arg,?___ftpack
  6006  0015A4  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  6007  0015A8  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  6008  0015AC  0012               	return	
  6009  0015AE                     __end_of___ftpack:
  6010                           	opt stack 0
  6011                           tblptru	equ	0xFF8
  6012                           tblptrh	equ	0xFF7
  6013                           tblptrl	equ	0xFF6
  6014                           tablat	equ	0xFF5
  6015                           intcon	equ	0xFF2
  6016                           intcon2	equ	0xFF1
  6017                           postinc0	equ	0xFEE
  6018                           wreg	equ	0xFE8
  6019                           postinc1	equ	0xFE6
  6020                           postdec1	equ	0xFE5
  6021                           fsr1h	equ	0xFE2
  6022                           fsr1l	equ	0xFE1
  6023                           postinc2	equ	0xFDE
  6024                           postdec2	equ	0xFDD
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function ___almod *****************
  6030 ;; Defined at:
  6031 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/almod.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  dividend        4   20[COMRAM] long 
  6034 ;;  divisor         4   24[COMRAM] long 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  sign            1   29[COMRAM] unsigned char 
  6037 ;;  counter         1   28[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  4   20[COMRAM] long 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         8       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:       10 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_main
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text25
  6062  0015AE                     __ptext25:
  6063                           	opt stack 0
  6064  0015AE                     ___almod:
  6065                           	opt stack 29
  6066                           
  6067                           ;incstack = 0
  6068  0015AE  0E00               	movlw	0
  6069  0015B0  6E1E               	movwf	___almod@sign,c
  6070  0015B2  AE18               	btfss	___almod@dividend+3,7,c
  6071  0015B4  D00A               	goto	l470
  6072  0015B6  1E18               	comf	___almod@dividend+3,f,c
  6073  0015B8  1E17               	comf	___almod@dividend+2,f,c
  6074  0015BA  1E16               	comf	___almod@dividend+1,f,c
  6075  0015BC  6C15               	negf	___almod@dividend,c
  6076  0015BE  0E00               	movlw	0
  6077  0015C0  2216               	addwfc	___almod@dividend+1,f,c
  6078  0015C2  2217               	addwfc	___almod@dividend+2,f,c
  6079  0015C4  2218               	addwfc	___almod@dividend+3,f,c
  6080  0015C6  0E01               	movlw	1
  6081  0015C8  6E1E               	movwf	___almod@sign,c
  6082  0015CA                     l470:
  6083  0015CA  AE1C               	btfss	___almod@divisor+3,7,c
  6084  0015CC  D008               	goto	l471
  6085  0015CE  1E1C               	comf	___almod@divisor+3,f,c
  6086  0015D0  1E1B               	comf	___almod@divisor+2,f,c
  6087  0015D2  1E1A               	comf	___almod@divisor+1,f,c
  6088  0015D4  6C19               	negf	___almod@divisor,c
  6089  0015D6  0E00               	movlw	0
  6090  0015D8  221A               	addwfc	___almod@divisor+1,f,c
  6091  0015DA  221B               	addwfc	___almod@divisor+2,f,c
  6092  0015DC  221C               	addwfc	___almod@divisor+3,f,c
  6093  0015DE                     l471:
  6094  0015DE  5019               	movf	___almod@divisor,w,c
  6095  0015E0  101A               	iorwf	___almod@divisor+1,w,c
  6096  0015E2  101B               	iorwf	___almod@divisor+2,w,c
  6097  0015E4  101C               	iorwf	___almod@divisor+3,w,c
  6098  0015E6  B4D8               	btfsc	status,2,c
  6099  0015E8  D024               	goto	l478
  6100  0015EA  0E01               	movlw	1
  6101  0015EC  6E1D               	movwf	___almod@counter,c
  6102  0015EE  D006               	goto	l473
  6103  0015F0  90D8               	bcf	status,0,c
  6104  0015F2  3619               	rlcf	___almod@divisor,f,c
  6105  0015F4  361A               	rlcf	___almod@divisor+1,f,c
  6106  0015F6  361B               	rlcf	___almod@divisor+2,f,c
  6107  0015F8  361C               	rlcf	___almod@divisor+3,f,c
  6108  0015FA  2A1D               	incf	___almod@counter,f,c
  6109  0015FC                     l473:
  6110  0015FC  AE1C               	btfss	___almod@divisor+3,7,c
  6111  0015FE  D7F8               	goto	l474
  6112  001600                     u3780:
  6113  001600  5019               	movf	___almod@divisor,w,c
  6114  001602  5C15               	subwf	___almod@dividend,w,c
  6115  001604  501A               	movf	___almod@divisor+1,w,c
  6116  001606  5816               	subwfb	___almod@dividend+1,w,c
  6117  001608  501B               	movf	___almod@divisor+2,w,c
  6118  00160A  5817               	subwfb	___almod@dividend+2,w,c
  6119  00160C  501C               	movf	___almod@divisor+3,w,c
  6120  00160E  5818               	subwfb	___almod@dividend+3,w,c
  6121  001610  A0D8               	btfss	status,0,c
  6122  001612  D008               	goto	l477
  6123  001614  5019               	movf	___almod@divisor,w,c
  6124  001616  5E15               	subwf	___almod@dividend,f,c
  6125  001618  501A               	movf	___almod@divisor+1,w,c
  6126  00161A  5A16               	subwfb	___almod@dividend+1,f,c
  6127  00161C  501B               	movf	___almod@divisor+2,w,c
  6128  00161E  5A17               	subwfb	___almod@dividend+2,f,c
  6129  001620  501C               	movf	___almod@divisor+3,w,c
  6130  001622  5A18               	subwfb	___almod@dividend+3,f,c
  6131  001624                     l477:
  6132  001624  90D8               	bcf	status,0,c
  6133  001626  321C               	rrcf	___almod@divisor+3,f,c
  6134  001628  321B               	rrcf	___almod@divisor+2,f,c
  6135  00162A  321A               	rrcf	___almod@divisor+1,f,c
  6136  00162C  3219               	rrcf	___almod@divisor,f,c
  6137  00162E  2E1D               	decfsz	___almod@counter,f,c
  6138  001630  D7E7               	goto	u3780
  6139  001632                     l478:
  6140  001632  501E               	movf	___almod@sign,w,c
  6141  001634  B4D8               	btfsc	status,2,c
  6142  001636  D008               	goto	l479
  6143  001638  1E18               	comf	___almod@dividend+3,f,c
  6144  00163A  1E17               	comf	___almod@dividend+2,f,c
  6145  00163C  1E16               	comf	___almod@dividend+1,f,c
  6146  00163E  6C15               	negf	___almod@dividend,c
  6147  001640  0E00               	movlw	0
  6148  001642  2216               	addwfc	___almod@dividend+1,f,c
  6149  001644  2217               	addwfc	___almod@dividend+2,f,c
  6150  001646  2218               	addwfc	___almod@dividend+3,f,c
  6151  001648                     l479:
  6152  001648  C015  F015         	movff	___almod@dividend,?___almod
  6153  00164C  C016  F016         	movff	___almod@dividend+1,?___almod+1
  6154  001650  C017  F017         	movff	___almod@dividend+2,?___almod+2
  6155  001654  C018  F018         	movff	___almod@dividend+3,?___almod+3
  6156  001658  0012               	return	
  6157  00165A                     __end_of___almod:
  6158                           	opt stack 0
  6159                           tblptru	equ	0xFF8
  6160                           tblptrh	equ	0xFF7
  6161                           tblptrl	equ	0xFF6
  6162                           tablat	equ	0xFF5
  6163                           intcon	equ	0xFF2
  6164                           intcon2	equ	0xFF1
  6165                           postinc0	equ	0xFEE
  6166                           wreg	equ	0xFE8
  6167                           postinc1	equ	0xFE6
  6168                           postdec1	equ	0xFE5
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           postinc2	equ	0xFDE
  6172                           postdec2	equ	0xFDD
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           
  6177 ;; *************** function _EnhancedRead *****************
  6178 ;; Defined at:
  6179 ;;		line 29 in file "analog.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  aux             2   29[COMRAM] unsigned int 
  6184 ;;  i               1   31[COMRAM] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0
  6195 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6197 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:        4 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    2
  6201 ;; This function calls:
  6202 ;;		___awdiv
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text26
  6209  00198E                     __ptext26:
  6210                           	opt stack 0
  6211  00198E                     _EnhancedRead:
  6212                           	opt stack 28
  6213                           
  6214                           ;analog.c: 30: unsigned char i;
  6215                           ;analog.c: 31: unsigned int aux;
  6216                           ;analog.c: 32: for (i=0;i<9;i++){
  6217                           
  6218                           ;incstack = 0
  6219  00198E  0E00               	movlw	0
  6220  001990  6E20               	movwf	EnhancedRead@i,c
  6221  001992                     l3133:
  6222  001992  0E08               	movlw	8
  6223  001994  6420               	cpfsgt	EnhancedRead@i,c
  6224  001996  D001               	goto	l116
  6225  001998  0012               	return	
  6226  00199A                     l116:
  6227                           
  6228                           ;analog.c: 33: ADCON0bits.CHS=i;
  6229  00199A  C020  F01D         	movff	EnhancedRead@i,??_EnhancedRead
  6230  00199E  461D               	rlncf	??_EnhancedRead,f,c
  6231  0019A0  461D               	rlncf	??_EnhancedRead,f,c
  6232  0019A2  50C2               	movf	4034,w,c	;volatile
  6233  0019A4  181D               	xorwf	??_EnhancedRead,w,c
  6234  0019A6  0BC3               	andlw	-61
  6235  0019A8  181D               	xorwf	??_EnhancedRead,w,c
  6236  0019AA  6EC2               	movwf	4034,c	;volatile
  6237                           
  6238                           ;analog.c: 34: ADCON0bits.GODONE=1;
  6239  0019AC  82C2               	bsf	4034,1,c	;volatile
  6240  0019AE  B2C2               	btfsc	4034,1,c	;volatile
  6241  0019B0  D7FE               	goto	l119
  6242                           
  6243                           ;analog.c: 36: aux=ADRESH*4;
  6244  0019B2  50C4               	movf	4036,w,c	;volatile
  6245  0019B4  0D04               	mullw	4
  6246  0019B6  CFF3 F01E          	movff	prodl,EnhancedRead@aux
  6247  0019BA  CFF4 F01F          	movff	prodh,EnhancedRead@aux+1
  6248                           
  6249                           ;analog.c: 37: aux=aux+ADRESL/64;
  6250  0019BE  CFC3 F015          	movff	4035,___awdiv@dividend	;volatile
  6251  0019C2  6A16               	clrf	___awdiv@dividend+1,c
  6252  0019C4  0E00               	movlw	0
  6253  0019C6  6E18               	movwf	___awdiv@divisor+1,c
  6254  0019C8  0E40               	movlw	64
  6255  0019CA  6E17               	movwf	___awdiv@divisor,c
  6256  0019CC  EC13  F00C         	call	___awdiv	;wreg free
  6257  0019D0  501E               	movf	EnhancedRead@aux,w,c
  6258  0019D2  2415               	addwf	?___awdiv,w,c
  6259  0019D4  6E1E               	movwf	EnhancedRead@aux,c
  6260  0019D6  501F               	movf	EnhancedRead@aux+1,w,c
  6261  0019D8  2016               	addwfc	?___awdiv+1,w,c
  6262  0019DA  6E1F               	movwf	EnhancedRead@aux+1,c
  6263                           
  6264                           ;analog.c: 38: an[i]=aux;
  6265  0019DC  5020               	movf	EnhancedRead@i,w,c
  6266  0019DE  0D02               	mullw	2
  6267  0019E0  0EB0               	movlw	low _an
  6268  0019E2  24F3               	addwf	prodl,w,c
  6269  0019E4  6ED9               	movwf	fsr2l,c
  6270  0019E6  0E00               	movlw	high _an
  6271  0019E8  20F4               	addwfc	prodh,w,c
  6272  0019EA  6EDA               	movwf	fsr2h,c
  6273  0019EC  C01E  FFDE         	movff	EnhancedRead@aux,postinc2
  6274  0019F0  C01F  FFDD         	movff	EnhancedRead@aux+1,postdec2
  6275  0019F4  2A20               	incf	EnhancedRead@i,f,c
  6276  0019F6  D7CD               	goto	l3133
  6277  0019F8                     __end_of_EnhancedRead:
  6278                           	opt stack 0
  6279                           tblptru	equ	0xFF8
  6280                           tblptrh	equ	0xFF7
  6281                           tblptrl	equ	0xFF6
  6282                           tablat	equ	0xFF5
  6283                           prodh	equ	0xFF4
  6284                           prodl	equ	0xFF3
  6285                           intcon	equ	0xFF2
  6286                           intcon2	equ	0xFF1
  6287                           postinc0	equ	0xFEE
  6288                           wreg	equ	0xFE8
  6289                           postinc1	equ	0xFE6
  6290                           postdec1	equ	0xFE5
  6291                           fsr1h	equ	0xFE2
  6292                           fsr1l	equ	0xFE1
  6293                           postinc2	equ	0xFDE
  6294                           postdec2	equ	0xFDD
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function ___awdiv *****************
  6300 ;; Defined at:
  6301 ;;		line 8 in file "/opt/microchip/xc8/v1.43/sources/common/awdiv.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  dividend        2   20[COMRAM] int 
  6304 ;;  divisor         2   22[COMRAM] int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  quotient        2   26[COMRAM] int 
  6307 ;;  sign            1   25[COMRAM] unsigned char 
  6308 ;;  counter         1   24[COMRAM] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  2   20[COMRAM] int 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6318 ;;      Params:         4       0       0       0       0       0       0       0       0
  6319 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6321 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6322 ;;Total ram usage:        8 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_EnhancedRead
  6329 ;;		_MotorASpeed
  6330 ;;		_MotorBSpeed
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text27
  6335  001826                     __ptext27:
  6336                           	opt stack 0
  6337  001826                     ___awdiv:
  6338                           	opt stack 27
  6339                           
  6340                           ;incstack = 0
  6341  001826  0E00               	movlw	0
  6342  001828  6E1A               	movwf	___awdiv@sign,c
  6343  00182A  AE18               	btfss	___awdiv@divisor+1,7,c
  6344  00182C  D006               	goto	l569
  6345  00182E  6C17               	negf	___awdiv@divisor,c
  6346  001830  1E18               	comf	___awdiv@divisor+1,f,c
  6347  001832  B0D8               	btfsc	status,0,c
  6348  001834  2A18               	incf	___awdiv@divisor+1,f,c
  6349  001836  0E01               	movlw	1
  6350  001838  6E1A               	movwf	___awdiv@sign,c
  6351  00183A                     l569:
  6352  00183A  AE16               	btfss	___awdiv@dividend+1,7,c
  6353  00183C  D006               	goto	l570
  6354  00183E  6C15               	negf	___awdiv@dividend,c
  6355  001840  1E16               	comf	___awdiv@dividend+1,f,c
  6356  001842  B0D8               	btfsc	status,0,c
  6357  001844  2A16               	incf	___awdiv@dividend+1,f,c
  6358  001846  0E01               	movlw	1
  6359  001848  1A1A               	xorwf	___awdiv@sign,f,c
  6360  00184A                     l570:
  6361  00184A  0E00               	movlw	0
  6362  00184C  6E1C               	movwf	___awdiv@quotient+1,c
  6363  00184E  0E00               	movlw	0
  6364  001850  6E1B               	movwf	___awdiv@quotient,c
  6365  001852  5017               	movf	___awdiv@divisor,w,c
  6366  001854  1018               	iorwf	___awdiv@divisor+1,w,c
  6367  001856  B4D8               	btfsc	status,2,c
  6368  001858  D01C               	goto	l577
  6369  00185A  0E01               	movlw	1
  6370  00185C  6E19               	movwf	___awdiv@counter,c
  6371  00185E  D004               	goto	l572
  6372  001860  90D8               	bcf	status,0,c
  6373  001862  3617               	rlcf	___awdiv@divisor,f,c
  6374  001864  3618               	rlcf	___awdiv@divisor+1,f,c
  6375  001866  2A19               	incf	___awdiv@counter,f,c
  6376  001868                     l572:
  6377  001868  AE18               	btfss	___awdiv@divisor+1,7,c
  6378  00186A  D7FA               	goto	l573
  6379  00186C                     u3200:
  6380  00186C  90D8               	bcf	status,0,c
  6381  00186E  361B               	rlcf	___awdiv@quotient,f,c
  6382  001870  361C               	rlcf	___awdiv@quotient+1,f,c
  6383  001872  5017               	movf	___awdiv@divisor,w,c
  6384  001874  5C15               	subwf	___awdiv@dividend,w,c
  6385  001876  5018               	movf	___awdiv@divisor+1,w,c
  6386  001878  5816               	subwfb	___awdiv@dividend+1,w,c
  6387  00187A  A0D8               	btfss	status,0,c
  6388  00187C  D005               	goto	l576
  6389  00187E  5017               	movf	___awdiv@divisor,w,c
  6390  001880  5E15               	subwf	___awdiv@dividend,f,c
  6391  001882  5018               	movf	___awdiv@divisor+1,w,c
  6392  001884  5A16               	subwfb	___awdiv@dividend+1,f,c
  6393  001886  801B               	bsf	___awdiv@quotient,0,c
  6394  001888                     l576:
  6395  001888  90D8               	bcf	status,0,c
  6396  00188A  3218               	rrcf	___awdiv@divisor+1,f,c
  6397  00188C  3217               	rrcf	___awdiv@divisor,f,c
  6398  00188E  2E19               	decfsz	___awdiv@counter,f,c
  6399  001890  D7ED               	goto	u3200
  6400  001892                     l577:
  6401  001892  501A               	movf	___awdiv@sign,w,c
  6402  001894  B4D8               	btfsc	status,2,c
  6403  001896  D004               	goto	l578
  6404  001898  6C1B               	negf	___awdiv@quotient,c
  6405  00189A  1E1C               	comf	___awdiv@quotient+1,f,c
  6406  00189C  B0D8               	btfsc	status,0,c
  6407  00189E  2A1C               	incf	___awdiv@quotient+1,f,c
  6408  0018A0                     l578:
  6409  0018A0  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  6410  0018A4  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  6411  0018A8  0012               	return	
  6412  0018AA                     __end_of___awdiv:
  6413                           	opt stack 0
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           intcon	equ	0xFF2
  6421                           intcon2	equ	0xFF1
  6422                           postinc0	equ	0xFEE
  6423                           wreg	equ	0xFE8
  6424                           postinc1	equ	0xFE6
  6425                           postdec1	equ	0xFE5
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           postinc2	equ	0xFDE
  6429                           postdec2	equ	0xFDD
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _enc *****************
  6435 ;; Defined at:
  6436 ;;		line 7 in file "timer.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6452 ;;      Temps:         20       0       0       0       0       0       0       0       0
  6453 ;;      Totals:        20       0       0       0       0       0       0       0       0
  6454 ;;Total ram usage:       20 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		Interrupt level 2
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	intcode
  6464  000008                     __pintcode:
  6465                           	opt stack 0
  6466  000008                     _enc:
  6467                           	opt stack 27
  6468                           
  6469                           ;incstack = 0
  6470  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6471  00000A  EDA4  F009         	call	int_func,f	;refresh shadow registers
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodh	equ	0xFF4
  6477                           prodl	equ	0xFF3
  6478                           intcon	equ	0xFF2
  6479                           intcon2	equ	0xFF1
  6480                           postinc0	equ	0xFEE
  6481                           wreg	equ	0xFE8
  6482                           postinc1	equ	0xFE6
  6483                           postdec1	equ	0xFE5
  6484                           fsr1h	equ	0xFE2
  6485                           fsr1l	equ	0xFE1
  6486                           postinc2	equ	0xFDE
  6487                           postdec2	equ	0xFDD
  6488                           fsr2h	equ	0xFDA
  6489                           fsr2l	equ	0xFD9
  6490                           status	equ	0xFD8
  6491                           
  6492                           	psect	intcode_body
  6493  001348                     __pintcode_body:
  6494                           	opt stack 27
  6495  001348                     int_func:
  6496                           	opt stack 27
  6497  001348  0006               	pop		; remove dummy address from shadow register refresh
  6498  00134A  CFFA F003          	movff	pclath,??_enc+2
  6499  00134E  CFFB F004          	movff	pclatu,??_enc+3
  6500  001352  CFE9 F005          	movff	fsr0l,??_enc+4
  6501  001356  CFEA F006          	movff	fsr0h,??_enc+5
  6502  00135A  CFE1 F007          	movff	fsr1l,??_enc+6
  6503  00135E  CFE2 F008          	movff	fsr1h,??_enc+7
  6504  001362  CFD9 F009          	movff	fsr2l,??_enc+8
  6505  001366  CFDA F00A          	movff	fsr2h,??_enc+9
  6506  00136A  CFF3 F00B          	movff	prodl,??_enc+10
  6507  00136E  CFF4 F00C          	movff	prodh,??_enc+11
  6508  001372  CFF6 F00D          	movff	tblptrl,??_enc+12
  6509  001376  CFF7 F00E          	movff	tblptrh,??_enc+13
  6510  00137A  CFF8 F00F          	movff	tblptru,??_enc+14
  6511  00137E  CFF5 F010          	movff	tablat,??_enc+15
  6512  001382  C04B  F011         	movff	btemp,??_enc+16
  6513  001386  C04C  F012         	movff	btemp+1,??_enc+17
  6514  00138A  C04D  F013         	movff	btemp+2,??_enc+18
  6515  00138E  C04E  F014         	movff	btemp+3,??_enc+19
  6516                           
  6517                           ;timer.c: 8: if (TMR0IF){
  6518  001392  A4F2               	btfss	intcon,2,c	;volatile
  6519  001394  D029               	goto	i2l304
  6520                           
  6521                           ;timer.c: 9: for (i = 0;i < 10;i++) time[i]++;
  6522  001396  0E00               	movlw	0
  6523  001398  6E4A               	movwf	_i+1,c
  6524  00139A  0E00               	movlw	0
  6525  00139C  6E49               	movwf	_i,c
  6526  00139E                     i2l2807:
  6527  00139E  BE4A               	btfsc	_i+1,7,c
  6528  0013A0  D006               	goto	i2l305
  6529  0013A2  504A               	movf	_i+1,w,c
  6530  0013A4  E11C               	bnz	i2l2817
  6531  0013A6  0E0A               	movlw	10
  6532  0013A8  5C49               	subwf	_i,w,c
  6533  0013AA  B0D8               	btfsc	status,0,c
  6534  0013AC  D018               	goto	i2u300_40
  6535  0013AE                     i2l305:
  6536  0013AE  0E60               	movlw	low _time
  6537  0013B0  6E01               	movwf	??_enc& (0+255),c
  6538  0013B2  0E00               	movlw	high _time
  6539  0013B4  6E02               	movwf	(??_enc+1)& (0+255),c
  6540  0013B6  90D8               	bcf	status,0,c
  6541  0013B8  3449               	rlcf	_i,w,c
  6542  0013BA  6ED9               	movwf	fsr2l,c
  6543  0013BC  344A               	rlcf	_i+1,w,c
  6544  0013BE  6EDA               	movwf	fsr2h,c
  6545  0013C0  90D8               	bcf	status,0,c
  6546  0013C2  36D9               	rlcf	fsr2l,f,c
  6547  0013C4  36DA               	rlcf	fsr2h,f,c
  6548  0013C6  5001               	movf	??_enc,w,c
  6549  0013C8  26D9               	addwf	fsr2l,f,c
  6550  0013CA  5002               	movf	??_enc+1,w,c
  6551  0013CC  22DA               	addwfc	fsr2h,f,c
  6552  0013CE  2ADE               	incf	postinc2,f,c
  6553  0013D0  0E00               	movlw	0
  6554  0013D2  22DE               	addwfc	postinc2,f,c
  6555  0013D4  22DE               	addwfc	postinc2,f,c
  6556  0013D6  22DE               	addwfc	postinc2,f,c
  6557  0013D8  4A49               	infsnz	_i,f,c
  6558  0013DA  2A4A               	incf	_i+1,f,c
  6559  0013DC  D7E0               	goto	i2l2807
  6560  0013DE                     i2u300_40:
  6561  0013DE                     i2l2817:
  6562                           
  6563                           ;timer.c: 10: TMR0H = 0xF8;
  6564  0013DE  0EF8               	movlw	248
  6565  0013E0  6ED7               	movwf	4055,c	;volatile
  6566                           
  6567                           ;timer.c: 11: TMR0L = 0x2F;
  6568  0013E2  0E2F               	movlw	47
  6569  0013E4  6ED6               	movwf	4054,c	;volatile
  6570                           
  6571                           ;timer.c: 12: TMR0IF = 0;
  6572  0013E6  94F2               	bcf	intcon,2,c	;volatile
  6573  0013E8                     i2l304:
  6574  0013E8  C014  F04E         	movff	??_enc+19,btemp+3
  6575  0013EC  C013  F04D         	movff	??_enc+18,btemp+2
  6576  0013F0  C012  F04C         	movff	??_enc+17,btemp+1
  6577  0013F4  C011  F04B         	movff	??_enc+16,btemp
  6578  0013F8  C010  FFF5         	movff	??_enc+15,tablat
  6579  0013FC  C00F  FFF8         	movff	??_enc+14,tblptru
  6580  001400  C00E  FFF7         	movff	??_enc+13,tblptrh
  6581  001404  C00D  FFF6         	movff	??_enc+12,tblptrl
  6582  001408  C00C  FFF4         	movff	??_enc+11,prodh
  6583  00140C  C00B  FFF3         	movff	??_enc+10,prodl
  6584  001410  C00A  FFDA         	movff	??_enc+9,fsr2h
  6585  001414  C009  FFD9         	movff	??_enc+8,fsr2l
  6586  001418  C008  FFE2         	movff	??_enc+7,fsr1h
  6587  00141C  C007  FFE1         	movff	??_enc+6,fsr1l
  6588  001420  C006  FFEA         	movff	??_enc+5,fsr0h
  6589  001424  C005  FFE9         	movff	??_enc+4,fsr0l
  6590  001428  C004  FFFB         	movff	??_enc+3,pclatu
  6591  00142C  C003  FFFA         	movff	??_enc+2,pclath
  6592  001430  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6593  001432  0011               	retfie		f
  6594  001434                     __end_of_enc:
  6595                           	opt stack 0
  6596  0000                     pclatu	equ	0xFFB
  6597                           pclath	equ	0xFFA
  6598                           tblptru	equ	0xFF8
  6599                           tblptrh	equ	0xFF7
  6600                           tblptrl	equ	0xFF6
  6601                           tablat	equ	0xFF5
  6602                           prodh	equ	0xFF4
  6603                           prodl	equ	0xFF3
  6604                           intcon	equ	0xFF2
  6605                           intcon2	equ	0xFF1
  6606                           postinc0	equ	0xFEE
  6607                           fsr0h	equ	0xFEA
  6608                           fsr0l	equ	0xFE9
  6609                           wreg	equ	0xFE8
  6610                           postinc1	equ	0xFE6
  6611                           postdec1	equ	0xFE5
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           pclatu	equ	0xFFB
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           intcon2	equ	0xFF1
  6629                           postinc0	equ	0xFEE
  6630                           fsr0h	equ	0xFEA
  6631                           fsr0l	equ	0xFE9
  6632                           wreg	equ	0xFE8
  6633                           postinc1	equ	0xFE6
  6634                           postdec1	equ	0xFE5
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           postinc2	equ	0xFDE
  6638                           postdec2	equ	0xFDD
  6639                           fsr2h	equ	0xFDA
  6640                           fsr2l	equ	0xFD9
  6641                           status	equ	0xFD8
  6642                           
  6643                           	psect	rparam
  6644  0000                     pclatu	equ	0xFFB
  6645                           pclath	equ	0xFFA
  6646                           tblptru	equ	0xFF8
  6647                           tblptrh	equ	0xFF7
  6648                           tblptrl	equ	0xFF6
  6649                           tablat	equ	0xFF5
  6650                           prodh	equ	0xFF4
  6651                           prodl	equ	0xFF3
  6652                           intcon	equ	0xFF2
  6653                           intcon2	equ	0xFF1
  6654                           postinc0	equ	0xFEE
  6655                           fsr0h	equ	0xFEA
  6656                           fsr0l	equ	0xFE9
  6657                           wreg	equ	0xFE8
  6658                           postinc1	equ	0xFE6
  6659                           postdec1	equ	0xFE5
  6660                           fsr1h	equ	0xFE2
  6661                           fsr1l	equ	0xFE1
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668                           	psect	temp
  6669  00004B                     btemp:
  6670                           	opt stack 0
  6671  00004B                     	ds	1
  6672  0000                     int$flags	set	btemp
  6673  0000                     wtemp6	set	btemp+1
  6674                           pclatu	equ	0xFFB
  6675                           pclath	equ	0xFFA
  6676                           tblptru	equ	0xFF8
  6677                           tblptrh	equ	0xFF7
  6678                           tblptrl	equ	0xFF6
  6679                           tablat	equ	0xFF5
  6680                           prodh	equ	0xFF4
  6681                           prodl	equ	0xFF3
  6682                           intcon	equ	0xFF2
  6683                           intcon2	equ	0xFF1
  6684                           postinc0	equ	0xFEE
  6685                           fsr0h	equ	0xFEA
  6686                           fsr0l	equ	0xFE9
  6687                           wreg	equ	0xFE8
  6688                           postinc1	equ	0xFE6
  6689                           postdec1	equ	0xFE5
  6690                           fsr1h	equ	0xFE2
  6691                           fsr1l	equ	0xFE1
  6692                           postinc2	equ	0xFDE
  6693                           postdec2	equ	0xFDD
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      74
    BANK0           160     25     142
    BANK1           256     19      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    read_cal$509	PTR int  size(2) Largest target is 18
		 -> mins(BANK0[18]), an(BANK0[18]), 

    read_cal$507	PTR int  size(2) Largest target is 18
		 -> maxs(BANK0[18]), an(BANK0[18]), 

    read_cal$505	PTR int  size(2) Largest target is 18
		 -> mins(BANK0[18]), an(BANK0[18]), 

    read_cal$503	PTR int  size(2) Largest target is 18
		 -> maxs(BANK0[18]), an(BANK0[18]), 


Critical Paths under _main in COMRAM

    _main->___ftadd
    _mspeed->___ftadd
    _MotorBSpeed->___awdiv
    _MotorASpeed->___awdiv
    _line_cal->___aldiv
    ___aldiv->___lmul
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _EnhancedRead->___awdiv

Critical Paths under _enc in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_mspeed
    _mspeed->___fttol
    ___fttol->___ftadd

Critical Paths under _enc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _enc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _enc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _enc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _enc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _enc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _enc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _enc in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   24419
                                             53 COMRAM     2     2      0
                                              0 BANK1     19    19      0
                       _EnhancedRead
                            ___almod
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           _init_cal
                           _init_tms
                           _line_cal
                             _mspeed
                           _read_cal
                               _setA
                               _setB
                               _setC
                               _setD
                       _twidde_start
 ---------------------------------------------------------------------------------
 (1) _twidde_start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setD                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setC                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setB                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setA                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_cal                                            19    19      0    1040
                                             20 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (1) _mspeed                                               4     0      4    4138
                                             21 BANK0      4     0      4
                        _MotorASpeed
                        _MotorBSpeed
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _MotorBSpeed                                          3     1      2    1301
                                             28 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _MotorASpeed                                          3     1      2    1335
                                             28 COMRAM     3     1      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _line_cal                                            28    28      0    2410
                                             46 COMRAM     4     4      0
                                              0 BANK0     24    24      0
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     805
                                             32 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_tms                                             0     0      0       0
                          _MotorsPWM
                            _an_init
                            _init_io
 ---------------------------------------------------------------------------------
 (2) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _an_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorsPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_cal                                             2     2      0     198
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     551
                                              6 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     155
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4541
                                             32 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     378
                                             20 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    5246
                                             47 COMRAM     6     0      6
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3326
                                             28 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2833
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8     613
                                             20 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (1) _EnhancedRead                                         4     4      0    1183
                                             28 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _enc                                                 20    20      0       0
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnhancedRead
     ___awdiv
   ___almod
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   _init_cal
   _init_tms
     _MotorsPWM
     _an_init
     _init_io
   _line_cal
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _mspeed
     _MotorASpeed
       ___awdiv
     _MotorBSpeed
       ___awdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _read_cal
   _setA
   _setB
   _setC
   _setD
   _twidde_start

 _enc (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      25       7       14.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      20        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Aug  7 03:50:23 2017

                      _i 0049                       l50 0106                       l43 005E  
                     l44 06B8                       l60 02E4                       l53 0146  
                     l45 0064                       l70 0498                       l62 030A  
                     l54 0194                       l46 008E                       l71 047E  
                     l55 01CA                       l80 067C                       l64 03B0  
                     l48 00B0                       l57 022E                       l49 00BE  
                     l74 04AC                       l58 0270                       l75 058C  
                     l59 02B2                       l77 05AA                       l69 041A  
                     l78 05AE                       l79 062A             ___awdiv@sign 001A  
                     _an 00B0                       _cs 00E5                       _kd 003F  
                     _es 0038                       _kp 0042                       _lp 008A  
                     _ls 00DB              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 00C7             ___ftadd@exp2 00C6             ___ftadd@sign 00C5  
                    l131 0706                      l116 199A                      l124 1934  
                    l140 08C4                      l126 196C                      l134 079C  
                    l119 19AE                      l143 0956                      l128 198C  
                    l152 0B14                      l161 0C66                      l137 082E  
                    l146 09EC                      l155 0B8A                      l172 0EEE  
                    l260 1714                      l413 1A08                      l165 0CB2  
                    l253 16CC                      l245 167A                      l149 0A7E  
                    l414 1A1C                      l158 0BDE                      l168 0DE6  
                    l264 172C                      l169 0ECE                      l249 1692  
                    l620 1546                      l460 1496                      l268 1768  
                    l701 12FE                      l461 148A                      l470 15CA  
                    l622 1584                      l702 130E                      l471 15DE  
                    l623 157A                      l616 1528                      l464 14CA  
                    l473 15FC                      l617 151E                      l465 14D8  
                    l457 1450                      l570 184A                      l474 15F0  
                    l706 1BA4                      l466 14EE                      l458 1468  
                    l619 155C                      l651 0FA6                      l572 1868  
                    l724 121C                      l716 114A                      l573 1860  
                    l477 1624                      l661 101C                      l725 120C  
                    l478 1632                      l670 106E                      l662 1010  
                    l654 0FB4                      l718 11F0                      l479 1648  
                    l671 1062                      l655 0FBC                      l647 0F6C  
                    l727 1242                      l719 11DC                      l576 1888  
                    l656 102A                      l577 1892                      l569 183A  
                    l673 1098                      l578 18A0                      l674 10B6  
                    l675 10EA                      l597 1AEE                      l695 127C  
                    l688 17C6                      l689 17F6                      l697 12A4  
                    l698 12D6                      l699 12E6             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _ckd 003C                      _ckp 00E9                      _enc 0008  
                    prod 000FF3                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l3201 0812                     l3133 1992  
                   l3161 1924                     l3171 1954                     l3219 093A  
                   ?_enc 0001                     l3173 195C                     l3237 0A62  
                   l3603 01EC                     l3621 02B2                     l3615 0270  
                   l3297 0EEE                     l3289 0E8C                     l3609 022E  
                   l3651 03CE                     l3657 03FC                     l3683 0486  
                   l3675 0468                     l2895 1822                     l2979 16CC  
                   l2995 1768                     u3200 186C                     u3300 1740  
                   u4021 1264                     u3301 173A                     u3400 158E  
                   u3320 175C                     u4041 128C                     u3250 16A6  
                   u4131 1126                     u3251 16A0                     u4300 01C0  
                   u4150 1170                     u3270 16C0                     u3318 1742  
                   u4310 01E8                     u4230 00F0                     u3360 1510  
                   u4400 0362                     u4320 020C                     u4401 035C  
                   u3530 1954                     u3610 093A                     u4330 022A  
                   u4155 1166                     u3460 149A                     u3268 16A8  
                   u3620 0954                     u4500 056C                     u4340 024E  
                   u4260 0132                     u4190 1226                     u3710 0DDC  
                   u4510 0582                     u4350 026C                     u3720 0E8C  
                   u3640 0A62                     u3560 0704                     u4520 05A4  
                   u4360 0290                     u4280 018A                     u3650 0A7C  
                   u4450 03FC                     u4418 0364                     u4370 02AE  
                   u3811 0F0E                     u3740 0EE2                     u3580 0812  
                   u4460 045E                     u4380 02D2                     u3821 0F2A  
                   u3910 0FE4                     u3590 082C                     u4550 06A4  
                   u3680 0BDC                     u4480 0486                     u3850 0F5E  
                   u3780 1600                     u3950 1036                     u3880 0F98  
                   u3980 107A                     _TXIF 007CF4                     _main 0012  
           ___ftpack@arg 0015                     _maxs 009E                     _setA 1C0A  
                   _setB 1C00                     _setC 1BF6                     _setD 1BEC  
                   _mins 008C             ___ftpack@exp 0018                     _time 0060  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 004B                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000    __size_of_twidde_start 0024  
           ___ftmul@cntr 002E             ___param_bank 000000             ___ftmul@sign 002F  
           ___fttol@exp1 00D6                    ??_enc 0001             ___fttol@lval 00D2  
          __CFG_PLLDIV$5 000000          __end_of___aldiv 1500          __end_of___almod 165A  
                  ?_main 0001                    ?_setA 0001                    ?_setB 0001  
                  ?_setC 0001                    ?_setD 0001          __end_of___awdiv 18AA  
        __end_of___ftadd 1110                    _CMCON 000FB4          __end_of___ftneg 1BB2  
        __end_of___ftmul 1348          ___awdiv@divisor 0017          __end_of___fttol 1254  
         __CFG_DEBUG$OFF 000000                    i2l304 13E8                    i2l305 13AE  
        ___awdiv@counter 0019                    _TMR0H 000FD7                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _SPBRG 000FAF  
          __CFG_USBDIV$2 000000                    _TXREG 000FAD          __end_of_an_init 1B6A  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0019            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___awtoft@sign 0020          __end_of_init_io 1B40            ___ftpack@sign 0019  
                  main@a 0102                    main@b 0104                    main@i 0106  
                  pclath 000FFA                    tablat 000FF5             _twidde_start 1B6A  
                  status 000FD8                    wtemp6 004C           __CFG_ICPRT$OFF 000000  
   __end_of_EnhancedRead 19F8           __CFG_MCLRE$OFF 000000          __initialization 18AA  
           __end_of_main 06EA             __end_of_setA 1C14             __end_of_setB 1C0A  
           __end_of_setC 1C00             __end_of_setD 1BF6                   ??_main 0036  
          ___fttol@sign1 00D1                   ??_setA 0015                   ??_setB 0015  
                 ??_setC 0015                   ??_setD 0015            __activetblptr 000002  
        __CFG_CCP2MX$OFF 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         ___awdiv@dividend 0015  
       __end_of___awtoft 1B12         __end_of___ftpack 15AE                   i2l2807 139E  
                 i2l2817 13DE                   _TMR0IF 007F92                   _SPBRGH 000FB0  
                 _TMR2ON 007E52            ??_MotorASpeed 001F            ??_MotorBSpeed 001F  
         __CFG_XINST$OFF 000000              line_cal@aux 00D4                   ___ftge 1796  
                 ___lmul 19F8                ??___aldiv 0029                ??___almod 001D  
              ??___awdiv 0019                ??___ftadd 00C2           __CFG_STVREN$ON 000000  
                 _calval 0113                ??___ftneg 0018                ??___ftmul 0027  
              ??___fttol 00CC         __end_of_line_cal 0EFA         __end_of_init_cal 198E  
       __end_of_read_cal 0B8C                   _old_lp 0088                   _intern 0045  
       __end_of_init_tms 1A9C                   clear_0 18F0                   clear_1 18FC  
              ??_an_init 0015         ___awdiv@quotient 001B                   _mspeed 1BB2  
                 _status 00EC                   main@fs 010A       __size_of_MotorsPWM 003E  
  ___ftmul@f3_as_product 002B                ??_init_io 0015             __pdataCOMRAM 0038  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
          _line_cal$2246 00C2               __accesstop 0060  __end_of__initialization 190E  
        __CFG_PBADEN$OFF 000000               ___ftadd@f1 0030               ___ftadd@f2 0033  
             ___ftge@ff1 0015               ___ftge@ff2 0018            ___rparam_used 000001  
             ___ftneg@f1 0015               ___awtoft@c 001D               ___ftmul@f1 0021  
             ___ftmul@f2 0024               ___fttol@f1 00C8           __pcstackCOMRAM 0001  
           __pidataBANK0 1BCC      __end_of_MotorASpeed 16FC      __end_of_MotorBSpeed 1796  
             __pbssBANK0 0060               __pbssBANK1 0113    __size_of_EnhancedRead 006A  
      __end_of_MotorsPWM 1ADA                  ?___ftge 0015                  ?___lmul 0015  
         ___lmul@product 001D                ?___awtoft 001D                ?___ftpack 0015  
                ?_mspeed 00D7                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
           _EnhancedRead 198E          __CFG_VREGEN$OFF 000000                ?_line_cal 0001  
              ?_init_cal 0001                ?_read_cal 0001                ?_init_tms 0001  
            _MotorASpeed 165A              _MotorBSpeed 16FC                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 1434                  ___almod 15AE  
        __size_of___ftge 0090                  ___awdiv 1826          __size_of___lmul 0056  
                ___ftadd 0EFA                  ___ftneg 1B8E                  ___ftmul 1254  
                ___fttol 1110                  __pcinit 18AA                  _an_init 1B40  
             ??___awtoft 0020               ??___ftpack 001A                  __ramtop 0800  
                __ptext0 0012                  __ptext1 1B6A                  __ptext2 1BEC  
        __size_of_mspeed 001A                  __ptext3 1BF6                  __ptext4 1C00  
                __ptext5 1C0A                  __ptext6 06EA                  __ptext7 1BB2  
                __ptext8 16FC                  __ptext9 165A                _T0CONbits 000FD5  
              _T1CONbits 000FCD                _T2CONbits 000FCA             __size_of_enc 142C  
                _init_io 1B12         ___aldiv@dividend 0021                  main@dif 010E  
                main@der 0100           __pintcode_body 1348     end_of_initialization 190E  
             ??_line_cal 002F               ??_init_cal 0015            __Lmediumconst 0000  
                int_func 1348               ??_read_cal 0015               ??_init_tms 0015  
                mspeed@a 00D7                  mspeed@b 00D9                _RCSTAbits 000FAB  
       ___aldiv@quotient 002B                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
              _PORTAbits 000F80                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISDbits 000F95  
              _TRISEbits 000F96              _CCP1CONbits 000FBD              _CCP2CONbits 000FBA  
              _TXSTAbits 000FAC              ___ftmul@exp 002A           __end_of___ftge 1826  
         __end_of___lmul 1A4E              _BAUDCONbits 000FB8            __pidataCOMRAM 1BDF  
         __end_of_mspeed 1BCC      start_initialization 18AA              __end_of_enc 1434  
             line_cal@ok 00CE                _MotorsPWM 1A9C                 ??___ftge 001B  
               ??___lmul 001D              __pdataBANK0 00DB         __CFG_LPT1OSC$OFF 000000  
               ??_mspeed 0036        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0045            __pcstackBANK0 00C2            __pcstackBANK1 0100  
           _read_cal$503 001E             _read_cal$505 0020             _read_cal$507 0022  
           _read_cal$509 0024            ?_twidde_start 0001             ?_MotorASpeed 001D  
           ?_MotorBSpeed 001D        __size_of_line_cal 036E        __size_of_init_cal 0072  
      __size_of_read_cal 04A2        __size_of_init_tms 004E               ?_MotorsPWM 0001  
              __pintcode 0008                 ?___aldiv 0021                 ?___almod 0015  
               ?___awdiv 0015                 ?___ftadd 0030                 ?___ftneg 0015  
               ?___ftmul 0021                 ?___fttol 00C8                 ?_an_init 0001  
       ___almod@dividend 0015                 ?_init_io 0001             MotorASpeed@S 001D  
           MotorBSpeed@S 001D           ??_twidde_start 0015          ___aldiv@divisor 0025  
               _T2OUTPS0 007E53                 _T2OUTPS1 007E54                 _T2OUTPS2 007E55  
               _T2OUTPS3 007E56          ___aldiv@counter 0029            EnhancedRead@i 0020  
               i2u300_40 13DE                 _UCFGbits 000F6F                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000                 _UCONbits 000F6D               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                main@i_338 0108  
              main@speed 0111        ___lmul@multiplier 0015              _INTCON2bits 000FF1  
              copy_data0 18BE                copy_data1 18DE                 __Hrparam 0000  
              line_cal@a 00C6                line_cal@b 00CA                line_cal@i 00D6  
              line_cal@j 00D8                 __Lrparam 0000                init_cal@i 0015  
            ??_MotorsPWM 0015            line_cal@value 00D0                read_cal@i 0026  
       __size_of___aldiv 00CC         __size_of___almod 00AC         __size_of___awdiv 0084  
       __size_of___ftadd 0216         __size_of___ftneg 0024         __size_of___ftmul 00F4  
       __size_of___fttol 0144                 ___awtoft 1ADA                 ___ftpack 1500  
       __size_of_an_init 002A         __size_of_init_io 002E                 _best_err 0047  
               __ptext10 0B8C                 __ptext11 19F8                 __ptext20 1254  
               __ptext12 1434                 __ptext21 1796                 __ptext13 1A4E  
               __ptext22 0EFA                 __ptext14 1B12                 __ptext23 1ADA  
               __ptext15 1B40                 __ptext24 1500                 __ptext16 1A9C  
               __ptext25 15AE                 __ptext17 191C                 __ptext26 198E  
               __ptext18 1110                 __ptext27 1826                 __ptext19 1B8E  
        ___almod@divisor 0019          ___almod@counter 001D                 _line_cal 0B8C  
               _init_cal 191C            __size_of_main 06D8                 _read_cal 06EA  
          __size_of_setA 000A            __size_of_setB 000A            __size_of_setC 000A  
               _init_tms 1A4E            __size_of_setD 000A     __size_of_MotorASpeed 00A2  
   __size_of_MotorBSpeed 009A                 int$flags 004B          EnhancedRead@aux 001E  
   __end_of_twidde_start 1B8E                 main@faux 010C    __CFG_CPUDIV$OSC1_PLL2 000000  
          ?_EnhancedRead 0001               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3           ??_EnhancedRead 001D             ___aldiv@sign 002A  
     __CFG_FOSC$HSPLL_HS 000000             ___almod@sign 001E  
